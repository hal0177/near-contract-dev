{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/ethereum-cryptography/esm/utils.js","../node_modules/ethereum-cryptography/esm/keccak.js","../node_modules/web3-errors/src/error_codes.ts","../node_modules/web3-errors/src/web3_error_base.ts","../node_modules/web3-errors/src/errors/generic_errors.ts","../node_modules/web3-errors/src/errors/utils_errors.ts","../node_modules/web3-errors/src/errors/rpc_error_messages.ts","../node_modules/web3-errors/src/errors/rpc_errors.ts","../node_modules/web3-errors/src/errors/schema_errors.ts","../node_modules/zod/lib/index.mjs","../node_modules/web3-validator/src/errors.ts","../node_modules/web3-validator/src/constants.ts","../node_modules/web3-validator/src/validation/abi.ts","../node_modules/web3-validator/src/validation/string.ts","../node_modules/web3-validator/src/utils.ts","../node_modules/web3-validator/src/validation/bytes.ts","../node_modules/web3-validator/src/validation/address.ts","../node_modules/web3-types/src/data_format_types.ts","../node_modules/web3-validator/src/validation/numbers.ts","../node_modules/web3-validator/src/validation/block.ts","../node_modules/web3-validator/src/validation/bloom.ts","../node_modules/web3-validator/src/validation/boolean.ts","../node_modules/web3-validator/src/validation/object.ts","../node_modules/web3-validator/src/validation/topic.ts","../node_modules/web3-validator/src/validation/filter.ts","../node_modules/web3-validator/src/formats.ts","../node_modules/web3-validator/src/validator.ts","../node_modules/web3-validator/src/web3_validator.ts","../node_modules/web3-validator/src/default_validator.ts","../node_modules/web3-utils/src/uint8array.ts","../node_modules/web3-utils/src/converters.ts","../node_modules/web3-utils/src/validation.ts","../node_modules/web3-utils/src/string_manipulation.ts","../node_modules/web3-utils/src/hash.ts","../node_modules/web3-eth-abi/src/utils.ts","../node_modules/abitype/dist/chunk-WP7KDV47.mjs","../node_modules/abitype/dist/chunk-NHABU752.mjs","../node_modules/abitype/dist/index.mjs","../node_modules/web3-eth-abi/src/coders/utils.ts","../node_modules/web3-eth-abi/src/coders/base/address.ts","../node_modules/web3-eth-abi/src/coders/base/numbersLimits.ts","../node_modules/web3-eth-abi/src/coders/base/number.ts","../node_modules/web3-eth-abi/src/coders/base/bool.ts","../node_modules/web3-eth-abi/src/coders/base/bytes.ts","../node_modules/web3-eth-abi/src/coders/base/string.ts","../node_modules/web3-eth-abi/src/coders/base/utils.ts","../node_modules/web3-eth-abi/src/coders/base/array.ts","../node_modules/web3-eth-abi/src/coders/base/index.ts","../node_modules/web3-eth-abi/src/coders/base/tuple.ts","../node_modules/web3-eth-abi/src/coders/encode.ts","../node_modules/web3-eth-abi/src/api/functions_api.ts","../src/contract.ts"],"sourcesContent":["// make PromiseIndex a nominal typing\nvar PromiseIndexBrand;\n(function (PromiseIndexBrand) {\n    PromiseIndexBrand[PromiseIndexBrand[\"_\"] = -1] = \"_\";\n})(PromiseIndexBrand || (PromiseIndexBrand = {}));\nconst TYPE_KEY = \"typeInfo\";\nvar TypeBrand;\n(function (TypeBrand) {\n    TypeBrand[\"BIGINT\"] = \"bigint\";\n    TypeBrand[\"DATE\"] = \"date\";\n})(TypeBrand || (TypeBrand = {}));\nexport const ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport const ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ACCOUNT_ID_REGEX = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\n/**\n * Concat two Uint8Array\n * @param array1\n * @param array2\n * @returns the concatenation of two array\n */\nexport function concat(array1, array2) {\n    const mergedArray = new Uint8Array(array1.length + array2.length);\n    mergedArray.set(array1);\n    mergedArray.set(array2, array1.length);\n    return mergedArray;\n}\n/**\n * Asserts that the expression passed to the function is truthy, otherwise throws a new Error with the provided message.\n *\n * @param expression - The expression to be asserted.\n * @param message - The error message to be printed.\n */\nexport function assert(expression, message) {\n    if (!expression) {\n        throw new Error(\"assertion failed: \" + message);\n    }\n}\nexport function getValueWithOptions(value, options = {\n    deserializer: deserialize,\n}) {\n    if (value === null) {\n        return options?.defaultValue ?? null;\n    }\n    const deserialized = deserialize(value);\n    if (deserialized === undefined || deserialized === null) {\n        return options?.defaultValue ?? null;\n    }\n    if (options?.reconstructor) {\n        return options.reconstructor(deserialized);\n    }\n    return deserialized;\n}\nexport function serializeValueWithOptions(value, { serializer } = {\n    serializer: serialize,\n}) {\n    return serializer(value);\n}\nexport function serialize(valueToSerialize) {\n    return encode(JSON.stringify(valueToSerialize, function (key, value) {\n        if (typeof value === \"bigint\") {\n            return {\n                value: value.toString(),\n                [TYPE_KEY]: TypeBrand.BIGINT,\n            };\n        }\n        if (typeof this[key] === \"object\" &&\n            this[key] !== null &&\n            this[key] instanceof Date) {\n            return {\n                value: this[key].toISOString(),\n                [TYPE_KEY]: TypeBrand.DATE,\n            };\n        }\n        return value;\n    }));\n}\nexport function deserialize(valueToDeserialize) {\n    return JSON.parse(decode(valueToDeserialize), (_, value) => {\n        if (value !== null &&\n            typeof value === \"object\" &&\n            Object.keys(value).length === 2 &&\n            Object.keys(value).every((key) => [\"value\", TYPE_KEY].includes(key))) {\n            switch (value[TYPE_KEY]) {\n                case TypeBrand.BIGINT:\n                    return BigInt(value[\"value\"]);\n                case TypeBrand.DATE:\n                    return new Date(value[\"value\"]);\n            }\n        }\n        return value;\n    });\n}\n/**\n * Validates the Account ID according to the NEAR protocol\n * [Account ID rules](https://nomicon.io/DataStructures/Account#account-id-rules).\n *\n * @param accountId - The Account ID string you want to validate.\n */\nexport function validateAccountId(accountId) {\n    return (accountId.length >= 2 &&\n        accountId.length <= 64 &&\n        ACCOUNT_ID_REGEX.test(accountId));\n}\n/**\n * A subset of NodeJS TextEncoder API\n */\nexport class TextEncoder {\n    encode(s) {\n        return env.utf8_string_to_uint8array(s);\n    }\n}\n/**\n * A subset of NodeJS TextDecoder API. Only support utf-8 and latin1 encoding.\n */\nexport class TextDecoder {\n    constructor(encoding = \"utf-8\") {\n        this.encoding = encoding;\n    }\n    decode(a) {\n        if (this.encoding == \"utf-8\") {\n            return env.uint8array_to_utf8_string(a);\n        }\n        else if (this.encoding == \"latin1\") {\n            return env.uint8array_to_latin1_string(a);\n        }\n        else {\n            throw new Error(\"unsupported encoding: \" + this.encoding);\n        }\n    }\n}\n/**\n * Convert a string to Uint8Array, each character must have a char code between 0-255.\n * @param s - string that with only Latin1 character to convert\n * @returns result Uint8Array\n */\nexport function bytes(s) {\n    return env.latin1_string_to_uint8array(s);\n}\n/**\n * Convert a Uint8Array to string, each uint8 to the single character of that char code\n * @param a - Uint8Array to convert\n * @returns result string\n */\nexport function str(a) {\n    return env.uint8array_to_latin1_string(a);\n}\n/**\n * Encode the string to Uint8Array with UTF-8 encoding\n * @param s - String to encode\n * @returns result Uint8Array\n */\nexport function encode(s) {\n    return env.utf8_string_to_uint8array(s);\n}\n/**\n * Decode the Uint8Array to string in UTF-8 encoding\n * @param a - array to decode\n * @returns result string\n */\nexport function decode(a) {\n    return env.uint8array_to_utf8_string(a);\n}\n","import { base58 } from \"@scure/base\";\nimport { concat } from \"../utils\";\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nvar DataLength;\n(function (DataLength) {\n    DataLength[DataLength[\"ED25519\"] = 32] = \"ED25519\";\n    DataLength[DataLength[\"SECP256K1\"] = 64] = \"SECP256K1\";\n})(DataLength || (DataLength = {}));\nfunction getCurveType(curveType) {\n    switch (curveType) {\n        case CurveType.ED25519:\n        case CurveType.SECP256K1:\n            return curveType;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction dataLength(curveType) {\n    switch (curveType) {\n        case CurveType.ED25519:\n        case CurveType.SECP256K1:\n            return {\n                [CurveType.ED25519]: DataLength.ED25519,\n                [CurveType.SECP256K1]: DataLength.SECP256K1,\n            }[curveType];\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction splitKeyTypeData(value) {\n    const idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [\n            curveTypeFromStr(value.substring(0, idx)),\n            value.substring(idx + 1),\n        ];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length, expectedLength) {\n        super(`Invalid length: ${length}. Expected: ${expectedLength}`);\n        this.length = length;\n        this.expectedLength = expectedLength;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\n/**\n * A abstraction on top of the NEAR public key string.\n */\nexport class PublicKey {\n    /**\n     * @param data - The string you want to create a PublicKey from.\n     */\n    constructor(data) {\n        const curveLenght = dataLength(data[0]);\n        if (data.length !== curveLenght + 1) {\n            throw new InvalidLengthError(data.length, curveLenght + 1);\n        }\n        this.type = getCurveType(data[0]);\n        this.data = data;\n    }\n    /**\n     * The curve type of the public key.\n     */\n    curveType() {\n        return this.type;\n    }\n    /**\n     * Create a public key from a public key string.\n     *\n     * @param publicKeyString - The public key string you want to create a PublicKey from.\n     */\n    static fromString(publicKeyString) {\n        const [curve, keyData] = splitKeyTypeData(publicKeyString);\n        let data;\n        try {\n            data = base58.decode(keyData);\n        }\n        catch (error) {\n            throw new Base58Error(error.message);\n        }\n        return new PublicKey(concat(new Uint8Array([curve]), data));\n    }\n}\n","/**\n * A Promise result in near can be one of:\n * - NotReady = 0 - the promise you are specifying is still not ready, not yet failed nor successful.\n * - Successful = 1 - the promise has been successfully executed and you can retrieve the resulting value.\n * - Failed = 2 - the promise execution has failed.\n */\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\n/**\n * A promise error can either be due to the promise failing or not yet being ready.\n */\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","import { assert, str, encode, decode, } from \"./utils\";\nimport { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\n/**\n * Logs parameters in the NEAR WASM virtual machine.\n *\n * @param params - Parameters to log.\n */\nexport function log(...params) {\n    env.log(params.reduce((accumulated, parameter, index) => {\n        // Stringify undefined\n        const param = parameter === undefined ? \"undefined\" : parameter;\n        // Convert Objects to strings and convert to string\n        const stringified = typeof param === \"object\" ? JSON.stringify(param) : `${param}`;\n        if (index === 0) {\n            return stringified;\n        }\n        return `${accumulated} ${stringified}`;\n    }, \"\"));\n}\n/**\n * Returns the account ID of the account that signed the transaction.\n * Can only be called in a call or initialize function.\n */\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return str(env.read_register(0));\n}\n/**\n * Returns the public key of the account that signed the transaction.\n * Can only be called in a call or initialize function.\n */\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\n/**\n * Returns the account ID of the account that called the function.\n * Can only be called in a call or initialize function.\n */\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return str(env.read_register(0));\n}\n/**\n * Returns the account ID of the current contract - the contract that is being executed.\n */\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return str(env.read_register(0));\n}\n/**\n * Returns the current block index.\n */\nexport function blockIndex() {\n    return env.block_index();\n}\n/**\n * Returns the current block height.\n */\nexport function blockHeight() {\n    return blockIndex();\n}\n/**\n * Returns the current block timestamp.\n */\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\n/**\n * Returns the current epoch height.\n */\nexport function epochHeight() {\n    return env.epoch_height();\n}\n/**\n * Returns the amount of NEAR attached to this function call.\n * Can only be called in payable functions.\n */\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\n/**\n * Returns the amount of Gas that was attached to this function call.\n */\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\n/**\n * Returns the amount of Gas that has been used by this function call until now.\n */\nexport function usedGas() {\n    return env.used_gas();\n}\n/**\n * Returns the current account's account balance.\n */\nexport function accountBalance() {\n    return env.account_balance();\n}\n/**\n * Returns the current account's locked balance.\n */\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\n/**\n * Reads the value from NEAR storage that is stored under the provided key.\n *\n * @param key - The key to read from storage.\n */\nexport function storageReadRaw(key) {\n    const returnValue = env.storage_read(key, 0);\n    if (returnValue !== 1n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n/**\n * Reads the utf-8 string value from NEAR storage that is stored under the provided key.\n *\n * @param key - The utf-8 string key to read from storage.\n */\nexport function storageRead(key) {\n    const ret = storageReadRaw(encode(key));\n    if (ret !== null) {\n        return decode(ret);\n    }\n    return null;\n}\n/**\n * Checks for the existance of a value under the provided key in NEAR storage.\n *\n * @param key - The key to check for in storage.\n */\nexport function storageHasKeyRaw(key) {\n    return env.storage_has_key(key) === 1n;\n}\n/**\n * Checks for the existance of a value under the provided utf-8 string key in NEAR storage.\n *\n * @param key - The utf-8 string key to check for in storage.\n */\nexport function storageHasKey(key) {\n    return storageHasKeyRaw(encode(key));\n}\n/**\n * Get the last written or removed value from NEAR storage.\n */\nexport function storageGetEvictedRaw() {\n    return env.read_register(EVICTED_REGISTER);\n}\n/**\n * Get the last written or removed value from NEAR storage as utf-8 string.\n */\nexport function storageGetEvicted() {\n    return decode(storageGetEvictedRaw());\n}\n/**\n * Returns the current accounts NEAR storage usage.\n */\nexport function storageUsage() {\n    return env.storage_usage();\n}\n/**\n * Writes the provided bytes to NEAR storage under the provided key.\n *\n * @param key - The key under which to store the value.\n * @param value - The value to store.\n */\nexport function storageWriteRaw(key, value) {\n    return env.storage_write(key, value, EVICTED_REGISTER) === 1n;\n}\n/**\n * Writes the provided utf-8 string to NEAR storage under the provided key.\n *\n * @param key - The utf-8 string key under which to store the value.\n * @param value - The utf-8 string value to store.\n */\nexport function storageWrite(key, value) {\n    return storageWriteRaw(encode(key), encode(value));\n}\n/**\n * Removes the value of the provided key from NEAR storage.\n *\n * @param key - The key to be removed.\n */\nexport function storageRemoveRaw(key) {\n    return env.storage_remove(key, EVICTED_REGISTER) === 1n;\n}\n/**\n * Removes the value of the provided utf-8 string key from NEAR storage.\n *\n * @param key - The utf-8 string key to be removed.\n */\nexport function storageRemove(key) {\n    return storageRemoveRaw(encode(key));\n}\n/**\n * Returns the cost of storing 0 Byte on NEAR storage.\n */\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n/**\n * Returns the arguments passed to the current smart contract call.\n */\nexport function inputRaw() {\n    env.input(0);\n    return env.read_register(0);\n}\n/**\n * Returns the arguments passed to the current smart contract call as utf-8 string.\n */\nexport function input() {\n    return decode(inputRaw());\n}\n/**\n * Returns the value from the NEAR WASM virtual machine.\n *\n * @param value - The value to return.\n */\nexport function valueReturnRaw(value) {\n    env.value_return(value);\n}\n/**\n * Returns the utf-8 string value from the NEAR WASM virtual machine.\n *\n * @param value - The utf-8 string value to return.\n */\nexport function valueReturn(value) {\n    valueReturnRaw(encode(value));\n}\n/**\n * Returns a random string of bytes.\n */\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\n/**\n * Create a NEAR promise call to a contract on the blockchain.\n *\n * @param accountId - The account ID of the target contract.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR attached to the call.\n * @param gas - The amount of Gas attached to the call.\n */\nexport function promiseCreateRaw(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\n/**\n * Create a NEAR promise call to a contract on the blockchain.\n *\n * @param accountId - The account ID of the target contract.\n * @param methodName - The name of the method to be called.\n * @param args - The utf-8 string arguments to call the method with.\n * @param amount - The amount of NEAR attached to the call.\n * @param gas - The amount of Gas attached to the call.\n */\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return promiseCreateRaw(accountId, methodName, encode(args), amount, gas);\n}\n/**\n * Attach a callback NEAR promise to be executed after a provided promise.\n *\n * @param promiseIndex - The promise after which to call the callback.\n * @param accountId - The account ID of the contract to perform the callback on.\n * @param methodName - The name of the method to call.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseThenRaw(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\n/**\n * Attach a callback NEAR promise to be executed after a provided promise.\n *\n * @param promiseIndex - The promise after which to call the callback.\n * @param accountId - The account ID of the contract to perform the callback on.\n * @param methodName - The name of the method to call.\n * @param args - The utf-8 string arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return promiseThenRaw(promiseIndex, accountId, methodName, encode(args), amount, gas);\n}\n/**\n * Join an arbitrary array of NEAR promises.\n *\n * @param promiseIndexes - An arbitrary array of NEAR promise indexes to join.\n */\nexport function promiseAnd(...promiseIndexes) {\n    return env.promise_and(...promiseIndexes);\n}\n/**\n * Create a NEAR promise which will have multiple promise actions inside.\n *\n * @param accountId - The account ID of the target contract.\n */\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\n/**\n * Attach a callback NEAR promise to a batch of NEAR promise actions.\n *\n * @param promiseIndex - The NEAR promise index of the batch.\n * @param accountId - The account ID of the target contract.\n */\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\n/**\n * Attach a create account promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a create account action to.\n */\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\n/**\n * Attach a deploy contract promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a deploy contract action to.\n * @param code - The WASM byte code of the contract to be deployed.\n */\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\n/**\n * Attach a function call promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call action to.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseBatchActionFunctionCallRaw(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\n/**\n * Attach a function call promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call action to.\n * @param methodName - The name of the method to be called.\n * @param args - The utf-8 string arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    promiseBatchActionFunctionCallRaw(promiseIndex, methodName, encode(args), amount, gas);\n}\n/**\n * Attach a transfer promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a transfer action to.\n * @param amount - The amount of NEAR to transfer.\n */\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\n/**\n * Attach a stake promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a stake action to.\n * @param amount - The amount of NEAR to stake.\n * @param publicKey - The public key with which to stake.\n */\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\n/**\n * Attach a add full access key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a add full access key action to.\n * @param publicKey - The public key to add as a full access key.\n * @param nonce - The nonce to use.\n */\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\n/**\n * Attach a add access key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a add access key action to.\n * @param publicKey - The public key to add.\n * @param nonce - The nonce to use.\n * @param allowance - The allowance of the access key.\n * @param receiverId - The account ID of the receiver.\n * @param methodNames - The names of the method to allow the key for.\n */\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\n/**\n * Attach a delete key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a delete key action to.\n * @param publicKey - The public key to delete.\n */\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\n/**\n * Attach a delete account promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a delete account action to.\n * @param beneficiaryId - The account ID of the beneficiary - the account that receives the remaining amount of NEAR.\n */\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\n/**\n * Attach a function call with weight promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call with weight action to.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n * @param weight - The weight of unused Gas to use.\n */\nexport function promiseBatchActionFunctionCallWeightRaw(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\n/**\n * Attach a function call with weight promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call with weight action to.\n * @param methodName - The name of the method to be called.\n * @param args - The utf-8 string arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n * @param weight - The weight of unused Gas to use.\n */\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    promiseBatchActionFunctionCallWeightRaw(promiseIndex, methodName, encode(args), amount, gas, weight);\n}\n/**\n * The number of promise results available.\n */\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\n/**\n * Returns the result of the NEAR promise for the passed promise index.\n *\n * @param promiseIndex - The index of the promise to return the result for.\n */\nexport function promiseResultRaw(promiseIndex) {\n    const status = env.promise_result(promiseIndex, 0);\n    assert(Number(status) === PromiseResult.Successful, `Promise result ${status == PromiseResult.Failed\n        ? \"Failed\"\n        : status == PromiseResult.NotReady\n            ? \"NotReady\"\n            : status}`);\n    return env.read_register(0);\n}\n/**\n * Returns the result of the NEAR promise for the passed promise index as utf-8 string\n *\n * @param promiseIndex - The index of the promise to return the result for.\n */\nexport function promiseResult(promiseIndex) {\n    return decode(promiseResultRaw(promiseIndex));\n}\n/**\n * Executes the promise in the NEAR WASM virtual machine.\n *\n * @param promiseIndex - The index of the promise to execute.\n */\nexport function promiseReturn(promiseIndex) {\n    env.promise_return(promiseIndex);\n}\n/**\n * Returns sha256 hash of given value\n * @param value - value to be hashed, in Bytes\n * @returns hash result in Bytes\n */\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\n/**\n * Returns keccak256 hash of given value\n * @param value - value to be hashed, in Bytes\n * @returns hash result in Bytes\n */\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\n/**\n * Returns keccak512 hash of given value\n * @param value - value to be hashed, in Bytes\n * @returns hash result in Bytes\n */\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\n/**\n * Returns ripemd160 hash of given value\n * @param value - value to be hashed, in Bytes\n * @returns hash result in Bytes\n */\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\n/**\n * Recovers an ECDSA signer address from a 32-byte message hash and a corresponding\n * signature along with v recovery byte. Takes in an additional flag to check for\n * malleability of the signature which is generally only ideal for transactions.\n *\n * @param hash - 32-byte message hash\n * @param sig - signature\n * @param v - number of recovery byte\n * @param malleabilityFlag - whether to check malleability\n * @returns 64 bytes representing the public key if the recovery was successful.\n */\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    const returnValue = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (returnValue === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\n/**\n * Panic the transaction execution with given message\n * @param msg - panic message in raw bytes, which should be a valid UTF-8 sequence\n */\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\n/**\n * Log the message in transaction logs\n * @param msg - message in raw bytes, which should be a valid UTF-8 sequence\n */\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\n/**\n * Log the message in transaction logs\n * @param msg - message in raw bytes, which should be a valid UTF-16 sequence\n */\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\n/**\n * Returns the number of staked NEAR of given validator, in yoctoNEAR\n * @param accountId - validator's AccountID\n * @returns - staked amount\n */\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\n/**\n * Returns the number of staked NEAR of all validators, in yoctoNEAR\n * @returns total staked amount\n */\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\n/**\n * Computes multiexp on alt_bn128 curve using Pippenger's algorithm \\sum_i\n * mul_i g_{1 i} should be equal result.\n *\n * @param value - equence of (g1:G1, fr:Fr), where\n * G1 is point (x:Fq, y:Fq) on alt_bn128,\n * alt_bn128 is Y^2 = X^3 + 3 curve over Fq.\n * `value` is encoded as packed, little-endian\n * `[((u256, u256), u256)]` slice.\n *\n * @returns multi exp sum\n */\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\n/**\n * Computes sum for signed g1 group elements on alt_bn128 curve \\sum_i\n * (-1)^{sign_i} g_{1 i} should be equal result.\n *\n * @param value - sequence of (sign:bool, g1:G1), where\n * G1 is point (x:Fq, y:Fq) on alt_bn128,\n * alt_bn128 is Y^2 = X^3 + 3 curve over Fq.\n * value` is encoded a as packed, little-endian\n * `[((u256, u256), ((u256, u256), (u256, u256)))]` slice.\n *\n * @returns sum over Fq.\n */\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\n/**\n * Computes pairing check on alt_bn128 curve.\n * \\sum_i e(g_{1 i}, g_{2 i}) should be equal one (in additive notation), e(g1, g2) is Ate pairing\n *\n * @param value - sequence of (g1:G1, g2:G2), where\n * G2 is Fr-ordered subgroup point (x:Fq2, y:Fq2) on alt_bn128 twist,\n * alt_bn128 twist is Y^2 = X^3 + 3/(i+9) curve over Fq2\n * Fq2 is complex field element (re: Fq, im: Fq)\n * G1 is point (x:Fq, y:Fq) on alt_bn128,\n * alt_bn128 is Y^2 = X^3 + 3 curve over Fq\n * `value` is encoded a as packed, little-endian\n * `[((u256, u256), ((u256, u256), (u256, u256)))]` slice.\n *\n * @returns whether pairing check pass\n */\nexport function altBn128PairingCheck(value) {\n    return env.alt_bn128_pairing_check(value) === 1n;\n}\n","import * as near from \"./api\";\nimport { deserialize, serialize, bytes, encode } from \"./utils\";\n/**\n * Tells the SDK to use this function as the initialization function of the contract.\n *\n * @param _empty - An empty object.\n */\nexport function initialize(_empty) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, _descriptor\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ) { };\n}\n/**\n * Tells the SDK to expose this function as a view function.\n *\n * @param _empty - An empty object.\n */\nexport function view(_empty) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, _descriptor\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ) { };\n}\nexport function call({ privateFunction = false, payableFunction = false, }) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, descriptor) {\n        const originalMethod = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        descriptor.value = function (...args) {\n            if (privateFunction &&\n                near.predecessorAccountId() !== near.currentAccountId()) {\n                throw new Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > 0n) {\n                throw new Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\n/**\n * Tells the SDK to apply an array of passed in middleware to the function execution.\n *\n * @param middlewares - The middlewares to be executed.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function middleware(...middlewares) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, descriptor) {\n        const originalMethod = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        descriptor.value = function (...args) {\n            try {\n                middlewares.forEach((middleware) => middleware(...args));\n            }\n            catch (error) {\n                throw new Error(error);\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function NearBindgen({ requireInit = false, serializer = serialize, deserializer = deserialize, }) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageReadRaw(bytes(\"STATE\"));\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(objectToSave) {\n                near.storageWriteRaw(bytes(\"STATE\"), this._serialize(objectToSave));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value, forReturn = false) {\n                if (forReturn) {\n                    return encode(JSON.stringify(value, (_, value) => typeof value === \"bigint\" ? `${value}` : value));\n                }\n                return serializer(value);\n            }\n            static _deserialize(value) {\n                return deserializer(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    const reconstructor = classObject[item].constructor?.reconstruct;\n                    classObject[item] = reconstructor\n                        ? reconstructor(plainObject[item])\n                        : plainObject[item];\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n  isLE,\n  byteSwap32,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    if (!isLE) byteSwap32(this.state32);\n    keccakP(this.state32, this.rounds);\n    if (!isLE) byteSwap32(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { keccak_224, keccak_256, keccak_384, keccak_512 } from \"@noble/hashes/sha3\";\nimport { wrapHash } from \"./utils.js\";\nexport const keccak224 = wrapHash(keccak_224);\nexport const keccak256 = (() => {\n    const k = wrapHash(keccak_256);\n    k.create = keccak_256.create;\n    return k;\n})();\nexport const keccak384 = wrapHash(keccak_384);\nexport const keccak512 = wrapHash(keccak_512);\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// Response error\nexport const ERR_RESPONSE = 100;\nexport const ERR_INVALID_RESPONSE = 101;\n\n// Generic errors\nexport const ERR_PARAM = 200;\nexport const ERR_FORMATTERS = 201;\nexport const ERR_METHOD_NOT_IMPLEMENTED = 202;\nexport const ERR_OPERATION_TIMEOUT = 203;\nexport const ERR_OPERATION_ABORT = 204;\nexport const ERR_ABI_ENCODING = 205;\nexport const ERR_EXISTING_PLUGIN_NAMESPACE = 206;\nexport const ERR_INVALID_METHOD_PARAMS = 207;\nexport const ERR_MULTIPLE_ERRORS = 208;\n\n// Contract error codes\nexport const ERR_CONTRACT = 300;\nexport const ERR_CONTRACT_RESOLVER_MISSING = 301;\nexport const ERR_CONTRACT_ABI_MISSING = 302;\nexport const ERR_CONTRACT_REQUIRED_CALLBACK = 303;\nexport const ERR_CONTRACT_EVENT_NOT_EXISTS = 304;\nexport const ERR_CONTRACT_RESERVED_EVENT = 305;\nexport const ERR_CONTRACT_MISSING_DEPLOY_DATA = 306;\nexport const ERR_CONTRACT_MISSING_ADDRESS = 307;\nexport const ERR_CONTRACT_MISSING_FROM_ADDRESS = 308;\nexport const ERR_CONTRACT_INSTANTIATION = 309;\nexport const ERR_CONTRACT_EXECUTION_REVERTED = 310;\nexport const ERR_CONTRACT_TX_DATA_AND_INPUT = 311;\n\n// Transaction error codes\nexport const ERR_TX = 400;\nexport const ERR_TX_REVERT_INSTRUCTION = 401;\nexport const ERR_TX_REVERT_TRANSACTION = 402;\nexport const ERR_TX_NO_CONTRACT_ADDRESS = 403;\nexport const ERR_TX_CONTRACT_NOT_STORED = 404;\nexport const ERR_TX_REVERT_WITHOUT_REASON = 405;\nexport const ERR_TX_OUT_OF_GAS = 406;\nexport const ERR_RAW_TX_UNDEFINED = 407;\n\nexport const ERR_TX_INVALID_SENDER = 408;\nexport const ERR_TX_INVALID_CALL = 409;\nexport const ERR_TX_MISSING_CUSTOM_CHAIN = 410;\nexport const ERR_TX_MISSING_CUSTOM_CHAIN_ID = 411;\nexport const ERR_TX_CHAIN_ID_MISMATCH = 412;\nexport const ERR_TX_INVALID_CHAIN_INFO = 413;\nexport const ERR_TX_MISSING_CHAIN_INFO = 414;\nexport const ERR_TX_MISSING_GAS = 415;\nexport const ERR_TX_INVALID_LEGACY_GAS = 416;\nexport const ERR_TX_INVALID_FEE_MARKET_GAS = 417;\nexport const ERR_TX_INVALID_FEE_MARKET_GAS_PRICE = 418;\nexport const ERR_TX_INVALID_LEGACY_FEE_MARKET = 419;\nexport const ERR_TX_INVALID_OBJECT = 420;\nexport const ERR_TX_INVALID_NONCE_OR_CHAIN_ID = 421;\nexport const ERR_TX_UNABLE_TO_POPULATE_NONCE = 422;\nexport const ERR_TX_UNSUPPORTED_EIP_1559 = 423;\nexport const ERR_TX_UNSUPPORTED_TYPE = 424;\nexport const ERR_TX_DATA_AND_INPUT = 425;\nexport const ERR_TX_POLLING_TIMEOUT = 426;\nexport const ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL = 427;\nexport const ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER = 428;\n\nexport const ERR_TX_LOCAL_WALLET_NOT_AVAILABLE = 429;\n\nexport const ERR_TX_NOT_FOUND = 430;\nexport const ERR_TX_SEND_TIMEOUT = 431;\nexport const ERR_TX_BLOCK_TIMEOUT = 432;\n\nexport const ERR_TX_SIGNING = 433;\nexport const ERR_TX_GAS_MISMATCH = 434;\n\nexport const ERR_TX_CHAIN_MISMATCH = 435;\nexport const ERR_TX_HARDFORK_MISMATCH = 436;\nexport const ERR_TX_INVALID_RECEIVER = 437;\nexport const ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR = 438;\nexport const ERR_TX_INVALID_PROPERTIES_FOR_TYPE = 439;\n\nexport const ERR_TX_MISSING_GAS_INNER_ERROR = 440;\nexport const ERR_TX_GAS_MISMATCH_INNER_ERROR = 441;\n// Connection error codes\nexport const ERR_CONN = 500;\nexport const ERR_CONN_INVALID = 501;\nexport const ERR_CONN_TIMEOUT = 502;\nexport const ERR_CONN_NOT_OPEN = 503;\nexport const ERR_CONN_CLOSE = 504;\nexport const ERR_CONN_MAX_ATTEMPTS = 505;\nexport const ERR_CONN_PENDING_REQUESTS = 506;\nexport const ERR_REQ_ALREADY_SENT = 507;\n\n// Provider error codes\nexport const ERR_PROVIDER = 600;\nexport const ERR_INVALID_PROVIDER = 601;\nexport const ERR_INVALID_CLIENT = 602;\nexport const ERR_SUBSCRIPTION = 603;\nexport const ERR_WS_PROVIDER = 604;\n\n// Account error codes\nexport const ERR_PRIVATE_KEY_LENGTH = 701;\nexport const ERR_INVALID_PRIVATE_KEY = 702;\nexport const ERR_UNSUPPORTED_KDF = 703;\nexport const ERR_KEY_DERIVATION_FAIL = 704;\nexport const ERR_KEY_VERSION_UNSUPPORTED = 705;\nexport const ERR_INVALID_PASSWORD = 706;\nexport const ERR_IV_LENGTH = 707;\nexport const ERR_INVALID_KEYSTORE = 708;\nexport const ERR_PBKDF2_ITERATIONS = 709;\n\n// Signature error codes\nexport const ERR_SIGNATURE_FAILED = 801;\nexport const ERR_INVALID_SIGNATURE = 802;\n\nexport const GENESIS_BLOCK_NUMBER = '0x0';\n\n// RPC error codes (EIP-1193)\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#provider-errors\nexport const JSONRPC_ERR_REJECTED_REQUEST = 4001;\nexport const JSONRPC_ERR_UNAUTHORIZED = 4100;\nexport const JSONRPC_ERR_UNSUPPORTED_METHOD = 4200;\nexport const JSONRPC_ERR_DISCONNECTED = 4900;\nexport const JSONRPC_ERR_CHAIN_DISCONNECTED = 4901;\n\n// ENS error codes\nexport const ERR_ENS_CHECK_INTERFACE_SUPPORT = 901;\nexport const ERR_ENS_UNSUPPORTED_NETWORK = 902;\nexport const ERR_ENS_NETWORK_NOT_SYNCED = 903;\n\n// Utils error codes\nexport const ERR_INVALID_STRING = 1001;\nexport const ERR_INVALID_BYTES = 1002;\nexport const ERR_INVALID_NUMBER = 1003;\nexport const ERR_INVALID_UNIT = 1004;\nexport const ERR_INVALID_ADDRESS = 1005;\nexport const ERR_INVALID_HEX = 1006;\nexport const ERR_INVALID_TYPE = 1007;\nexport const ERR_INVALID_BOOLEAN = 1008;\nexport const ERR_INVALID_UNSIGNED_INTEGER = 1009;\nexport const ERR_INVALID_SIZE = 1010;\nexport const ERR_INVALID_LARGE_VALUE = 1011;\nexport const ERR_INVALID_BLOCK = 1012;\nexport const ERR_INVALID_TYPE_ABI = 1013;\nexport const ERR_INVALID_NIBBLE_WIDTH = 1014;\nexport const ERR_INVALID_INTEGER = 1015;\n\n// Validation error codes\nexport const ERR_VALIDATION = 1100;\n\n\n// Core error codes\nexport const ERR_CORE_HARDFORK_MISMATCH = 1101;\nexport const ERR_CORE_CHAIN_MISMATCH = 1102;\n\n// Schema error codes\nexport const ERR_SCHEMA_FORMAT = 1200;\n\n// RPC error codes (EIP-1474)\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md\nexport const ERR_RPC_INVALID_JSON = -32700;\nexport const ERR_RPC_INVALID_REQUEST = -32600;\nexport const ERR_RPC_INVALID_METHOD = -32601;\nexport const ERR_RPC_INVALID_PARAMS = -32602;\nexport const ERR_RPC_INTERNAL_ERROR = -32603;\nexport const ERR_RPC_INVALID_INPUT = -32000;\nexport const ERR_RPC_MISSING_RESOURCE = -32001;\nexport const ERR_RPC_UNAVAILABLE_RESOURCE = -32002;\nexport const ERR_RPC_TRANSACTION_REJECTED = -32003;\nexport const ERR_RPC_UNSUPPORTED_METHOD = -32004;\nexport const ERR_RPC_LIMIT_EXCEEDED = -32005;\nexport const ERR_RPC_NOT_SUPPORTED = -32006;\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport { Web3Error } from 'web3-types';\nimport { ERR_MULTIPLE_ERRORS } from './error_codes.js';\n\n/**\n * Base class for Web3 errors.\n */\nexport abstract class BaseWeb3Error extends Error implements Web3Error {\n\tpublic readonly name: string;\n\tpublic abstract readonly code: number;\n\tpublic stack: string | undefined;\n\n\tpublic cause: Error | undefined;\n\n\t/**\n\t * @deprecated Use the `cause` property instead.\n\t */\n\tpublic get innerError(): Error | Error[] | undefined {\n\t\t// eslint-disable-next-line no-use-before-define\n\t\tif (this.cause instanceof MultipleErrors) {\n\t\t\treturn this.cause.errors;\n\t\t}\n\t\treturn this.cause;\n\t}\n\t/**\n\t * @deprecated Use the `cause` property instead.\n\t */\n\tpublic set innerError(cause: Error | Error[] | undefined) {\n\t\tif (Array.isArray(cause)) {\n\t\t\t// eslint-disable-next-line no-use-before-define\n\t\t\tthis.cause = new MultipleErrors(cause);\n\t\t} else {\n\t\t\tthis.cause = cause;\n\t\t}\n\t}\n\n\tpublic constructor(msg?: string, cause?: Error | Error[]) {\n\t\tsuper(msg);\n\n\t\tif (Array.isArray(cause)) {\n\t\t\t// eslint-disable-next-line no-use-before-define\n\t\t\tthis.cause = new MultipleErrors(cause);\n\t\t} else {\n\t\t\tthis.cause = cause;\n\t\t}\n\n\t\tthis.name = this.constructor.name;\n\n\t\tif (typeof Error.captureStackTrace === 'function') {\n\t\t\tError.captureStackTrace(new.target.constructor);\n\t\t} else {\n\t\t\tthis.stack = new Error().stack;\n\t\t}\n\t}\n\n\tpublic static convertToString(value: unknown, unquotValue = false) {\n\t\t// Using \"null\" value intentionally for validation\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (value === null || value === undefined) return 'undefined';\n\n\t\tconst result = JSON.stringify(\n\t\t\tvalue,\n\t\t\t(_, v) => (typeof v === 'bigint' ? v.toString() : v) as unknown,\n\t\t);\n\n\t\treturn unquotValue && ['bigint', 'string'].includes(typeof value)\n\t\t\t? result.replace(/['\\\\\"]+/g, '')\n\t\t\t: result;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tcode: this.code,\n\t\t\tmessage: this.message,\n\t\t\tcause: this.cause,\n\t\t\t// deprecated\n\t\t\tinnerError: this.cause,\n\t\t};\n\t}\n}\n\nexport class MultipleErrors extends BaseWeb3Error {\n\tpublic code = ERR_MULTIPLE_ERRORS;\n\tpublic errors: Error[];\n\n\tpublic constructor(errors: Error[]) {\n\t\tsuper(`Multiple errors occurred: [${errors.map(e => e.message).join('], [')}]`);\n\t\tthis.errors = errors;\n\t}\n}\n\nexport abstract class InvalidValueError extends BaseWeb3Error {\n\tpublic readonly name: string;\n\n\tpublic constructor(value: unknown, msg: string) {\n\t\tsuper(\n\t\t\t`Invalid value given \"${BaseWeb3Error.convertToString(value, true)}\". Error: ${msg}.`,\n\t\t);\n\t\tthis.name = this.constructor.name;\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport {\n\tERR_ABI_ENCODING,\n\tERR_FORMATTERS,\n\tERR_METHOD_NOT_IMPLEMENTED,\n\tERR_OPERATION_ABORT,\n\tERR_OPERATION_TIMEOUT,\n\tERR_PARAM,\n\tERR_EXISTING_PLUGIN_NAMESPACE,\n\tERR_INVALID_METHOD_PARAMS,\n} from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\n\nexport class InvalidNumberOfParamsError extends BaseWeb3Error {\n\tpublic code = ERR_PARAM;\n\n\tpublic constructor(public got: number, public expected: number, public method: string) {\n\t\tsuper(`Invalid number of parameters for \"${method}\". Got \"${got}\" expected \"${expected}\"!`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\tgot: this.got,\n\t\t\texpected: this.expected,\n\t\t\tmethod: this.method,\n\t\t};\n\t}\n}\n\nexport class InvalidMethodParamsError extends BaseWeb3Error {\n\tpublic code = ERR_INVALID_METHOD_PARAMS;\n\n\tpublic constructor(public hint?: string) {\n\t\tsuper(`Invalid parameters passed. \"${typeof hint !== 'undefined' ? hint : ''}\"`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\thint: this.hint,\n\t\t};\n\t}\n}\n\nexport class FormatterError extends BaseWeb3Error {\n\tpublic code = ERR_FORMATTERS;\n}\n\nexport class MethodNotImplementedError extends BaseWeb3Error {\n\tpublic code = ERR_METHOD_NOT_IMPLEMENTED;\n\n\tpublic constructor() {\n\t\tsuper(\"The method you're trying to call is not implemented.\");\n\t}\n}\n\nexport class OperationTimeoutError extends BaseWeb3Error {\n\tpublic code = ERR_OPERATION_TIMEOUT;\n}\n\nexport class OperationAbortError extends BaseWeb3Error {\n\tpublic code = ERR_OPERATION_ABORT;\n}\n\nexport class AbiError extends BaseWeb3Error {\n\tpublic code = ERR_ABI_ENCODING;\n\tpublic readonly props: Record<string, unknown> & { name?: string };\n\n\tpublic constructor(message: string, props?: Record<string, unknown> & { name?: string }) {\n\t\tsuper(message);\n\t\tthis.props = props ?? {};\n\t}\n}\n\nexport class ExistingPluginNamespaceError extends BaseWeb3Error {\n\tpublic code = ERR_EXISTING_PLUGIN_NAMESPACE;\n\n\tpublic constructor(pluginNamespace: string) {\n\t\tsuper(`A plugin with the namespace: ${pluginNamespace} has already been registered.`);\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport {\n\tERR_INVALID_BYTES,\n\tERR_INVALID_NUMBER,\n\tERR_INVALID_ADDRESS,\n\tERR_INVALID_BLOCK,\n\tERR_INVALID_BOOLEAN,\n\tERR_INVALID_HEX,\n\tERR_INVALID_LARGE_VALUE,\n\tERR_INVALID_NIBBLE_WIDTH,\n\tERR_INVALID_SIZE,\n\tERR_INVALID_STRING,\n\tERR_INVALID_TYPE,\n\tERR_INVALID_TYPE_ABI,\n\tERR_INVALID_UNIT,\n\tERR_INVALID_INTEGER,\n\tERR_INVALID_UNSIGNED_INTEGER,\n} from '../error_codes.js';\nimport { InvalidValueError } from '../web3_error_base.js';\n\nexport class InvalidBytesError extends InvalidValueError {\n\tpublic code = ERR_INVALID_BYTES;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'can not parse as byte data');\n\t}\n}\n\nexport class InvalidNumberError extends InvalidValueError {\n\tpublic code = ERR_INVALID_NUMBER;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'can not parse as number data');\n\t}\n}\n\nexport class InvalidAddressError extends InvalidValueError {\n\tpublic code = ERR_INVALID_ADDRESS;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid ethereum address');\n\t}\n}\n\nexport class InvalidStringError extends InvalidValueError {\n\tpublic code = ERR_INVALID_STRING;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'not a valid string');\n\t}\n}\n\nexport class InvalidUnitError extends InvalidValueError {\n\tpublic code = ERR_INVALID_UNIT;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid unit');\n\t}\n}\n\nexport class InvalidIntegerError extends InvalidValueError {\n\tpublic code = ERR_INVALID_INTEGER;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'not a valid unit. Must be a positive integer');\n\t\n\t}\n}\n\nexport class HexProcessingError extends InvalidValueError {\n\tpublic code = ERR_INVALID_HEX;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'can not be converted to hex');\n\t}\n}\n\nexport class NibbleWidthError extends InvalidValueError {\n\tpublic code = ERR_INVALID_NIBBLE_WIDTH;\n\n\tpublic constructor(value: string) {\n\t\tsuper(value, 'value greater than the nibble width');\n\t}\n}\n\nexport class InvalidTypeError extends InvalidValueError {\n\tpublic code = ERR_INVALID_TYPE;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid type, type not supported');\n\t}\n}\n\nexport class InvalidBooleanError extends InvalidValueError {\n\tpublic code = ERR_INVALID_BOOLEAN;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'not a valid boolean.');\n\t}\n}\n\nexport class InvalidUnsignedIntegerError extends InvalidValueError {\n\tpublic code = ERR_INVALID_UNSIGNED_INTEGER;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'not a valid unsigned integer.');\n\t}\n}\n\nexport class InvalidSizeError extends InvalidValueError {\n\tpublic code = ERR_INVALID_SIZE;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid size given.');\n\t}\n}\n\nexport class InvalidLargeValueError extends InvalidValueError {\n\tpublic code = ERR_INVALID_LARGE_VALUE;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'value is larger than size.');\n\t}\n}\n\nexport class InvalidBlockError extends InvalidValueError {\n\tpublic code = ERR_INVALID_BLOCK;\n\n\tpublic constructor(value: string) {\n\t\tsuper(value, 'invalid string given');\n\t}\n}\n\nexport class InvalidTypeAbiInputError extends InvalidValueError {\n\tpublic code = ERR_INVALID_TYPE_ABI;\n\n\tpublic constructor(value: string) {\n\t\tsuper(value, 'components found but type is not tuple');\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tERR_RPC_INTERNAL_ERROR,\n\tERR_RPC_INVALID_INPUT,\n\tERR_RPC_INVALID_JSON,\n\tERR_RPC_INVALID_METHOD,\n\tERR_RPC_INVALID_PARAMS,\n\tERR_RPC_INVALID_REQUEST,\n\tERR_RPC_LIMIT_EXCEEDED,\n\tERR_RPC_MISSING_RESOURCE,\n\tERR_RPC_NOT_SUPPORTED,\n\tERR_RPC_TRANSACTION_REJECTED,\n\tERR_RPC_UNAVAILABLE_RESOURCE,\n\tERR_RPC_UNSUPPORTED_METHOD,\n\tJSONRPC_ERR_CHAIN_DISCONNECTED,\n\tJSONRPC_ERR_DISCONNECTED,\n\tJSONRPC_ERR_REJECTED_REQUEST,\n\tJSONRPC_ERR_UNAUTHORIZED,\n\tJSONRPC_ERR_UNSUPPORTED_METHOD,\n} from '../error_codes.js';\n\n/**\n * A template string for a generic Rpc Error. The `*code*` will be replaced with the code number.\n * Note: consider in next version that a spelling mistake could be corrected for `occured` and the value could be:\n * \t`An Rpc error has occurred with a code of *code*`\n */\nexport const genericRpcErrorMessageTemplate = 'An Rpc error has occured with a code of *code*';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport const RpcErrorMessages: {\n\t[key: number | string]: { name?: string; message: string; description?: string };\n} = {\n\t//  EIP-1474 & JSON RPC 2.0\n\t// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1474.md\n\t[ERR_RPC_INVALID_JSON]: {\n\t\tmessage: 'Parse error',\n\t\tdescription: 'Invalid JSON',\n\t},\n\t[ERR_RPC_INVALID_REQUEST]: {\n\t\tmessage: 'Invalid request',\n\t\tdescription: 'JSON is not a valid request object\t',\n\t},\n\t[ERR_RPC_INVALID_METHOD]: {\n\t\tmessage: 'Method not found',\n\t\tdescription: 'Method does not exist\t',\n\t},\n\t[ERR_RPC_INVALID_PARAMS]: {\n\t\tmessage: 'Invalid params',\n\t\tdescription: 'Invalid method parameters',\n\t},\n\t[ERR_RPC_INTERNAL_ERROR]: {\n\t\tmessage: 'Internal error',\n\t\tdescription: 'Internal JSON-RPC error',\n\t},\n\n\t[ERR_RPC_INVALID_INPUT]: {\n\t\tmessage: 'Invalid input',\n\t\tdescription: 'Missing or invalid parameters',\n\t},\n\t[ERR_RPC_MISSING_RESOURCE]: {\n\t\tmessage: 'Resource not found',\n\t\tdescription: 'Requested resource not found',\n\t},\n\t[ERR_RPC_UNAVAILABLE_RESOURCE]: {\n\t\tmessage: 'Resource unavailable',\n\t\tdescription: 'Requested resource not available',\n\t},\n\t[ERR_RPC_TRANSACTION_REJECTED]: {\n\t\tmessage: 'Transaction rejected',\n\t\tdescription: 'Transaction creation failed',\n\t},\n\t[ERR_RPC_UNSUPPORTED_METHOD]: {\n\t\tmessage: 'Method not supported',\n\t\tdescription: 'Method is not implemented',\n\t},\n\t[ERR_RPC_LIMIT_EXCEEDED]: {\n\t\tmessage: 'Limit exceeded',\n\t\tdescription: 'Request exceeds defined limit',\n\t},\n\t[ERR_RPC_NOT_SUPPORTED]: {\n\t\tmessage: 'JSON-RPC version not supported',\n\t\tdescription: 'Version of JSON-RPC protocol is not supported',\n\t},\n\n\t// EIP-1193\n\t// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#provider-errors\n\t[JSONRPC_ERR_REJECTED_REQUEST]: {\n\t\tname: 'User Rejected Request',\n\t\tmessage: 'The user rejected the request.',\n\t},\n\t[JSONRPC_ERR_UNAUTHORIZED]: {\n\t\tname: 'Unauthorized',\n\t\tmessage: 'The requested method and/or account has not been authorized by the user.',\n\t},\n\t[JSONRPC_ERR_UNSUPPORTED_METHOD]: {\n\t\tname: 'Unsupported Method',\n\t\tmessage: 'The Provider does not support the requested method.',\n\t},\n\t[JSONRPC_ERR_DISCONNECTED]: {\n\t\tname: 'Disconnected',\n\t\tmessage: 'The Provider is disconnected from all chains.',\n\t},\n\t[JSONRPC_ERR_CHAIN_DISCONNECTED]: {\n\t\tname: 'Chain Disconnected',\n\t\tmessage: 'The Provider is not connected to the requested chain.',\n\t},\n\n\t// EIP-1193 - CloseEvent\n\t// https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent/code\n\t'0-999': {\n\t\tname: '',\n\t\tmessage: 'Not used.',\n\t},\n\t1000: {\n\t\tname: 'Normal Closure',\n\t\tmessage: 'The connection successfully completed the purpose for which it was created.',\n\t},\n\t1001: {\n\t\tname: 'Going Away',\n\t\tmessage:\n\t\t\t'The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.',\n\t},\n\t1002: {\n\t\tname: 'Protocol error',\n\t\tmessage: 'The endpoint is terminating the connection due to a protocol error.',\n\t},\n\t1003: {\n\t\tname: 'Unsupported Data',\n\t\tmessage:\n\t\t\t'The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)',\n\t},\n\t1004: {\n\t\tname: 'Reserved',\n\t\tmessage: 'Reserved. A meaning might be defined in the future.',\n\t},\n\t1005: {\n\t\tname: 'No Status Rcvd',\n\t\tmessage:\n\t\t\t'Reserved. Indicates that no status code was provided even though one was expected.',\n\t},\n\t1006: {\n\t\tname: 'Abnormal Closure',\n\t\tmessage:\n\t\t\t'Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected.',\n\t},\n\t1007: {\n\t\tname: 'Invalid frame payload data',\n\t\tmessage:\n\t\t\t'The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).',\n\t},\n\t1008: {\n\t\tname: 'Policy Violation',\n\t\tmessage:\n\t\t\t'The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.',\n\t},\n\t1009: {\n\t\tname: 'Message Too Big',\n\t\tmessage:\n\t\t\t'The endpoint is terminating the connection because a data frame was received that is too large.',\n\t},\n\t1010: {\n\t\tname: 'Mandatory Ext.',\n\t\tmessage:\n\t\t\t\"The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't.\",\n\t},\n\t1011: {\n\t\tname: 'Internal Error',\n\t\tmessage:\n\t\t\t'The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.',\n\t},\n\t1012: {\n\t\tname: 'Service Restart',\n\t\tmessage: 'The server is terminating the connection because it is restarting.',\n\t},\n\t1013: {\n\t\tname: 'Try Again Later',\n\t\tmessage:\n\t\t\t'The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.',\n\t},\n\t1014: {\n\t\tname: 'Bad Gateway',\n\t\tmessage:\n\t\t\t'The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code.',\n\t},\n\t1015: {\n\t\tname: 'TLS handshake',\n\t\tmessage:\n\t\t\t\"Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).\",\n\t},\n\t'1016-2999': {\n\t\tname: '',\n\t\tmessage:\n\t\t\t'For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications.',\n\t},\n\t'3000-3999': {\n\t\tname: '',\n\t\tmessage:\n\t\t\t'For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol.',\n\t},\n\t'4000-4999': {\n\t\tname: '',\n\t\tmessage:\n\t\t\t\"For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol.\",\n\t},\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport { JsonRpcResponseWithError, JsonRpcId, JsonRpcError } from 'web3-types';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nimport {\n\tERR_RPC_INTERNAL_ERROR,\n\tERR_RPC_INVALID_INPUT,\n\tERR_RPC_INVALID_JSON,\n\tERR_RPC_INVALID_METHOD,\n\tERR_RPC_INVALID_PARAMS,\n\tERR_RPC_INVALID_REQUEST,\n\tERR_RPC_LIMIT_EXCEEDED,\n\tERR_RPC_MISSING_RESOURCE,\n\tERR_RPC_NOT_SUPPORTED,\n\tERR_RPC_TRANSACTION_REJECTED,\n\tERR_RPC_UNAVAILABLE_RESOURCE,\n\tERR_RPC_UNSUPPORTED_METHOD,\n} from '../error_codes.js';\nimport { RpcErrorMessages, genericRpcErrorMessageTemplate } from './rpc_error_messages.js';\n\nexport class RpcError extends BaseWeb3Error {\n\tpublic code: number;\n\tpublic id: JsonRpcId;\n\tpublic jsonrpc: string;\n\tpublic jsonRpcError: JsonRpcError;\n\tpublic constructor(rpcError: JsonRpcResponseWithError, message?: string) {\n\t\tsuper(\n\t\t\tmessage ??\n\t\t\t\tgenericRpcErrorMessageTemplate.replace('*code*', rpcError.error.code.toString()),\n\t\t);\n\t\tthis.code = rpcError.error.code;\n\t\tthis.id = rpcError.id;\n\t\tthis.jsonrpc = rpcError.jsonrpc;\n\t\tthis.jsonRpcError = rpcError.error;\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), error: this.jsonRpcError, id: this.id, jsonRpc: this.jsonrpc };\n\t}\n}\n\nexport class EIP1193ProviderRpcError extends BaseWeb3Error {\n\tpublic code: number;\n\tpublic data?: unknown;\n\n\tpublic constructor(code: number, data?: unknown) {\n\t\tif (!code) {\n\t\t\t// this case should ideally not happen\n\t\t\tsuper();\n\t\t} else if (RpcErrorMessages[code]?.message) {\n\t\t\tsuper(RpcErrorMessages[code].message);\n\t\t} else {\n\t\t\t// Retrieve the status code object for the given code from the table, by searching through the appropriate range\n\t\t\tconst statusCodeRange = Object.keys(RpcErrorMessages).find(\n\t\t\t\tstatusCode =>\n\t\t\t\t\ttypeof statusCode === 'string' &&\n\t\t\t\t\tcode >= parseInt(statusCode.split('-')[0], 10) &&\n\t\t\t\t\tcode <= parseInt(statusCode.split('-')[1], 10),\n\t\t\t);\n\t\t\tsuper(\n\t\t\t\tRpcErrorMessages[statusCodeRange ?? '']?.message ??\n\t\t\t\t\tgenericRpcErrorMessageTemplate.replace('*code*', code?.toString() ?? '\"\"'),\n\t\t\t);\n\t\t}\n\t\tthis.code = code;\n\t\tthis.data = data;\n\t}\n}\n\nexport class ParseError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_JSON;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_JSON].message);\n\t}\n}\n\nexport class InvalidRequestError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_REQUEST;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_REQUEST].message);\n\t}\n}\n\nexport class MethodNotFoundError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_METHOD;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_METHOD].message);\n\t}\n}\n\nexport class InvalidParamsError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_PARAMS;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_PARAMS].message);\n\t}\n}\n\nexport class InternalError extends RpcError {\n\tpublic code = ERR_RPC_INTERNAL_ERROR;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INTERNAL_ERROR].message);\n\t}\n}\n\nexport class InvalidInputError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_INPUT;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_INPUT].message);\n\t}\n}\n\nexport class MethodNotSupported extends RpcError {\n\tpublic code = ERR_RPC_UNSUPPORTED_METHOD;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_UNSUPPORTED_METHOD].message);\n\t}\n}\n\nexport class ResourceUnavailableError extends RpcError {\n\tpublic code = ERR_RPC_UNAVAILABLE_RESOURCE;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_UNAVAILABLE_RESOURCE].message);\n\t}\n}\n\nexport class ResourcesNotFoundError extends RpcError {\n\tpublic code = ERR_RPC_MISSING_RESOURCE;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_MISSING_RESOURCE].message);\n\t}\n}\n\nexport class VersionNotSupportedError extends RpcError {\n\tpublic code = ERR_RPC_NOT_SUPPORTED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_NOT_SUPPORTED].message);\n\t}\n}\n\nexport class TransactionRejectedError extends RpcError {\n\tpublic code = ERR_RPC_TRANSACTION_REJECTED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_TRANSACTION_REJECTED].message);\n\t}\n}\n\nexport class LimitExceededError extends RpcError {\n\tpublic code = ERR_RPC_LIMIT_EXCEEDED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_LIMIT_EXCEEDED].message);\n\t}\n}\n\nexport const rpcErrorsMap = new Map<number, { error: typeof RpcError }>();\nrpcErrorsMap.set(ERR_RPC_INVALID_JSON, { error: ParseError });\nrpcErrorsMap.set(ERR_RPC_INVALID_REQUEST, {\n\terror: InvalidRequestError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_METHOD, {\n\terror: MethodNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_PARAMS, { error: InvalidParamsError });\nrpcErrorsMap.set(ERR_RPC_INTERNAL_ERROR, { error: InternalError });\nrpcErrorsMap.set(ERR_RPC_INVALID_INPUT, { error: InvalidInputError });\nrpcErrorsMap.set(ERR_RPC_UNSUPPORTED_METHOD, {\n\terror: MethodNotSupported,\n});\nrpcErrorsMap.set(ERR_RPC_UNAVAILABLE_RESOURCE, {\n\terror: ResourceUnavailableError,\n});\nrpcErrorsMap.set(ERR_RPC_TRANSACTION_REJECTED, {\n\terror: TransactionRejectedError,\n});\nrpcErrorsMap.set(ERR_RPC_MISSING_RESOURCE, {\n\terror: ResourcesNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_NOT_SUPPORTED, {\n\terror: VersionNotSupportedError,\n});\nrpcErrorsMap.set(ERR_RPC_LIMIT_EXCEEDED, { error: LimitExceededError });\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ERR_SCHEMA_FORMAT } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\n\nexport class SchemaFormatError extends BaseWeb3Error {\n\tpublic code = ERR_SCHEMA_FORMAT;\n\n\tpublic constructor(public type: string) {\n\t\tsuper(`Format for the type ${type} is unsupported`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), type: this.type };\n\t}\n\n}\n","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            overrideMap,\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { BaseWeb3Error, ERR_VALIDATION } from 'web3-errors';\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nconst errorFormatter = (error: Web3ValidationErrorObject): string => {\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn 'unspecified error';\n};\n\nexport class Web3ValidatorError extends BaseWeb3Error {\n\tpublic code = ERR_VALIDATION;\n\tpublic readonly errors: Web3ValidationErrorObject[];\n\n\tpublic constructor(errors: Web3ValidationErrorObject[]) {\n\t\tsuper();\n\n\t\tthis.errors = errors;\n\n\t\tsuper.message = `Web3 validator found ${\n\t\t\terrors.length\n\t\t} error[s]:\\n${this._compileErrors().join('\\n')}`;\n\t}\n\n\tprivate _compileErrors(): string[] {\n\t\treturn this.errors.map(errorFormatter);\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport const VALID_ETH_BASE_TYPES = ['bool', 'int', 'uint', 'bytes', 'string', 'address', 'tuple'];\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter } from 'web3-types';\n// eslint-disable-next-line require-extensions/require-extensions\nimport { ShortValidationSchema } from '../types';\n\nexport const isAbiParameterSchema = (\n\tschema: string | ShortValidationSchema | AbiParameter,\n): schema is AbiParameter => typeof schema === 'object' && 'type' in schema && 'name' in schema;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ValidInputTypes } from '../types.js';\n\n/**\n * checks input if typeof data is valid string input\n */\nexport const isString = (value: ValidInputTypes) => typeof value === 'string';\n\nexport const isHexStrict = (hex: ValidInputTypes) =>\n\ttypeof hex === 'string' && /^((-)?0x[0-9a-f]+|(0x))$/i.test(hex);\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n\tif (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false;\n\n\tif (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length)\n\t\treturn false;\n\n\treturn true;\n}\n\nexport const isHex = (hex: ValidInputTypes): boolean =>\n\ttypeof hex === 'number' ||\n\ttypeof hex === 'bigint' ||\n\t(typeof hex === 'string' && /^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(hex));\n\nexport const isHexString8Bytes = (value: string, prefixed = true) =>\n\tprefixed ? isHexStrict(value) && value.length === 18 : isHex(value) && value.length === 16;\n\nexport const isHexString32Bytes = (value: string, prefixed = true) =>\n\tprefixed ? isHexStrict(value) && value.length === 66 : isHex(value) && value.length === 64;\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n\tif (typeof str !== 'string') {\n\t\tthrow new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`);\n\t}\n\n\treturn str.startsWith('0x');\n}\n\n/**\n * Checks provided Uint8Array for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Uint8Array values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: {\n\t[key: string]: Uint8Array | undefined;\n}) {\n\tfor (const [k, v] of Object.entries(values)) {\n\t\tif (v !== undefined && v.length > 0 && v[0] === 0) {\n\t\t\tthrow new Error(`${k} cannot have leading zeroes, received: ${v.toString()}`);\n\t\t}\n\t}\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { InvalidBytesError, InvalidNumberError } from 'web3-errors';\nimport { VALID_ETH_BASE_TYPES } from './constants.js';\nimport {\n\tFullValidationSchema,\n\tJsonSchema,\n\tShortValidationSchema,\n\tValidationSchemaInput,\n\tValidInputTypes,\n} from './types.js';\nimport { isAbiParameterSchema } from './validation/abi.js';\nimport { isHexStrict } from './validation/string.js';\nimport { Web3ValidatorError } from './errors.js';\n\nconst extraTypes = ['hex', 'number', 'blockNumber', 'blockNumberOrTag', 'filter', 'bloom'];\n\nexport const parseBaseType = <T = typeof VALID_ETH_BASE_TYPES[number]>(\n\ttype: string,\n): {\n\tbaseType?: T;\n\tbaseTypeSize: number | undefined;\n\tarraySizes: number[];\n\tisArray: boolean;\n} => {\n\t// Remove all empty spaces to avoid any parsing issue.\n\tlet strippedType = type.replace(/ /, '');\n\tlet baseTypeSize: number | undefined;\n\tlet isArray = false;\n\tlet arraySizes: number[] = [];\n\n\tif (type.includes('[')) {\n\t\t// Extract the array type\n\t\tstrippedType = strippedType.slice(0, strippedType.indexOf('['));\n\t\t// Extract array indexes\n\t\tarraySizes = [...type.matchAll(/(?:\\[(\\d*)\\])/g)]\n\t\t\t.map(match => parseInt(match[1], 10))\n\t\t\t.map(size => (Number.isNaN(size) ? -1 : size));\n\n\t\tisArray = arraySizes.length > 0;\n\t}\n\n\tif (VALID_ETH_BASE_TYPES.includes(strippedType)) {\n\t\treturn { baseType: strippedType as unknown as T, isArray, baseTypeSize, arraySizes };\n\t}\n\n\tif (strippedType.startsWith('int')) {\n\t\tbaseTypeSize = parseInt(strippedType.substring(3), 10);\n\t\tstrippedType = 'int';\n\t} else if (strippedType.startsWith('uint')) {\n\t\tbaseTypeSize = parseInt(type.substring(4), 10);\n\t\tstrippedType = 'uint';\n\t} else if (strippedType.startsWith('bytes')) {\n\t\tbaseTypeSize = parseInt(strippedType.substring(5), 10);\n\t\tstrippedType = 'bytes';\n\t} else {\n\t\treturn { baseType: undefined, isArray: false, baseTypeSize: undefined, arraySizes };\n\t}\n\n\treturn { baseType: strippedType as unknown as T, isArray, baseTypeSize, arraySizes };\n};\n\nconst convertEthType = (\n\ttype: string,\n\tparentSchema: JsonSchema = {},\n): { format?: string; required?: boolean } => {\n\tconst typePropertyPresent = Object.keys(parentSchema).includes('type');\n\n\tif (typePropertyPresent) {\n\t\tthrow new Web3ValidatorError([\n\t\t\t{\n\t\t\t\tkeyword: 'eth',\n\t\t\t\tmessage: 'Either \"eth\" or \"type\" can be presented in schema',\n\t\t\t\tparams: { eth: type },\n\t\t\t\tinstancePath: '',\n\t\t\t\tschemaPath: '',\n\t\t\t},\n\t\t]);\n\t}\n\n\tconst { baseType, baseTypeSize } = parseBaseType(type);\n\n\tif (!baseType && !extraTypes.includes(type)) {\n\t\tthrow new Web3ValidatorError([\n\t\t\t{\n\t\t\t\tkeyword: 'eth',\n\t\t\t\tmessage: `Eth data type \"${type}\" is not valid`,\n\t\t\t\tparams: { eth: type },\n\t\t\t\tinstancePath: '',\n\t\t\t\tschemaPath: '',\n\t\t\t},\n\t\t]);\n\t}\n\n\tif (baseType) {\n\t\tif (baseType === 'tuple') {\n\t\t\tthrow new Error('\"tuple\" type is not implemented directly.');\n\t\t}\n\t\treturn { format: `${baseType}${baseTypeSize ?? ''}`, required: true };\n\t}\n\tif (type) {\n\t\treturn { format: type, required: true };\n\t}\n\n\treturn {};\n};\n\nexport const abiSchemaToJsonSchema = (\n\tabis: ShortValidationSchema | FullValidationSchema,\n\tlevel = '/0',\n) => {\n\tconst schema: JsonSchema = {\n\t\ttype: 'array',\n\t\titems: [],\n\t\tmaxItems: abis.length,\n\t\tminItems: abis.length,\n\t};\n\n\tfor (const [index, abi] of abis.entries()) {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tlet abiType!: string;\n\t\tlet abiName!: string;\n\t\tlet abiComponents: ShortValidationSchema | FullValidationSchema | undefined = [];\n\n\t\t// If it's a complete Abi Parameter\n\t\t// e.g. {name: 'a', type: 'uint'}\n\t\tif (isAbiParameterSchema(abi)) {\n\t\t\tabiType = abi.type;\n\t\t\tabiName = abi.name || `${level}/${index}`;\n\t\t\tabiComponents = abi.components as FullValidationSchema;\n\t\t\t// If its short form string value e.g. ['uint']\n\t\t} else if (typeof abi === 'string') {\n\t\t\tabiType = abi;\n\t\t\tabiName = `${level}/${index}`;\n\n\t\t\t// If it's provided in short form of tuple e.g. [['uint', 'string']]\n\t\t} else if (Array.isArray(abi)) {\n\t\t\t// If its custom tuple e.g. ['tuple[2]', ['uint', 'string']]\n\t\t\tif (\n\t\t\t\tabi[0] &&\n\t\t\t\ttypeof abi[0] === 'string' &&\n\t\t\t\tabi[0].startsWith('tuple') &&\n\t\t\t\t!Array.isArray(abi[0]) &&\n\t\t\t\tabi[1] &&\n\t\t\t\tArray.isArray(abi[1])\n\t\t\t) {\n\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\tabiType = abi[0];\n\t\t\t\tabiName = `${level}/${index}`;\n\t\t\t\tabiComponents = abi[1] as ReadonlyArray<ShortValidationSchema>;\n\t\t\t} else {\n\t\t\t\tabiType = 'tuple';\n\t\t\t\tabiName = `${level}/${index}`;\n\t\t\t\tabiComponents = abi;\n\t\t\t}\n\t\t}\n\n\t\tconst { baseType, isArray, arraySizes } = parseBaseType(abiType);\n\n\t\tlet childSchema: JsonSchema;\n\t\tlet lastSchema = schema;\n\t\tfor (let i = arraySizes.length - 1; i > 0; i -= 1) {\n\t\t\tchildSchema = {\n\t\t\t\ttype: 'array',\n\t\t\t\t$id: abiName,\n\t\t\t\titems: [],\n\t\t\t\tmaxItems: arraySizes[i],\n\t\t\t\tminItems: arraySizes[i],\n\t\t\t};\n\n\t\t\tif (arraySizes[i] < 0) {\n\t\t\t\tdelete childSchema.maxItems;\n\t\t\t\tdelete childSchema.minItems;\n\t\t\t}\n\n\t\t\t// lastSchema.items is a Schema, concat with 'childSchema'\n\t\t\tif (!Array.isArray(lastSchema.items)) {\n\t\t\t\tlastSchema.items = [lastSchema.items as JsonSchema, childSchema];\n\t\t\t} // lastSchema.items is an empty Scheme array, set it to 'childSchema'\n\t\t\telse if (lastSchema.items.length === 0) {\n\t\t\t\tlastSchema.items = [childSchema];\n\t\t\t} // lastSchema.items is a non-empty Scheme array, append 'childSchema'\n\t\t\telse {\n\t\t\t\tlastSchema.items.push(childSchema);\n\t\t\t}\n\t\t\tlastSchema = childSchema;\n\t\t}\n\n\t\tif (baseType === 'tuple' && !isArray) {\n\t\t\tconst nestedTuple = abiSchemaToJsonSchema(abiComponents, abiName);\n\t\t\tnestedTuple.$id = abiName;\n\t\t\t(lastSchema.items as JsonSchema[]).push(nestedTuple);\n\t\t} else if (baseType === 'tuple' && isArray) {\n            const arraySize = arraySizes[0];\n            const item: JsonSchema = {\n                type: 'array',\n                $id: abiName,\n                items: abiSchemaToJsonSchema(abiComponents, abiName),\n                ...(arraySize >= 0 && { minItems: arraySize, maxItems: arraySize }),\n            };\n\n            (lastSchema.items as JsonSchema[]).push(item);\n\t\t} else if (isArray) {\n\t\t    const arraySize = arraySizes[0];\n            const item: JsonSchema = {\n                type: 'array',\n                $id: abiName,\n                items: convertEthType(abiType),\n                ...(arraySize >= 0 && { minItems: arraySize, maxItems: arraySize }),\n            };\n\n            (lastSchema.items as JsonSchema[]).push(item);\n\t\t} else if (Array.isArray(lastSchema.items)) {\n\t\t\t// Array of non-tuple items\n\t\t\tlastSchema.items.push({ $id: abiName, ...convertEthType(abiType) });\n\t\t} else {\n\t\t\t// Nested object\n\t\t\t(lastSchema.items as JsonSchema[]).push({\n\t\t\t\t$id: abiName,\n\t\t\t\t...convertEthType(abiType),\n\t\t\t});\n\t\t}\n\t\tlastSchema = schema;\n\t}\n\n\treturn schema;\n};\n\nexport const ethAbiToJsonSchema = (abis: ValidationSchemaInput) => abiSchemaToJsonSchema(abis);\n\nexport const fetchArrayElement = (data: Array<unknown>, level: number): unknown => {\n\tif (level === 1) {\n\t\treturn data;\n\t}\n\n\treturn fetchArrayElement(data[0] as Array<unknown>, level - 1);\n};\n\nexport const transformJsonDataToAbiFormat = (\n\tabis: FullValidationSchema,\n\tdata: ReadonlyArray<unknown> | Record<string, unknown>,\n\ttransformedData?: Array<unknown>,\n): Array<unknown> => {\n\tconst newData: Array<unknown> = [];\n\n\tfor (const [index, abi] of abis.entries()) {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tlet abiType!: string;\n\t\tlet abiName!: string;\n\t\tlet abiComponents: ShortValidationSchema | FullValidationSchema | undefined = [];\n\n\t\t// If it's a complete Abi Parameter\n\t\t// e.g. {name: 'a', type: 'uint'}\n\t\tif (isAbiParameterSchema(abi)) {\n\t\t\tabiType = abi.type;\n\t\t\tabiName = abi.name;\n\t\t\tabiComponents = abi.components as FullValidationSchema;\n\t\t\t// If its short form string value e.g. ['uint']\n\t\t} else if (typeof abi === 'string') {\n\t\t\tabiType = abi;\n\n\t\t\t// If it's provided in short form of tuple e.g. [['uint', 'string']]\n\t\t} else if (Array.isArray(abi)) {\n\t\t\t// If its custom tuple e.g. ['tuple[2]', ['uint', 'string']]\n\t\t\tif (abi[1] && Array.isArray(abi[1])) {\n\t\t\t\tabiType = abi[0] as string;\n\t\t\t\tabiComponents = abi[1] as ReadonlyArray<ShortValidationSchema>;\n\t\t\t} else {\n\t\t\t\tabiType = 'tuple';\n\t\t\t\tabiComponents = abi;\n\t\t\t}\n\t\t}\n\n\t\tconst { baseType, isArray, arraySizes } = parseBaseType(abiType);\n\t\tconst dataItem = Array.isArray(data)\n\t\t\t? (data as Array<unknown>)[index]\n\t\t\t: (data as Record<string, unknown>)[abiName];\n\n\t\tif (baseType === 'tuple' && !isArray) {\n\t\t\tnewData.push(\n\t\t\t\ttransformJsonDataToAbiFormat(\n\t\t\t\t\tabiComponents as FullValidationSchema,\n\t\t\t\t\tdataItem as Array<unknown>,\n\t\t\t\t\ttransformedData,\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (baseType === 'tuple' && isArray) {\n\t\t\tconst tupleData = [];\n\t\t\tfor (const tupleItem of dataItem as Array<unknown>) {\n\t\t\t\t// Nested array\n\t\t\t\tif (arraySizes.length > 1) {\n\t\t\t\t\tconst nestedItems = fetchArrayElement(\n\t\t\t\t\t\ttupleItem as Array<unknown>,\n\t\t\t\t\t\tarraySizes.length - 1,\n\t\t\t\t\t);\n\t\t\t\t\tconst nestedData = [];\n\n\t\t\t\t\tfor (const nestedItem of nestedItems as Array<unknown>) {\n\t\t\t\t\t\tnestedData.push(\n\t\t\t\t\t\t\ttransformJsonDataToAbiFormat(\n\t\t\t\t\t\t\t\tabiComponents as FullValidationSchema,\n\t\t\t\t\t\t\t\tnestedItem as Array<unknown>,\n\t\t\t\t\t\t\t\ttransformedData,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\ttupleData.push(nestedData);\n\t\t\t\t} else {\n\t\t\t\t\ttupleData.push(\n\t\t\t\t\t\ttransformJsonDataToAbiFormat(\n\t\t\t\t\t\t\tabiComponents as FullValidationSchema,\n\t\t\t\t\t\t\ttupleItem as Array<unknown>,\n\t\t\t\t\t\t\ttransformedData,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewData.push(tupleData);\n\t\t} else {\n\t\t\tnewData.push(dataItem);\n\t\t}\n\t}\n\n\t// Have to reassign before pushing to transformedData\n\t// eslint-disable-next-line no-param-reassign\n\ttransformedData = transformedData ?? [];\n\ttransformedData.push(...newData);\n\n\treturn transformedData;\n};\n\n/**\n * Code points to int\n */\n\nexport const codePointToInt = (codePoint: number): number => {\n\tif (codePoint >= 48 && codePoint <= 57) {\n\t\t/* ['0'..'9'] -> [0..9] */\n\t\treturn codePoint - 48;\n\t}\n\n\tif (codePoint >= 65 && codePoint <= 70) {\n\t\t/* ['A'..'F'] -> [10..15] */\n\t\treturn codePoint - 55;\n\t}\n\n\tif (codePoint >= 97 && codePoint <= 102) {\n\t\t/* ['a'..'f'] -> [10..15] */\n\t\treturn codePoint - 87;\n\t}\n\n\tthrow new Error(`Invalid code point: ${codePoint}`);\n};\n\n/**\n * Converts value to it's number representation\n */\nexport const hexToNumber = (value: string): bigint | number => {\n\tif (!isHexStrict(value)) {\n\t\tthrow new Error('Invalid hex string');\n\t}\n\n\tconst [negative, hexValue] = value.startsWith('-') ? [true, value.slice(1)] : [false, value];\n\tconst num = BigInt(hexValue);\n\n\tif (num > Number.MAX_SAFE_INTEGER) {\n\t\treturn negative ? -num : num;\n\t}\n\n\tif (num < Number.MIN_SAFE_INTEGER) {\n\t\treturn num;\n\t}\n\n\treturn negative ? -1 * Number(num) : Number(num);\n};\n\n/**\n * Converts value to it's hex representation\n */\nexport const numberToHex = (value: ValidInputTypes): string => {\n\tif ((typeof value === 'number' || typeof value === 'bigint') && value < 0) {\n\t\treturn `-0x${value.toString(16).slice(1)}`;\n\t}\n\n\tif ((typeof value === 'number' || typeof value === 'bigint') && value >= 0) {\n\t\treturn `0x${value.toString(16)}`;\n\t}\n\n\tif (typeof value === 'string' && isHexStrict(value)) {\n\t\tconst [negative, hex] = value.startsWith('-') ? [true, value.slice(1)] : [false, value];\n\t\tconst hexValue = hex.split(/^(-)?0(x|X)/).slice(-1)[0];\n\t\treturn `${negative ? '-' : ''}0x${hexValue.replace(/^0+/, '').toLowerCase()}`;\n\t}\n\n\tif (typeof value === 'string' && !isHexStrict(value)) {\n\t\treturn numberToHex(BigInt(value));\n\t}\n\n\tthrow new InvalidNumberError(value);\n};\n\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n */\nexport const padLeft = (value: ValidInputTypes, characterAmount: number, sign = '0'): string => {\n\tif (typeof value === 'string' && !isHexStrict(value)) {\n\t\treturn value.padStart(characterAmount, sign);\n\t}\n\n\tconst hex = typeof value === 'string' && isHexStrict(value) ? value : numberToHex(value);\n\n\tconst [prefix, hexValue] = hex.startsWith('-') ? ['-0x', hex.slice(3)] : ['0x', hex.slice(2)];\n\n\treturn `${prefix}${hexValue.padStart(characterAmount, sign)}`;\n};\n\nexport function uint8ArrayToHexString(uint8Array: Uint8Array): string {\n\tlet hexString = '0x';\n\tfor (const e of uint8Array) {\n\t\tconst hex = e.toString(16);\n\t\thexString += hex.length === 1 ? `0${hex}` : hex;\n\t}\n\treturn hexString;\n}\n\n// for optimized technique for hex to bytes conversion\nconst charCodeMap = {\n\tzero: 48,\n\tnine: 57,\n\tA: 65,\n\tF: 70,\n\ta: 97,\n\tf: 102,\n  } as const\n\n  function charCodeToBase16(char: number) {\n\tif (char >= charCodeMap.zero && char <= charCodeMap.nine)\n\t  return char - charCodeMap.zero\n\tif (char >= charCodeMap.A && char <= charCodeMap.F)\n\t  return char - (charCodeMap.A - 10)\n\tif (char >= charCodeMap.a && char <= charCodeMap.f)\n\t  return char - (charCodeMap.a - 10)\n\treturn undefined\n  }\n\nexport function hexToUint8Array(hex: string): Uint8Array {\n\tlet offset = 0;\n\tif (hex.startsWith('0') && (hex[1] === 'x' || hex[1] === 'X')) {\n\t\toffset = 2;\n\t}\n\tif (hex.length % 2 !== 0) {\n\t\tthrow new InvalidBytesError(`hex string has odd length: ${hex}`);\n\t}\n\tconst length = (hex.length - offset) / 2;\n\tconst bytes = new Uint8Array(length);\n\tfor (let index = 0, j = offset; index < length; index+=1) {\n\t  // eslint-disable-next-line no-plusplus\n\t  const nibbleLeft = charCodeToBase16(hex.charCodeAt(j++))\n\t  // eslint-disable-next-line no-plusplus\n\t  const nibbleRight = charCodeToBase16(hex.charCodeAt(j++))\n\t  if (nibbleLeft === undefined || nibbleRight === undefined) {\n\t\tthrow new InvalidBytesError(\n\t\t\t`Invalid byte sequence (\"${hex[j - 2]}${\n\t\t\t\thex[j - 1]\n\t\t\t  }\" in \"${hex}\").`,\n\t\t)\n\t  }\n\t  bytes[index] = nibbleLeft * 16 + nibbleRight\n\t}\n\treturn bytes\n}\n\n// @TODO: Remove this function and its usages once all sub dependencies uses version 1.3.3 or above of @noble/hashes\nexport function ensureIfUint8Array<T = any>(data: T) {\n\tif (\n\t\t!(data instanceof Uint8Array) &&\n\t\t(data as { constructor: { name: string } })?.constructor?.name === 'Uint8Array'\n\t) {\n\t\treturn Uint8Array.from(data as unknown as Uint8Array);\n\t}\n\treturn data;\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ValidInputTypes } from '../types.js';\nimport { hexToUint8Array, parseBaseType } from '../utils.js';\nimport { isHexStrict } from './string.js';\n\n/**\n * checks input if typeof data is valid Uint8Array input\n */\nexport const isUint8Array = (data: ValidInputTypes): data is Uint8Array =>\n\tdata instanceof Uint8Array || data?.constructor?.name === 'Uint8Array' || data?.constructor?.name === 'Buffer';\n\nexport const isBytes = (\n\tvalue: ValidInputTypes | Uint8Array | number[],\n\toptions: { abiType: string; size?: never } | { size: number; abiType?: never } = {\n\t\tabiType: 'bytes',\n\t},\n) => {\n\tif (typeof value !== 'string' && !Array.isArray(value) && !isUint8Array(value)) {\n\t\treturn false;\n\t}\n\n\t// isHexStrict also accepts - prefix which can not exists in bytes\n\tif (typeof value === 'string' && isHexStrict(value) && value.startsWith('-')) {\n\t\treturn false;\n\t}\n\n\tif (typeof value === 'string' && !isHexStrict(value)) {\n\t\treturn false;\n\t}\n\n\tlet valueToCheck: Uint8Array;\n\n\tif (typeof value === 'string') {\n\t\tif (value.length % 2 !== 0) {\n\t\t\t// odd length hex\n\t\t\treturn false;\n\t\t}\n\t\tvalueToCheck = hexToUint8Array(value);\n\t} else if (Array.isArray(value)) {\n\t\tif (value.some(d => d < 0 || d > 255 || !Number.isInteger(d))) {\n\t\t\treturn false;\n\t\t}\n\t\tvalueToCheck = new Uint8Array(value);\n\t} else {\n\t\tvalueToCheck = value;\n\t}\n\n\tif (options?.abiType) {\n\t\tconst { baseTypeSize } = parseBaseType(options.abiType);\n\n\t\treturn baseTypeSize ? valueToCheck.length === baseTypeSize : true;\n\t}\n\n\tif (options?.size) {\n\t\treturn valueToCheck.length === options?.size;\n\t}\n\n\treturn true;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { utf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { ValidInputTypes } from '../types.js';\nimport { ensureIfUint8Array, uint8ArrayToHexString } from '../utils.js';\nimport { isHexStrict } from './string.js';\nimport { isUint8Array } from './bytes.js';\n\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n */\nexport const checkAddressCheckSum = (data: string): boolean => {\n\tif (!/^(0x)?[0-9a-f]{40}$/i.test(data)) return false;\n\tconst address = data.slice(2);\n\tconst updatedData = utf8ToBytes(address.toLowerCase());\n\n\tconst addressHash = uint8ArrayToHexString(keccak256(ensureIfUint8Array(updatedData))).slice(2);\n\n\tfor (let i = 0; i < 40; i += 1) {\n\t\t// the nth letter should be uppercase if the nth digit of casemap is 1\n\t\tif (\n\t\t\t(parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) ||\n\t\t\t(parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n */\nexport const isAddress = (value: ValidInputTypes, checkChecksum = true) => {\n\tif (typeof value !== 'string' && !isUint8Array(value)) {\n\t\treturn false;\n\t}\n\n\tlet valueToCheck: string;\n\n\tif (isUint8Array(value)) {\n\t\tvalueToCheck = uint8ArrayToHexString(value);\n\t} else if (typeof value === 'string' && !isHexStrict(value)) {\n\t\tvalueToCheck = value.toLowerCase().startsWith('0x') ? value : `0x${value}`;\n\t} else {\n\t\tvalueToCheck = value;\n\t}\n\n\t// check if it has the basic requirements of an address\n\tif (!/^(0x)?[0-9a-f]{40}$/i.test(valueToCheck)) {\n\t\treturn false;\n\t}\n\t// If it's ALL lowercase or ALL upppercase\n\tif (\n\t\t/^(0x|0X)?[0-9a-f]{40}$/.test(valueToCheck) ||\n\t\t/^(0x|0X)?[0-9A-F]{40}$/.test(valueToCheck)\n\t) {\n\t\treturn true;\n\t\t// Otherwise check each case\n\t}\n\treturn checkChecksum ? checkAddressCheckSum(valueToCheck) : true;\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Bytes, HexString, Numbers } from './primitives_types.js';\n\nexport enum FMT_NUMBER {\n\tNUMBER = 'NUMBER_NUMBER',\n\tHEX = 'NUMBER_HEX',\n\tSTR = 'NUMBER_STR',\n\tBIGINT = 'NUMBER_BIGINT',\n}\n\nexport type NumberTypes = {\n\t[FMT_NUMBER.NUMBER]: number;\n\t[FMT_NUMBER.HEX]: HexString;\n\t[FMT_NUMBER.STR]: string;\n\t[FMT_NUMBER.BIGINT]: bigint;\n};\n\nexport enum FMT_BYTES {\n\tHEX = 'BYTES_HEX',\n\tUINT8ARRAY = 'BYTES_UINT8ARRAY',\n}\n\nexport type ByteTypes = {\n\t[FMT_BYTES.HEX]: HexString;\n\t[FMT_BYTES.UINT8ARRAY]: Uint8Array;\n};\n\nexport type DataFormat = {\n\treadonly number: FMT_NUMBER;\n\treadonly bytes: FMT_BYTES;\n};\n\nexport const DEFAULT_RETURN_FORMAT = {\n\tnumber: FMT_NUMBER.BIGINT,\n\tbytes: FMT_BYTES.HEX,\n} as const;\nexport const ETH_DATA_FORMAT = { number: FMT_NUMBER.HEX, bytes: FMT_BYTES.HEX } as const;\n\nexport type FormatType<T, F extends DataFormat> = number extends Extract<T, Numbers>\n\t? NumberTypes[F['number']] | Exclude<T, Numbers>\n\t: Uint8Array extends Extract<T, Bytes>\n\t? ByteTypes[F['bytes']] | Exclude<T, Bytes>\n\t: T extends object | undefined\n\t? {\n\t\t\t[P in keyof T]: FormatType<T[P], F>;\n\t  }\n\t: T;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ValidInputTypes } from '../types.js';\nimport { parseBaseType, hexToNumber } from '../utils.js';\nimport { isHexStrict } from './string.js';\n\n/**\n * Checks if a given value is a valid big int\n */\nexport const isBigInt = (value: ValidInputTypes): boolean => typeof value === 'bigint';\n\n// Note: this could be simplified using ** operator, but babel does not handle it well\n// \tyou can find more at: https://github.com/babel/babel/issues/13109 and https://github.com/web3/web3.js/issues/6187\n/** @internal */\nexport const bigintPower = (base: bigint, expo: bigint) => {\n\t// edge case\n\tif (expo === BigInt(0)) {\n\t\treturn BigInt(1);\n\t}\n\tlet res = base;\n\tfor (let index = 1; index < expo; index += 1) {\n\t\tres *= base;\n\t}\n\treturn res;\n};\n\nexport const isUInt = (\n\tvalue: ValidInputTypes,\n\toptions: { abiType: string; bitSize?: never } | { bitSize: number; abiType?: never } = {\n\t\tabiType: 'uint',\n\t},\n) => {\n\tif (\n\t\t!['number', 'string', 'bigint'].includes(typeof value) ||\n\t\t(typeof value === 'string' && value.length === 0)\n\t) {\n\t\treturn false;\n\t}\n\n\tlet size!: number;\n\n\tif (options?.abiType) {\n\t\tconst { baseTypeSize } = parseBaseType(options.abiType);\n\n\t\tif (baseTypeSize) {\n\t\t\tsize = baseTypeSize;\n\t\t}\n\t} else if (options.bitSize) {\n\t\tsize = options.bitSize;\n\t}\n\n\tconst maxSize = bigintPower(BigInt(2), BigInt(size ?? 256)) - BigInt(1);\n\n\ttry {\n\t\tconst valueToCheck =\n\t\t\ttypeof value === 'string' && isHexStrict(value)\n\t\t\t\t? BigInt(hexToNumber(value))\n\t\t\t\t: BigInt(value as number);\n\n\t\treturn valueToCheck >= 0 && valueToCheck <= maxSize;\n\t} catch (error) {\n\t\t// Some invalid number value given which can not be converted via BigInt\n\t\treturn false;\n\t}\n};\n\nexport const isInt = (\n\tvalue: ValidInputTypes,\n\toptions: { abiType: string; bitSize?: never } | { bitSize: number; abiType?: never } = {\n\t\tabiType: 'int',\n\t},\n) => {\n\tif (!['number', 'string', 'bigint'].includes(typeof value)) {\n\t\treturn false;\n\t}\n\n\tif (typeof value === 'number' && value > Number.MAX_SAFE_INTEGER) {\n\t\treturn false;\n\t}\n\n\tlet size!: number;\n\n\tif (options?.abiType) {\n\t\tconst { baseTypeSize, baseType } = parseBaseType(options.abiType);\n\n\t\tif (baseType !== 'int') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (baseTypeSize) {\n\t\t\tsize = baseTypeSize;\n\t\t}\n\t} else if (options.bitSize) {\n\t\tsize = options.bitSize;\n\t}\n\n\tconst maxSize = bigintPower(BigInt(2), BigInt((size ?? 256) - 1));\n\tconst minSize = BigInt(-1) * bigintPower(BigInt(2), BigInt((size ?? 256) - 1));\n\n\ttry {\n\t\tconst valueToCheck =\n\t\t\ttypeof value === 'string' && isHexStrict(value)\n\t\t\t\t? BigInt(hexToNumber(value))\n\t\t\t\t: BigInt(value as number);\n\n\t\treturn valueToCheck >= minSize && valueToCheck <= maxSize;\n\t} catch (error) {\n\t\t// Some invalid number value given which can not be converted via BigInt\n\t\treturn false;\n\t}\n};\n\nexport const isNumber = (value: ValidInputTypes) => {\n\tif (isInt(value)) {\n\t\treturn true;\n\t}\n\n\t// It would be a decimal number\n\tif (\n\t\ttypeof value === 'string' &&\n\t\t/[0-9.]/.test(value) &&\n\t\tvalue.indexOf('.') === value.lastIndexOf('.')\n\t) {\n\t\treturn true;\n\t}\n\n\tif (typeof value === 'number') {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { BlockTags } from 'web3-types';\nimport { isUInt } from './numbers.js';\n\nexport const isBlockNumber = (value: string | number | bigint): boolean => isUInt(value);\n\n/**\n * Returns true if the given blockNumber is 'latest', 'pending', 'earliest, 'safe' or 'finalized'\n */\nexport const isBlockTag = (value: string) => Object.values(BlockTags).includes(value as BlockTags);\n\n/**\n * Returns true if given value is valid hex string and not negative, or is a valid BlockTag\n */\nexport const isBlockNumberOrTag = (value: string | number | bigint) =>\n\tisBlockTag(value as string) || isBlockNumber(value);\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { ValidInputTypes } from '../types.js';\nimport { codePointToInt, hexToUint8Array, padLeft, uint8ArrayToHexString } from '../utils.js';\nimport { isAddress } from './address.js';\nimport { isHexStrict } from './string.js';\n\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n */\nexport const isBloom = (bloom: ValidInputTypes): boolean => {\n\tif (typeof bloom !== 'string') {\n\t\treturn false;\n\t}\n\n\tif (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n\t\treturn false;\n\t}\n\n\tif (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n */\nexport const isInBloom = (bloom: string, value: string | Uint8Array): boolean => {\n\tif (typeof value === 'string' && !isHexStrict(value)) {\n\t\treturn false;\n\t}\n\n\tif (!isBloom(bloom)) {\n\t\treturn false;\n\t}\n\n\tconst uint8Array = typeof value === 'string' ? hexToUint8Array(value) : value;\n\n\tconst hash = uint8ArrayToHexString(keccak256(uint8Array)).slice(2);\n\n\tfor (let i = 0; i < 12; i += 4) {\n\t\t// calculate bit position in bloom filter that must be active\n\t\tconst bitpos =\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t((parseInt(hash.slice(i, i + 2), 16) << 8) + parseInt(hash.slice(i + 2, i + 4), 16)) &\n\t\t\t2047;\n\n\t\t// test if bitpos in bloom is active\n\t\tconst code = codePointToInt(bloom.charCodeAt(bloom.length - 1 - Math.floor(bitpos / 4)));\n\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst offset = 1 << bitpos % 4;\n\n\t\t// eslint-disable-next-line no-bitwise\n\t\tif ((code & offset) !== offset) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n */\nexport const isUserEthereumAddressInBloom = (bloom: string, ethereumAddress: string): boolean => {\n\tif (!isBloom(bloom)) {\n\t\treturn false;\n\t}\n\n\tif (!isAddress(ethereumAddress)) {\n\t\treturn false;\n\t}\n\n\t// you have to pad the ethereum address to 32 bytes\n\t// else the bloom filter does not work\n\t// this is only if your matching the USERS\n\t// ethereum address. Contract address do not need this\n\t// hence why we have 2 methods\n\t// (0x is not in the 2nd parameter of padleft so 64 chars is fine)\n\n\tconst address = padLeft(ethereumAddress, 64);\n\n\treturn isInBloom(bloom, address);\n};\n\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n */\nexport const isContractAddressInBloom = (bloom: string, contractAddress: string): boolean => {\n\tif (!isBloom(bloom)) {\n\t\treturn false;\n\t}\n\n\tif (!isAddress(contractAddress)) {\n\t\treturn false;\n\t}\n\n\treturn isInBloom(bloom, contractAddress);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ValidInputTypes } from '../types.js';\nimport { isHexStrict } from './string.js';\n\nexport const isBoolean = (value: ValidInputTypes) => {\n\tif (!['number', 'string', 'boolean'].includes(typeof value)) {\n\t\treturn false;\n\t}\n\n\tif (typeof value === 'boolean') {\n\t\treturn true;\n\t}\n\n\tif (typeof value === 'string' && !isHexStrict(value)) {\n\t\treturn value === '1' || value === '0';\n\t}\n\n\tif (typeof value === 'string' && isHexStrict(value)) {\n\t\treturn value === '0x1' || value === '0x0';\n\t}\n\n\t// type === number\n\treturn value === 1 || value === 0;\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { TypedArray } from 'web3-types';\n\n// Explicitly check for the\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isNullish = (item: unknown): item is undefined | null =>\n\t// Using \"null\" value intentionally for validation\n\t// eslint-disable-next-line no-null/no-null\n\titem === undefined || item === null;\n\nexport const isObject = (item: unknown): item is Record<string, unknown> =>\n\ttypeof item === 'object' &&\n\t!isNullish(item) &&\n\t!Array.isArray(item) &&\n\t!(item instanceof TypedArray);\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { isBloom, isInBloom } from './bloom.js';\n\n/**\n * Checks if its a valid topic\n */\nexport const isTopic = (topic: string): boolean => {\n\tif (typeof topic !== 'string') {\n\t\treturn false;\n\t}\n\n\tif (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n\t\treturn false;\n\t}\n\n\tif (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n */\nexport const isTopicInBloom = (bloom: string, topic: string): boolean => {\n\tif (!isBloom(bloom)) {\n\t\treturn false;\n\t}\n\n\tif (!isTopic(topic)) {\n\t\treturn false;\n\t}\n\n\treturn isInBloom(bloom, topic);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Filter } from 'web3-types';\nimport { isAddress } from './address.js';\nimport { isBlockNumberOrTag } from './block.js';\nimport { isNullish } from './object.js';\nimport { isTopic } from './topic.js';\n\n/**\n * First we check if all properties in the provided value are expected,\n * then because all Filter properties are optional, we check if the expected properties\n * are defined. If defined and they're not the expected type, we immediately return false,\n * otherwise we return true after all checks pass.\n */\nexport const isFilterObject = (value: Filter) => {\n\tconst expectedFilterProperties: (keyof Filter)[] = [\n\t\t'fromBlock',\n\t\t'toBlock',\n\t\t'address',\n\t\t'topics',\n\t\t'blockHash',\n\t];\n\tif (isNullish(value) || typeof value !== 'object') return false;\n\n\tif (\n\t\t!Object.keys(value).every(property =>\n\t\t\texpectedFilterProperties.includes(property as keyof Filter),\n\t\t)\n\t)\n\t\treturn false;\n\n\tif (\n\t\t(!isNullish(value.fromBlock) && !isBlockNumberOrTag(value.fromBlock)) ||\n\t\t(!isNullish(value.toBlock) && !isBlockNumberOrTag(value.toBlock))\n\t)\n\t\treturn false;\n\n\tif (!isNullish(value.address)) {\n\t\tif (Array.isArray(value.address)) {\n\t\t\tif (!value.address.every(address => isAddress(address))) return false;\n\t\t} else if (!isAddress(value.address)) return false;\n\t}\n\n\tif (!isNullish(value.topics)) {\n\t\tif (\n\t\t\t!value.topics.every(topic => {\n\t\t\t\tif (isNullish(topic)) return true;\n\n\t\t\t\tif (Array.isArray(topic)) {\n\t\t\t\t\treturn topic.every(nestedTopic => isTopic(nestedTopic));\n\t\t\t\t}\n\n\t\t\t\tif (isTopic(topic)) return true;\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t)\n\t\t\treturn false;\n\t}\n\n\treturn true;\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Filter } from 'web3-types';\nimport { ValidInputTypes } from './types.js';\nimport { isAddress } from './validation/address.js';\nimport { isBlockNumber, isBlockNumberOrTag, isBlockTag } from './validation/block.js';\nimport { isBloom } from './validation/bloom.js';\nimport { isBoolean } from './validation/boolean.js';\nimport { isBytes } from './validation/bytes.js';\nimport { isFilterObject } from './validation/filter.js';\nimport { isHexStrict, isString } from './validation/string.js';\nimport { isNumber, isInt, isUInt } from './validation/numbers.js';\n\nconst formats: { [key: string]: (data: unknown) => boolean } = {\n\taddress: (data: unknown) => isAddress(data as ValidInputTypes),\n\tbloom: (data: unknown) => isBloom(data as ValidInputTypes),\n\tblockNumber: (data: unknown) => isBlockNumber(data as string | number | bigint),\n\tblockTag: (data: unknown) => isBlockTag(data as string),\n\tblockNumberOrTag: (data: unknown) => isBlockNumberOrTag(data as string | number | bigint),\n\tbool: (data: unknown) => isBoolean(data as ValidInputTypes),\n\tbytes: (data: unknown) => isBytes(data as ValidInputTypes | Uint8Array | number[]),\n\tfilter: (data: unknown) => isFilterObject(data as Filter),\n\thex: (data: unknown) => isHexStrict(data as ValidInputTypes),\n\tuint: (data: unknown) => isUInt(data as ValidInputTypes),\n\tint: (data: unknown) => isInt(data as ValidInputTypes),\n\tnumber: (data: unknown) => isNumber(data as ValidInputTypes),\n\tstring: (data: unknown) => isString(data as ValidInputTypes),\n};\n// generate formats for all numbers types\nfor (let bitSize = 8; bitSize <= 256; bitSize += 8) {\n\tformats[`int${bitSize}`] = data => isInt(data as ValidInputTypes, { bitSize });\n\tformats[`uint${bitSize}`] = data => isUInt(data as ValidInputTypes, { bitSize });\n}\n// generate bytes\nfor (let size = 1; size <= 32; size += 1) {\n\tformats[`bytes${size}`] = data =>\n\t\tisBytes(data as ValidInputTypes | Uint8Array | number[], { size });\n}\nformats.bytes256 = formats.bytes;\n\nexport default formats;\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { SchemaFormatError } from 'web3-errors';\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nimport { z, ZodType, ZodIssue, ZodIssueCode, ZodTypeAny } from 'zod';\n\nimport { RawCreateParams } from 'zod/lib/types';\nimport { Web3ValidatorError } from './errors.js';\nimport { Json, JsonSchema } from './types.js';\nimport formats from './formats.js';\n\nconst convertToZod = (schema: JsonSchema): ZodType => {\n\tif ((!schema?.type || schema?.type === 'object') && schema?.properties) {\n\t\tconst obj: { [key: string]: ZodType } = {};\n\t\tfor (const name of Object.keys(schema.properties)) {\n\t\t\tconst zItem = convertToZod(schema.properties[name]);\n\t\t\tif (zItem) {\n\t\t\t\tobj[name] = zItem;\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(schema.required)) {\n\t\t\treturn z\n\t\t\t\t.object(obj)\n\t\t\t\t.partial()\n\t\t\t\t.required(schema.required.reduce((acc, v: string) => ({ ...acc, [v]: true }), {}));\n\t\t}\n\t\treturn z.object(obj).partial();\n\t}\n\n\tif (schema?.type === 'array' && schema?.items) {\n\t\tif (Array.isArray(schema.items) && schema.items.length > 1\n\t\t    && schema.maxItems !== undefined\n\t\t    && new Set(schema.items.map((item: JsonSchema) => item.$id)).size === schema.items.length) {\n\t\t\tconst arr: Partial<[ZodTypeAny, ...ZodTypeAny[]]> = [];\n\t\t\tfor (const item of schema.items) {\n\t\t\t\tconst zItem = convertToZod(item);\n\t\t\t\tif (zItem) {\n\t\t\t\t\tarr.push(zItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z.tuple(arr as [ZodTypeAny, ...ZodTypeAny[]]);\n\t\t}\n\t\tconst nextSchema = Array.isArray(schema.items) ? schema.items[0] : schema.items;\n        let zodArraySchema = z.array(convertToZod(nextSchema));\n\n        zodArraySchema = schema.minItems !== undefined ? zodArraySchema.min(schema.minItems) : zodArraySchema;\n        zodArraySchema = schema.maxItems !== undefined ? zodArraySchema.max(schema.maxItems) : zodArraySchema;\n\t\treturn zodArraySchema;\n\t}\n\n\tif (schema.oneOf && Array.isArray(schema.oneOf)) {\n\t\treturn z.union(\n\t\t\tschema.oneOf.map(oneOfSchema => convertToZod(oneOfSchema)) as [\n\t\t\t\tZodTypeAny,\n\t\t\t\tZodTypeAny,\n\t\t\t\t...ZodTypeAny[],\n\t\t\t],\n\t\t);\n\t}\n\n\tif (schema?.format) {\n\t\tif (!formats[schema.format]) {\n\t\t\tthrow new SchemaFormatError(schema.format);\n\t\t}\n\n\t\treturn z.any().refine(formats[schema.format], (value: unknown) => ({\n\t\t\tparams: { value, format: schema.format },\n\t\t}));\n\t}\n\n\tif (\n\t\tschema?.type &&\n\t\tschema?.type !== 'object' &&\n\t\ttypeof (z as unknown as { [key: string]: (params?: RawCreateParams) => ZodType })[\n\t\t\tString(schema.type)\n\t\t] === 'function'\n\t) {\n\t\treturn (z as unknown as { [key: string]: (params?: RawCreateParams) => ZodType })[\n\t\t\tString(schema.type)\n\t\t]();\n\t}\n\treturn z.object({ data: z.any() }).partial();\n};\n\nexport class Validator {\n\t// eslint-disable-next-line no-use-before-define\n\tprivate static validatorInstance?: Validator;\n\n\t// eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n\tpublic static factory(): Validator {\n\t\tif (!Validator.validatorInstance) {\n\t\t\tValidator.validatorInstance = new Validator();\n\t\t}\n\t\treturn Validator.validatorInstance;\n\t}\n\n\tpublic validate(schema: JsonSchema, data: Json, options?: { silent?: boolean }) {\n\t\tconst zod = convertToZod(schema);\n\t\tconst result = zod.safeParse(data);\n\t\tif (!result.success) {\n\t\t\tconst errors = this.convertErrors(result.error?.issues ?? []);\n\t\t\tif (errors) {\n\t\t\t\tif (options?.silent) {\n\t\t\t\t\treturn errors;\n\t\t\t\t}\n\t\t\t\tthrow new Web3ValidatorError(errors);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate convertErrors(errors: ZodIssue[] | undefined): Web3ValidationErrorObject[] | undefined {\n\t\tif (errors && Array.isArray(errors) && errors.length > 0) {\n\t\t\treturn errors.map((error: ZodIssue) => {\n\t\t\t\tlet message;\n\t\t\t\tlet keyword;\n\t\t\t\tlet params;\n\t\t\t\tlet schemaPath;\n\n\t\t\t\tschemaPath = error.path.join('/');\n\n\t\t\t\tconst field = String(error.path[error.path.length - 1]);\n\t\t\t\tconst instancePath = error.path.join('/');\n\t\t\t\tif (error.code === ZodIssueCode.too_big) {\n\t\t\t\t\tkeyword = 'maxItems';\n\t\t\t\t\tschemaPath = `${instancePath}/maxItems`;\n\t\t\t\t\tparams = { limit: error.maximum };\n\t\t\t\t\tmessage = `must NOT have more than ${error.maximum} items`;\n\t\t\t\t} else if (error.code === ZodIssueCode.too_small) {\n\t\t\t\t\tkeyword = 'minItems';\n\t\t\t\t\tschemaPath = `${instancePath}/minItems`;\n\t\t\t\t\tparams = { limit: error.minimum };\n\t\t\t\t\tmessage = `must NOT have fewer than ${error.minimum} items`;\n\t\t\t\t} else if (error.code === ZodIssueCode.custom) {\n\t\t\t\t\tconst { value, format } = (error.params ?? {}) as {\n\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\tformat: string;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof value === 'undefined') {\n\t\t\t\t\t\tmessage = `value at \"/${schemaPath}\" is required`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage = `value \"${\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t\t\t\ttypeof value === 'object' ? JSON.stringify(value) : value\n\t\t\t\t\t\t}\" at \"/${schemaPath}\" must pass \"${format}\" validation`;\n\t\t\t\t\t}\n\n\t\t\t\t\tparams = { value };\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tkeyword: keyword ?? field,\n\t\t\t\t\tinstancePath: instancePath ? `/${instancePath}` : '',\n\t\t\t\t\tschemaPath: schemaPath ? `#${schemaPath}` : '#',\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tparams: params ?? { value: error.message },\n\t\t\t\t\tmessage: message ?? error.message,\n\t\t\t\t} as Web3ValidationErrorObject;\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nimport { Validator } from './validator.js';\nimport { ethAbiToJsonSchema } from './utils.js';\nimport { Json, ValidationSchemaInput, Web3ValidationOptions } from './types.js';\nimport { Web3ValidatorError } from './errors.js';\n\nexport class Web3Validator {\n\tprivate readonly _validator: Validator;\n\tpublic constructor() {\n\t\tthis._validator = Validator.factory();\n\t}\n\tpublic validateJSONSchema(\n\t\tschema: object,\n\t\tdata: object,\n\t\toptions?: Web3ValidationOptions,\n\t): Web3ValidationErrorObject[] | undefined {\n\t\treturn this._validator.validate(schema, data as Json, options);\n\t}\n\tpublic validate(\n\t\tschema: ValidationSchemaInput,\n\t\tdata: ReadonlyArray<unknown>,\n\t\toptions: Web3ValidationOptions = { silent: false },\n\t): Web3ValidationErrorObject[] | undefined {\n\t\tconst jsonSchema = ethAbiToJsonSchema(schema);\n\t\tif (\n\t\t\tArray.isArray(jsonSchema.items) &&\n\t\t\tjsonSchema.items?.length === 0 &&\n\t\t\tdata.length === 0\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (\n\t\t\tArray.isArray(jsonSchema.items) &&\n\t\t\tjsonSchema.items?.length === 0 &&\n\t\t\tdata.length !== 0\n\t\t) {\n\t\t\tthrow new Web3ValidatorError([\n\t\t\t\t{\n\t\t\t\t\tinstancePath: '/0',\n\t\t\t\t\tschemaPath: '/',\n\t\t\t\t\tkeyword: 'required',\n\t\t\t\t\tmessage: 'empty schema against data can not be validated',\n\t\t\t\t\tparams: data,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\treturn this._validator.validate(jsonSchema, data as Json, options);\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Validator } from './web3_validator.js';\n\nexport const validator = new Web3Validator();\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport function isUint8Array(data: unknown | Uint8Array): data is Uint8Array {\n\treturn (\n\t\tdata instanceof Uint8Array ||\n\t\t(data as { constructor: { name: string } })?.constructor?.name === 'Uint8Array' ||\n\t\t(data as { constructor: { name: string } })?.constructor?.name === 'Buffer'\n\t);\n}\n\nexport function uint8ArrayConcat(...parts: Uint8Array[]): Uint8Array {\n\tconst length = parts.reduce((prev, part) => {\n\t\tconst agg = prev + part.length;\n\t\treturn agg;\n\t}, 0);\n\tconst result = new Uint8Array(length);\n\tlet offset = 0;\n\tfor (const part of parts) {\n\t\tresult.set(part, offset);\n\t\toffset += part.length;\n\t}\n\treturn result;\n}\n\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function uint8ArrayEquals(a: Uint8Array, b: Uint8Array): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.byteLength !== b.byteLength) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < a.byteLength; i += 1) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @module Utils\n */\n\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToUtf8, utf8ToBytes as ecUtf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { Address, Bytes, HexString, Numbers, ValueTypes } from 'web3-types';\nimport {\n\tisAddress,\n\tisHex,\n\tisHexStrict,\n\tisInt,\n\tisUInt,\n\tisNullish,\n\tutils,\n\tutils as validatorUtils,\n\tvalidator,\n\tbigintPower,\n} from 'web3-validator';\n\nimport {\n\tHexProcessingError,\n\tInvalidAddressError,\n\tInvalidBooleanError,\n\tInvalidBytesError,\n\tInvalidNumberError,\n\tInvalidUnitError,\n\tInvalidIntegerError,\n} from 'web3-errors';\nimport { isUint8Array } from './uint8array.js';\n\n// Ref: https://ethdocs.org/en/latest/ether.html\n// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)\n/** @internal */\nexport const ethUnitMap = {\n\tnoether: BigInt(0),\n\twei: BigInt(1),\n\tkwei: BigInt(1000),\n\tKwei: BigInt(1000),\n\tbabbage: BigInt(1000),\n\tfemtoether: BigInt(1000),\n\tmwei: BigInt(1000000),\n\tMwei: BigInt(1000000),\n\tlovelace: BigInt(1000000),\n\tpicoether: BigInt(1000000),\n\tgwei: BigInt(1000000000),\n\tGwei: BigInt(1000000000),\n\tshannon: BigInt(1000000000),\n\tnanoether: BigInt(1000000000),\n\tnano: BigInt(1000000000),\n\tszabo: BigInt(1000000000000),\n\tmicroether: BigInt(1000000000000),\n\tmicro: BigInt(1000000000000),\n\tfinney: BigInt(1000000000000000),\n\tmilliether: BigInt(1000000000000000),\n\tmilli: BigInt(1000000000000000),\n\tether: BigInt('1000000000000000000'),\n\tkether: BigInt('1000000000000000000000'),\n\tgrand: BigInt('1000000000000000000000'),\n\tmether: BigInt('1000000000000000000000000'),\n\tgether: BigInt('1000000000000000000000000000'),\n\ttether: BigInt('1000000000000000000000000000000'),\n};\n\nconst PrecisionLossWarning =\n\t'Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods';\n\nexport type EtherUnits = keyof typeof ethUnitMap;\n/**\n * Convert a value from bytes to Uint8Array\n * @param data - Data to be converted\n * @returns - The Uint8Array representation of the input data\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToUint8Array(\"0xab\")));\n * > Uint8Array(1) [ 171 ]\n * ```\n */\nexport const bytesToUint8Array = (data: Bytes): Uint8Array | never => {\n\tvalidator.validate(['bytes'], [data]);\n\n\tif (isUint8Array(data)) {\n\t\treturn data;\n\t}\n\n\tif (Array.isArray(data)) {\n\t\treturn new Uint8Array(data);\n\t}\n\n\tif (typeof data === 'string') {\n\t\treturn validatorUtils.hexToUint8Array(data);\n\t}\n\n\tthrow new InvalidBytesError(data);\n};\n\n/**\n * @internal\n */\nconst { uint8ArrayToHexString } = validatorUtils;\n\n/**\n * Convert a byte array to a hex string\n * @param bytes - Byte array to be converted\n * @returns - The hex string representation of the input byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));\n * > \"0x480c\"\n *\n */\nexport const bytesToHex = (bytes: Bytes): HexString =>\n\tuint8ArrayToHexString(bytesToUint8Array(bytes));\n\n/**\n * Convert a hex string to a byte array\n * @param hex - Hex string to be converted\n * @returns - The byte array representation of the input hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToBytes('0x74657374'));\n * > Uint8Array(4) [ 116, 101, 115, 116 ]\n * ```\n */\nexport const hexToBytes = (bytes: HexString): Uint8Array => {\n\tif (typeof bytes === 'string' && bytes.slice(0, 2).toLowerCase() !== '0x') {\n\t\treturn bytesToUint8Array(`0x${bytes}`);\n\t}\n\treturn bytesToUint8Array(bytes);\n};\n\n/**\n * Converts value to it's number representation\n * @param value - Hex string to be converted\n * @returns - The number representation of the input value\n *\n * @example\n * ```ts\n * conoslle.log(web3.utils.hexToNumber('0xa'));\n * > 10\n * ```\n */\nexport const hexToNumber = (value: HexString): bigint | number => {\n\tvalidator.validate(['hex'], [value]);\n\n\t// To avoid duplicate code and circular dependency we will\n\t// use `hexToNumber` implementation from `web3-validator`\n\treturn validatorUtils.hexToNumber(value);\n};\n\n/**\n * Converts value to it's number representation @alias `hexToNumber`\n */\nexport const toDecimal = hexToNumber;\n\n/**\n * Converts value to it's hex representation\n * @param value - Value to be converted\n * @param hexstrict - Add padding to converted value if odd, to make it hexstrict\n * @returns - The hex representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.numberToHex(10));\n * > \"0xa\"\n * ```\n */\nexport const numberToHex = (value: Numbers, hexstrict?: boolean): HexString => {\n\tif (typeof value !== 'bigint') validator.validate(['int'], [value]);\n\t// To avoid duplicate code and circular dependency we will\n\t// use `numberToHex` implementation from `web3-validator`\n\tlet updatedValue = validatorUtils.numberToHex(value);\n\tif (hexstrict) {\n\t\tif (!updatedValue.startsWith('-') && updatedValue.length % 2 === 1) {\n\t\t\t// To avoid duplicate a circular dependency we will not be using the padLeft method\n\t\t\tupdatedValue = '0x0'.concat(updatedValue.slice(2));\n\t\t} else if (updatedValue.length % 2 === 0 && updatedValue.startsWith('-'))\n\t\t\tupdatedValue = '-0x0'.concat(updatedValue.slice(3));\n\t}\n\treturn updatedValue;\n};\n/**\n * Converts value to it's hex representation @alias `numberToHex`\n *\n */\nexport const fromDecimal = numberToHex;\n\n/**\n * Converts value to it's decimal representation in string\n * @param value - Hex string to be converted\n * @returns - The decimal representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToNumberString('0xa'));\n * > \"10\"\n * ```\n */\nexport const hexToNumberString = (data: HexString): string => hexToNumber(data).toString();\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n * @param str - Utf8 string to be converted\n * @returns - The hex representation of the input string\n *\n * @example\n * ```ts\n * console.log(utf8ToHex('web3.js'));\n * > \"0x776562332e6a73\"\n * ```\n *\n */\nexport const utf8ToHex = (str: string): HexString => {\n\tvalidator.validate(['string'], [str]);\n\n\t// To be compatible with 1.x trim null character\n\t// eslint-disable-next-line no-control-regex\n\tlet strWithoutNullCharacter = str.replace(/^(?:\\u0000)/, '');\n\t// eslint-disable-next-line no-control-regex\n\tstrWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\\u0000)$/, '');\n\n\treturn bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));\n};\n\n/**\n * @alias utf8ToHex\n */\n\nexport const fromUtf8 = utf8ToHex;\n/**\n * @alias utf8ToHex\n */\nexport const stringToHex = utf8ToHex;\n\n/**\n * Should be called to get utf8 from it's hex representation\n * @param str - Hex string to be converted\n * @returns - Utf8 string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nexport const hexToUtf8 = (str: HexString): string => bytesToUtf8(hexToBytes(str));\n\n/**\n * @alias hexToUtf8\n */\nexport const toUtf8 = (input: HexString | Uint8Array) => {\n\tif (typeof input === 'string') {\n\t\treturn hexToUtf8(input);\n\t}\n\tvalidator.validate(['bytes'], [input]);\n\treturn bytesToUtf8(input);\n};\n\nexport const utf8ToBytes = ecUtf8ToBytes;\n\n/**\n * @alias hexToUtf8\n */\nexport const hexToString = hexToUtf8;\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n * @param str - String to be converted to hex\n * @returns - Hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.asciiToHex('Hello World'));\n * > 0x48656c6c6f20576f726c64\n * ```\n */\nexport const asciiToHex = (str: string): HexString => {\n\tvalidator.validate(['string'], [str]);\n\tlet hexString = '';\n\tfor (let i = 0; i < str.length; i += 1) {\n\t\tconst hexCharCode = str.charCodeAt(i).toString(16);\n\t\t// might need a leading 0\n\t\thexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;\n\t}\n\treturn `0x${hexString}`;\n};\n\n/**\n * @alias asciiToHex\n */\nexport const fromAscii = asciiToHex;\n\n/**\n * Should be called to get ascii from it's hex representation\n * @param str - Hex string to be converted to ascii\n * @returns - Ascii string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nexport const hexToAscii = (str: HexString): string => {\n\tconst decoder = new TextDecoder('ascii');\n\treturn decoder.decode(hexToBytes(str));\n};\n\n/**\n * @alias hexToAscii\n */\nexport const toAscii = hexToAscii;\n\n/**\n * Auto converts any given value into it's hex representation.\n * @param value - Value to be converted to hex\n * @param returnType - If true, it will return the type of the value\n *\n * @example\n * ```ts\n * console.log(web3.utils.toHex(10));\n * > 0xa\n *\n * console.log(web3.utils.toHex('0x123', true));\n * > bytes\n *```\n */\nexport const toHex = (\n\tvalue: Numbers | Bytes | Address | boolean | object,\n\treturnType?: boolean,\n): HexString | ValueTypes => {\n\tif (typeof value === 'string' && isAddress(value)) {\n\t\treturn returnType ? 'address' : `0x${value.toLowerCase().replace(/^0x/i, '')}`;\n\t}\n\n\tif (typeof value === 'boolean') {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\treturn returnType ? 'bool' : value ? '0x01' : '0x00';\n\t}\n\n\tif (typeof value === 'number') {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\treturn returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n\t}\n\n\tif (typeof value === 'bigint') {\n\t\treturn returnType ? 'bigint' : numberToHex(value);\n\t}\n\n\tif (isUint8Array(value)) {\n\t\treturn returnType ? 'bytes' : bytesToHex(value);\n\t}\n\n\tif (typeof value === 'object' && !!value) {\n\t\treturn returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n\t}\n\n\tif (typeof value === 'string') {\n\t\tif (value.startsWith('-0x') || value.startsWith('-0X')) {\n\t\t\treturn returnType ? 'int256' : numberToHex(value);\n\t\t}\n\n\t\tif (isHexStrict(value)) {\n\t\t\treturn returnType ? 'bytes' : value;\n\t\t}\n\t\tif (isHex(value) && !isInt(value) && !isUInt(value)) {\n\t\t\treturn returnType ? 'bytes' : `0x${value}`;\n\t\t}\n\t\tif (isHex(value) && !isInt(value) && isUInt(value)) {\n\t\t\t// This condition seems problematic because meeting\n\t\t\t// both conditions `!isInt(value) && isUInt(value)` should be impossible.\n\t\t\t// But a value pass for those conditions: \"101611154195520776335741463917853444671577865378275924493376429267637792638729\"\n\t\t\t// Note that according to the docs: it is supposed to be treated as a string (https://docs.web3js.org/guides/web3_upgrade_guide/x/web3_utils_migration_guide#conversion-to-hex)\n\t\t\t// In short, the strange is that isInt(value) is false but isUInt(value) is true for the value above.\n\t\t\t// TODO: isUInt(value) should be investigated.\n\n\t\t\t// However, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729', true)` is called, it will return `true`.\n\t\t\t// But, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729')` is called, it will throw inside `numberToHex`.\n\t\t\treturn returnType ? 'uint' : numberToHex(value);\n\t\t}\n\n\t\tif (!Number.isFinite(value)) {\n\t\t\treturn returnType ? 'string' : utf8ToHex(value);\n\t\t}\n\t}\n\n\tthrow new HexProcessingError(value);\n};\n\n/**\n * Converts any given value into it's number representation, if possible, else into it's bigint representation.\n * @param value - The value to convert\n * @returns - Returns the value in number or bigint representation\n *\n * @example\n * ```ts\n * console.log(web3.utils.toNumber(1));\n * > 1\n * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));\n * > 9007199254740992n\n *\n * ```\n */\nexport const toNumber = (value: Numbers): number | bigint => {\n\tif (typeof value === 'number') {\n\t\tif (value > 1e20) {\n\t\t\tconsole.warn(PrecisionLossWarning);\n\t\t\t// JavaScript converts numbers >= 10^21 to scientific notation when coerced to strings,\n\t\t\t// leading to potential parsing errors and incorrect representations.\n\t\t\t// For instance, String(10000000000000000000000) yields '1e+22'.\n\t\t\t// Using BigInt prevents this\n\t\t\treturn BigInt(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'bigint') {\n\t\treturn value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER\n\t\t\t? Number(value)\n\t\t\t: value;\n\t}\n\n\tif (typeof value === 'string' && isHexStrict(value)) {\n\t\treturn hexToNumber(value);\n\t}\n\n\ttry {\n\t\treturn toNumber(BigInt(value));\n\t} catch {\n\t\tthrow new InvalidNumberError(value);\n\t}\n};\n\n/**\n * Auto converts any given value into it's bigint representation\n *\n * @param value - The value to convert\n * @returns - Returns the value in bigint representation\n\n * @example\n * ```ts\n * console.log(web3.utils.toBigInt(1));\n * > 1n\n * ```\n */\nexport const toBigInt = (value: unknown): bigint => {\n\tif (typeof value === 'number') {\n\t\treturn BigInt(value);\n\t}\n\n\tif (typeof value === 'bigint') {\n\t\treturn value;\n\t}\n\n\t// isHex passes for dec, too\n\tif (typeof value === 'string' && isHex(value)) {\n\t\tif (value.startsWith('-')) {\n\t\t\treturn -BigInt(value.substring(1));\n\t\t}\n\t\treturn BigInt(value);\n\t}\n\n\tthrow new InvalidNumberError(value);\n};\n\n/**\n * Takes a number of wei and converts it to any other ether unit.\n * @param number - The value in wei\n * @param unit - The unit to convert to\n * @returns - Returns the converted value in the given unit\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromWei(\"1\", \"ether\"));\n * > 0.000000000000000001\n *\n * console.log(web3.utils.fromWei(\"1\", \"shannon\"));\n * > 0.000000001\n * ```\n */\nexport const fromWei = (number: Numbers, unit: EtherUnits | number): string => {\n\tlet denomination;\n\tif (typeof unit === 'string') {\n\t\tdenomination = ethUnitMap[unit];\n\n\t\tif (!denomination) {\n\t\t\tthrow new InvalidUnitError(unit);\n\t\t}\n\t} else {\n\t\tif (unit < 0 || !Number.isInteger(unit)) {\n\t\t\tthrow new InvalidIntegerError(unit);\n\t\t}\n\t\tdenomination = bigintPower(BigInt(10), BigInt(unit));\n\t}\n\n\t// value in wei would always be integer\n\t// 13456789, 1234\n\tconst value = String(toNumber(number));\n\n\t// count number of zeros in denomination\n\t// 1000000 -> 6\n\tconst numberOfZerosInDenomination = denomination.toString().length - 1;\n\n\tif (numberOfZerosInDenomination <= 0) {\n\t\treturn value.toString();\n\t}\n\n\t// pad the value with required zeros\n\t// 13456789 -> 13456789, 1234 -> 001234\n\tconst zeroPaddedValue = value.padStart(numberOfZerosInDenomination, '0');\n\n\t// get the integer part of value by counting number of zeros from start\n\t// 13456789 -> '13'\n\t// 001234 -> ''\n\tconst integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);\n\n\t// get the fraction part of value by counting number of zeros backward\n\t// 13456789 -> '456789'\n\t// 001234 -> '001234'\n\tconst fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\\.?0+$/, '');\n\n\tif (integer === '') {\n\t\treturn `0.${fraction}`;\n\t}\n\n\tif (fraction === '') {\n\t\treturn integer;\n\t}\n\tconst updatedValue = `${integer}.${fraction}`;\n\n\treturn updatedValue.slice(0, integer.length + numberOfZerosInDenomination + 1);\n};\n\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * @param number - The number to convert.\n * @param unit - {@link EtherUnits} The unit of the number passed.\n * @returns The number converted to wei.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toWei(\"0.001\", \"ether\"));\n * > 1000000000000000 //(wei)\n * ```\n */\n// todo in 1.x unit defaults to 'ether'\nexport const toWei = (number: Numbers, unit: EtherUnits | number): string => {\n\tvalidator.validate(['number'], [number]);\n\n\tlet denomination;\n\tif (typeof unit === 'string') {\n\t\tdenomination = ethUnitMap[unit];\n\t\tif (!denomination) {\n\t\t\tthrow new InvalidUnitError(unit);\n\t\t}\n\t} else {\n\t\tif (unit < 0 || !Number.isInteger(unit)) {\n\t\t\tthrow new InvalidIntegerError(unit);\n\t\t}\n\n\t\tdenomination = bigintPower(BigInt(10), BigInt(unit));\n\t}\n\n\tlet parsedNumber = number;\n\tif (typeof parsedNumber === 'number') {\n\t\tif (parsedNumber < 1e-15) {\n\t\t\tconsole.warn(PrecisionLossWarning);\n\t\t}\n\t\tif (parsedNumber > 1e20) {\n\t\t\tconsole.warn(PrecisionLossWarning);\n\n\t\t\tparsedNumber = BigInt(parsedNumber);\n\t\t} else {\n\t\t\t// in case there is a decimal point, we need to convert it to string\n\t\t\tparsedNumber = parsedNumber.toLocaleString('fullwide', {\n\t\t\t\tuseGrouping: false,\n\t\t\t\tmaximumFractionDigits: 20,\n\t\t\t});\n\t\t}\n\t}\n\n\t// if value is decimal e.g. 24.56 extract `integer` and `fraction` part\n\t// to avoid `fraction` to be null use `concat` with empty string\n\tconst [integer, fraction] = String(\n\t\ttypeof parsedNumber === 'string' && !isHexStrict(parsedNumber)\n\t\t\t? parsedNumber\n\t\t\t: toNumber(parsedNumber),\n\t)\n\t\t.split('.')\n\t\t.concat('');\n\n\t// join the value removing `.` from\n\t// 24.56 -> 2456\n\tconst value = BigInt(`${integer}${fraction}`);\n\n\t// multiply value with denomination\n\t// 2456 * 1000000 -> 2456000000\n\tconst updatedValue = value * denomination;\n\n\t// check if whole number was passed in\n\tconst decimals = fraction.length;\n\tif (decimals === 0) {\n\t\treturn updatedValue.toString();\n\t}\n\n\t// trim the value to remove extra zeros\n\treturn updatedValue.toString().slice(0, -decimals);\n};\n\n/**\n * Will convert an upper or lowercase Ethereum address to a checksum address.\n * @param address - An address string\n * @returns\tThe checksum address\n * @example\n * ```ts\n * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');\n * > \"0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\"\n * ```\n */\nexport const toChecksumAddress = (address: Address): string => {\n\tif (!isAddress(address, false)) {\n\t\tthrow new InvalidAddressError(address);\n\t}\n\n\tconst lowerCaseAddress = address.toLowerCase().replace(/^0x/i, '');\n\n\t// calling `Uint8Array.from` because `noble-hashes` checks with `instanceof Uint8Array` that fails in some edge cases:\n\t// \thttps://github.com/paulmillr/noble-hashes/issues/25#issuecomment-1750106284\n\tconst hash = utils.uint8ArrayToHexString(\n\t\tkeccak256(validatorUtils.ensureIfUint8Array(utf8ToBytes(lowerCaseAddress))),\n\t);\n\n\tif (\n\t\tisNullish(hash) ||\n\t\thash === '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\t)\n\t\treturn ''; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n\n\tlet checksumAddress = '0x';\n\n\tconst addressHash = hash.replace(/^0x/i, '');\n\n\tfor (let i = 0; i < lowerCaseAddress.length; i += 1) {\n\t\t// If ith character is 8 to f then make it uppercase\n\t\tif (parseInt(addressHash[i], 16) > 7) {\n\t\t\tchecksumAddress += lowerCaseAddress[i].toUpperCase();\n\t\t} else {\n\t\t\tchecksumAddress += lowerCaseAddress[i];\n\t\t}\n\t}\n\treturn checksumAddress;\n};\n\nexport const toBool = (value: boolean | string | number | unknown): boolean => {\n\tif (typeof value === 'boolean') {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'number' && (value === 0 || value === 1)) {\n\t\treturn Boolean(value);\n\t}\n\n\tif (typeof value === 'bigint' && (value === BigInt(0) || value === BigInt(1))) {\n\t\treturn Boolean(value);\n\t}\n\n\tif (\n\t\ttypeof value === 'string' &&\n\t\t!isHexStrict(value) &&\n\t\t(value === '1' || value === '0' || value === 'false' || value === 'true')\n\t) {\n\t\tif (value === 'true') {\n\t\t\treturn true;\n\t\t}\n\t\tif (value === 'false') {\n\t\t\treturn false;\n\t\t}\n\t\treturn Boolean(Number(value));\n\t}\n\n\tif (typeof value === 'string' && isHexStrict(value) && (value === '0x1' || value === '0x0')) {\n\t\treturn Boolean(toNumber(value));\n\t}\n\n\tthrow new InvalidBooleanError(value);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @module Utils\n */\n\nimport { InvalidBlockError } from 'web3-errors';\nimport {\n\tcheckAddressCheckSum as checkAddressCheckSumValidator,\n\tisAddress as isAddressValidator,\n\tisBlockTag,\n\tisBloom as isBloomValidator,\n\tisContractAddressInBloom as isContractAddressInBloomValidator,\n\tisHex as isHexValidator,\n\tisHexStrict as isHexStrictValidator,\n\tisInBloom as isInBloomValidator,\n\tisNullish as isNullishValidator,\n\tisTopic as isTopicValidator,\n\tisTopicInBloom as isTopicInBloomValidator,\n\tisUserEthereumAddressInBloom as isUserEthereumAddressInBloomValidator,\n} from 'web3-validator';\nimport { BlockNumberOrTag, BlockTags, ContractInitOptions } from 'web3-types';\n\n/**\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isHexStrict = isHexStrictValidator;\n\n/**\n * returns true if input is a hexstring, number or bigint\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isHex = isHexValidator;\n\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const checkAddressCheckSum = checkAddressCheckSumValidator;\n\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isAddress = isAddressValidator;\n\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isBloom = isBloomValidator;\n\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isInBloom = isInBloomValidator;\n\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isUserEthereumAddressInBloom = isUserEthereumAddressInBloomValidator;\n\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isContractAddressInBloom = isContractAddressInBloomValidator;\n\n/**\n * Checks if its a valid topic\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isTopic = isTopicValidator;\n\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isTopicInBloom = isTopicInBloomValidator;\n\n/**\n * Compares between block A and block B\n * @param blockA - Block number or string\n * @param blockB - Block number or string\n *\n * @returns - Returns -1 if a \\< b, returns 1 if a \\> b and returns 0 if a == b\n *\n * @example\n * ```ts\n * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));\n * > -1\n *\n * console.log(web3.utils.compareBlockNumbers(12, 11));\n * > 1\n * ```\n */\nexport const compareBlockNumbers = (blockA: BlockNumberOrTag, blockB: BlockNumberOrTag) => {\n\tconst isABlockTag = typeof blockA === 'string' && isBlockTag(blockA);\n\tconst isBBlockTag = typeof blockB === 'string' && isBlockTag(blockB);\n\n\tif (\n\t\tblockA === blockB ||\n\t\t((blockA === 'earliest' || blockA === 0) && (blockB === 'earliest' || blockB === 0)) // only exception compare blocktag with number\n\t) {\n\t\treturn 0;\n\t}\n\tif (blockA === 'earliest' && blockB > 0) {\n\t\treturn -1;\n\t}\n\tif (blockB === 'earliest' && blockA > 0) {\n\t\treturn 1;\n\t}\n\n\tif (isABlockTag && isBBlockTag) {\n\t\t// Increasing order:  earliest, finalized , safe, latest, pending\n\t\tconst tagsOrder = {\n\t\t\t[BlockTags.EARLIEST as string]: 1,\n\t\t\t[BlockTags.FINALIZED as string]: 2,\n\t\t\t[BlockTags.SAFE as string]: 3,\n\t\t\t[BlockTags.LATEST as string]: 4,\n\t\t\t[BlockTags.PENDING as string]: 5,\n\t\t};\n\n\t\tif (tagsOrder[blockA] < tagsOrder[blockB]) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn 1;\n\t}\n\tif ((isABlockTag && !isBBlockTag) || (!isABlockTag && isBBlockTag)) {\n\t\tthrow new InvalidBlockError('Cannot compare blocktag with provided non-blocktag input.');\n\t}\n\n\tconst bigIntA = BigInt(blockA);\n\tconst bigIntB = BigInt(blockB);\n\n\tif (bigIntA < bigIntB) {\n\t\treturn -1;\n\t}\n\tif (bigIntA === bigIntB) {\n\t\treturn 0;\n\t}\n\treturn 1;\n};\n\nexport const isContractInitOptions = (options: unknown): options is ContractInitOptions =>\n\ttypeof options === 'object' &&\n\t!isNullishValidator(options) &&\n\tObject.keys(options).length !== 0 &&\n\t[\n\t\t'input',\n\t\t'data',\n\t\t'from',\n\t\t'gas',\n\t\t'gasPrice',\n\t\t'gasLimit',\n\t\t'address',\n\t\t'jsonInterface',\n\t\t'syncWithContext',\n\t\t'dataInputFill',\n\t].some(key => key in options);\n\nexport const isNullish = isNullishValidator;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @module Utils\n */\n\nimport { Numbers } from 'web3-types';\nimport { NibbleWidthError } from 'web3-errors';\nimport { isHexStrict, validator, utils as validatorUtils, bigintPower } from 'web3-validator';\nimport { numberToHex, toHex, toNumber } from './converters.js';\n\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n *\n * console.log(web3.utils.padLeft('0x123', 10));\n * >0x0000000123\n * ```\n */\nexport const padLeft = (value: Numbers, characterAmount: number, sign = '0'): string => {\n\t// To avoid duplicate code and circular dependency we will\n\t// use `padLeft` implementation from `web3-validator`\n\n\tif (typeof value === 'string') {\n\t\tif (!isHexStrict(value)) {\n\t\t\treturn value.padStart(characterAmount, sign);\n\t\t}\n\t\treturn validatorUtils.padLeft(value, characterAmount, sign);\n\t}\n\n\tvalidator.validate(['int'], [value]);\n\n\treturn validatorUtils.padLeft(value, characterAmount, sign);\n};\n\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n * console.log(web3.utils.padRight('0x123', 10));\n * > 0x1230000000\n *\n * console.log(web3.utils.padRight('0x123', 10, '1'));\n * > 0x1231111111\n * ```\n */\nexport const padRight = (value: Numbers, characterAmount: number, sign = '0'): string => {\n\tif (typeof value === 'string' && !isHexStrict(value)) {\n\t\treturn value.padEnd(characterAmount, sign);\n\t}\n\n\tvalidator.validate(['int'], [value]);\n\n\tconst hexString = typeof value === 'string' && isHexStrict(value) ? value : numberToHex(value);\n\n\tconst prefixLength = hexString.startsWith('-') ? 3 : 2;\n\treturn hexString.padEnd(characterAmount + prefixLength, sign);\n};\n\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`\n */\nexport const rightPad = padRight;\n\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`\n */\nexport const leftPad = padLeft;\n\n/**\n * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n *\n * @returns The hex string of the two’s complement.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toTwosComplement(13, 32));\n * > 0x0000000000000000000000000000000d\n *\n * console.log(web3.utils.toTwosComplement('-0x1', 32));\n * > 0xffffffffffffffffffffffffffffffff\n *\n * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));\n * > 0x00000000000000000020000000000000\n * ```\n */\nexport const toTwosComplement = (value: Numbers, nibbleWidth = 64): string => {\n\tvalidator.validate(['int'], [value]);\n\n\tconst val = toNumber(value);\n\n\tif (val >= 0) return padLeft(toHex(val), nibbleWidth);\n\n\tconst largestBit = bigintPower(BigInt(2), BigInt(nibbleWidth * 4));\n\tif (-val >= largestBit) {\n\t\tthrow new NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);\n\t}\n\tconst updatedVal = BigInt(val);\n\n\tconst complement = updatedVal + largestBit;\n\n\treturn padLeft(numberToHex(complement), nibbleWidth);\n};\n\n/**\n * Converts the twos complement into a decimal number or big int.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n * @returns The decimal number or big int.\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromTwosComplement('0x0000000000000000000000000000000d', 32'));\n * > 13\n *\n * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));\n * > 9007199254740992n\n * ```\n */\nexport const fromTwosComplement = (value: Numbers, nibbleWidth = 64): number | bigint => {\n\tvalidator.validate(['int'], [value]);\n\n\tconst val = toNumber(value);\n\n\tif (val < 0) return val;\n\n\tconst largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));\n\n\tif (largestBit > nibbleWidth * 4)\n\t\tthrow new NibbleWidthError(`value: \"${value}\", nibbleWidth: \"${nibbleWidth}\"`);\n\n\t// check the largest bit to see if negative\n\tif (nibbleWidth * 4 !== largestBit) return val;\n\n\tconst complement = bigintPower(BigInt(2), BigInt(nibbleWidth) * BigInt(4));\n\n\treturn toNumber(BigInt(val) - complement);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * This package provides utility functions for Ethereum dapps and other web3.js packages.\n *\n * For using Utils functions, first install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Web3 Utils functions will be available as mentioned below.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3();\n *\n * const value = web3.utils.fromWei(\"1\", \"ether\")\n *\n * ```\n *\n * For using individual package install `web3-utils` package using `npm i web3-utils` or `yarn add web3-utils` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { fromWei, soliditySha3Raw } from 'web3-utils';\n *\n * console.log(fromWei(\"1\", \"ether\"));\n * console.log(soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n *\n * ```\n * @module Utils\n */\n\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { utf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport {\n\tInvalidAddressError,\n\tInvalidBooleanError,\n\tInvalidBytesError,\n\tInvalidLargeValueError,\n\tInvalidSizeError,\n\tInvalidStringError,\n\tInvalidUnsignedIntegerError,\n} from 'web3-errors';\nimport {\n\tBytes,\n\tEncodingTypes,\n\tNumbers,\n\tSha3Input,\n\tTypedObject,\n\tTypedObjectAbbreviated,\n} from 'web3-types';\nimport { utils as validatorUtils, isAddress, isNullish, isHexStrict } from 'web3-validator';\nimport {\n\tbytesToUint8Array,\n\tbytesToHex,\n\thexToBytes,\n\ttoBigInt,\n\ttoHex,\n\ttoNumber,\n\tutf8ToHex,\n} from './converters.js';\nimport { leftPad, rightPad, toTwosComplement } from './string_manipulation.js';\n\nconst SHA3_EMPTY_BYTES = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n\n/**\n * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.keccak256Wrapper('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.keccak256Wrapper(1));\n * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n *\n * console.log(web3.utils.keccak256Wrapper(0xaf12fd));\n * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c\n * ```\n */\nexport const keccak256Wrapper = (\n\tdata: Bytes | Numbers | string | ReadonlyArray<number>,\n): string => {\n\tlet processedData;\n\tif (typeof data === 'bigint' || typeof data === 'number') {\n\t\tprocessedData = utf8ToBytes(data.toString());\n\t} else if (Array.isArray(data)) {\n\t\tprocessedData = new Uint8Array(data);\n\t} else if (typeof data === 'string' && !isHexStrict(data)) {\n\t\tprocessedData = utf8ToBytes(data);\n\t} else {\n\t\tprocessedData = bytesToUint8Array(data as Bytes);\n\t}\n\treturn bytesToHex(keccak256(validatorUtils.ensureIfUint8Array(processedData)));\n};\n\nexport { keccak256Wrapper as keccak256 };\n\n/**\n * computes the Keccak-256 hash of the input and returns a hexstring\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.sha3('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3(''));\n * > undefined\n * ```\n */\nexport const sha3 = (data: Bytes): string | undefined => {\n\tlet updatedData: Uint8Array;\n\n\tif (typeof data === 'string') {\n\t\tif (data.startsWith('0x') && isHexStrict(data)) {\n\t\t\tupdatedData = hexToBytes(data);\n\t\t} else {\n\t\t\tupdatedData = utf8ToBytes(data);\n\t\t}\n\t} else {\n\t\tupdatedData = data;\n\t}\n\tconst hash = keccak256Wrapper(updatedData);\n\n\t// EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n\treturn hash === SHA3_EMPTY_BYTES ? undefined : hash;\n};\n\n/**\n * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * conosle.log(web3.utils.sha3Raw('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3Raw(''));\n * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n * ```\n */\nexport const sha3Raw = (data: Bytes): string => {\n\tconst hash = sha3(data);\n\tif (isNullish(hash)) {\n\t\treturn SHA3_EMPTY_BYTES;\n\t}\n\n\treturn hash;\n};\n\n/**\n * returns type and value\n * @param arg - the input to return the type and value\n * @returns - the type and value of the input\n */\nconst getType = (arg: Sha3Input): [string, EncodingTypes] => {\n\tif (Array.isArray(arg)) {\n\t\tthrow new Error('Autodetection of array types is not supported.');\n\t}\n\tlet type;\n\tlet value;\n\t// if type is given\n\tif (\n\t\ttypeof arg === 'object' &&\n\t\t('t' in arg || 'type' in arg) &&\n\t\t('v' in arg || 'value' in arg)\n\t) {\n\t\ttype = 't' in arg ? arg.t : arg.type;\n\t\tvalue = 'v' in arg ? arg.v : arg.value;\n\n\t\ttype = type.toLowerCase() === 'bigint' ? 'int' : type;\n\t} else if (typeof arg === 'bigint') {\n\t\treturn ['int', arg];\n\t}\n\t// otherwise try to guess the type\n\telse {\n\t\ttype = toHex(arg, true);\n\t\tvalue = toHex(arg);\n\n\t\tif (!type.startsWith('int') && !type.startsWith('uint')) {\n\t\t\ttype = 'bytes';\n\t\t}\n\t}\n\n\tif (\n\t\t(type.startsWith('int') || type.startsWith('uint')) &&\n\t\ttypeof value === 'string' &&\n\t\t!/^(-)?0x/i.test(value)\n\t) {\n\t\tvalue = toBigInt(value);\n\t}\n\treturn [type, value];\n};\n\n/**\n * returns the type with size if uint or int\n * @param name - the input to return the type with size\n * @returns - the type with size of the input\n */\nconst elementaryName = (name: string): string => {\n\tif (name.startsWith('int[')) {\n\t\treturn `int256${name.slice(3)}`;\n\t}\n\tif (name === 'int') {\n\t\treturn 'int256';\n\t}\n\tif (name.startsWith('uint[')) {\n\t\treturn `uint256'${name.slice(4)}`;\n\t}\n\tif (name === 'uint') {\n\t\treturn 'uint256';\n\t}\n\treturn name;\n};\n\n/**\n * returns the size of the value of type 'byte'\n */\nconst parseTypeN = (value: string, typeLength: number): number => {\n\tconst typesize = /^(\\d+).*$/.exec(value.slice(typeLength));\n\treturn typesize ? parseInt(typesize[1], 10) : 0;\n};\n\n/**\n * returns the bit length of the value\n * @param value - the input to return the bit length\n * @returns - the bit length of the input\n */\nconst bitLength = (value: bigint | number): number => {\n\tconst updatedVal = value.toString(2);\n\treturn updatedVal.length;\n};\n\n/**\n * Pads the value based on size and type\n * returns a string of the padded value\n * @param type - the input to pad\n * @returns = the padded value\n */\nconst solidityPack = (type: string, val: EncodingTypes): string => {\n\tconst value = val.toString();\n\tif (type === 'string') {\n\t\tif (typeof val === 'string') return utf8ToHex(val);\n\t\tthrow new InvalidStringError(val);\n\t}\n\tif (type === 'bool' || type === 'boolean') {\n\t\tif (typeof val === 'boolean') return val ? '01' : '00';\n\t\tthrow new InvalidBooleanError(val);\n\t}\n\n\tif (type === 'address') {\n\t\tif (!isAddress(value)) {\n\t\t\tthrow new InvalidAddressError(value);\n\t\t}\n\t\treturn value;\n\t}\n\tconst name = elementaryName(type);\n\tif (type.startsWith('uint')) {\n\t\tconst size = parseTypeN(name, 'uint'.length);\n\n\t\tif (size % 8 || size < 8 || size > 256) {\n\t\t\tthrow new InvalidSizeError(value);\n\t\t}\n\t\tconst num = toNumber(value);\n\t\tif (bitLength(num) > size) {\n\t\t\tthrow new InvalidLargeValueError(value);\n\t\t}\n\t\tif (num < BigInt(0)) {\n\t\t\tthrow new InvalidUnsignedIntegerError(value);\n\t\t}\n\n\t\treturn size ? leftPad(num.toString(16), (size / 8) * 2) : num.toString(16);\n\t}\n\n\tif (type.startsWith('int')) {\n\t\tconst size = parseTypeN(name, 'int'.length);\n\t\tif (size % 8 || size < 8 || size > 256) {\n\t\t\tthrow new InvalidSizeError(type);\n\t\t}\n\n\t\tconst num = toNumber(value);\n\t\tif (bitLength(num) > size) {\n\t\t\tthrow new InvalidLargeValueError(value);\n\t\t}\n\t\tif (num < BigInt(0)) {\n\t\t\treturn toTwosComplement(num.toString(), (size / 8) * 2);\n\t\t}\n\t\treturn size ? leftPad(num.toString(16), size / 4) : num.toString(16);\n\t}\n\n\tif (name === 'bytes') {\n\t\tif (value.replace(/^0x/i, '').length % 2 !== 0) {\n\t\t\tthrow new InvalidBytesError(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tif (type.startsWith('bytes')) {\n\t\tif (value.replace(/^0x/i, '').length % 2 !== 0) {\n\t\t\tthrow new InvalidBytesError(value);\n\t\t}\n\n\t\tconst size = parseTypeN(type, 'bytes'.length);\n\n\t\tif (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, '').length / 2) {\n\t\t\tthrow new InvalidBytesError(value);\n\t\t}\n\n\t\treturn rightPad(value, size * 2);\n\t}\n\treturn '';\n};\n\n/**\n * returns a string of the tightly packed value given based on the type\n * @param arg - the input to return the tightly packed value\n * @returns - the tightly packed value\n */\nexport const processSolidityEncodePackedArgs = (arg: Sha3Input): string => {\n\tconst [type, val] = getType(arg);\n\n\t// array case\n\tif (Array.isArray(val)) {\n\t\t// go through each element of the array and use map function to create new hexarg list\n\t\tconst hexArg = val.map((v: Numbers | boolean) => solidityPack(type, v).replace('0x', ''));\n\t\treturn hexArg.join('');\n\t}\n\n\tconst hexArg = solidityPack(type, val);\n\treturn hexArg.replace('0x', '');\n};\n\n/**\n * Encode packed arguments to a hexstring\n */\nexport const encodePacked = (...values: Sha3Input[]): string => {\n\tconst hexArgs = values.map(processSolidityEncodePackedArgs);\n\treturn `0x${hexArgs.join('').toLowerCase()}`;\n};\n\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, or null if input is empty\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3({ type: \"string\", value: \"31323334\" }));\n * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b\n * ```\n */\nexport const soliditySha3 = (...values: Sha3Input[]): string | undefined =>\n\tsha3(encodePacked(...values));\n\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0\n * ```\n */\nexport const soliditySha3Raw = (...values: TypedObject[] | TypedObjectAbbreviated[]): string =>\n\tsha3Raw(encodePacked(...values));\n\n/**\n * Get slot number for storage long string in contract. Basically for getStorage method\n * returns slotNumber where will data placed\n * @param mainSlotNumber - the slot number where will be stored hash of long string\n * @returns - the slot number where will be stored long string\n */\nexport const getStorageSlotNumForLongString = (mainSlotNumber: number | string) =>\n\tsha3(\n\t\t`0x${(typeof mainSlotNumber === 'number'\n\t\t\t? mainSlotNumber.toString()\n\t\t\t: mainSlotNumber\n\t\t).padStart(64, '0')}`,\n\t);\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiError } from 'web3-errors';\nimport { isNullish, isUint8Array, leftPad, rightPad, toHex } from 'web3-utils';\nimport {\n\tAbiInput,\n\tAbiCoderStruct,\n\tAbiFragment,\n\tAbiParameter,\n\tAbiStruct,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tAbiConstructorFragment,\n} from 'web3-types';\n\nexport const isAbiFragment = (item: unknown): item is AbiFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t['function', 'event', 'constructor', 'error'].includes((item as { type: string }).type);\n\nexport const isAbiErrorFragment = (item: unknown): item is AbiEventFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'error';\n\nexport const isAbiEventFragment = (item: unknown): item is AbiEventFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'event';\n\nexport const isAbiFunctionFragment = (item: unknown): item is AbiFunctionFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'function';\n\nexport const isAbiConstructorFragment = (item: unknown): item is AbiConstructorFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'constructor';\n\n/**\n * Check if type is simplified struct format\n */\nexport const isSimplifiedStructFormat = (\n\ttype: string | Partial<AbiParameter> | Partial<AbiInput>,\n): type is Omit<AbiParameter, 'components' | 'name'> =>\n\ttypeof type === 'object' &&\n\ttypeof (type as { components: unknown }).components === 'undefined' &&\n\ttypeof (type as { name: unknown }).name === 'undefined';\n\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n */\nexport const mapStructNameAndType = (structName: string): AbiStruct =>\n\tstructName.includes('[]')\n\t\t? { type: 'tuple[]', name: structName.slice(0, -2) }\n\t\t: { type: 'tuple', name: structName };\n\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n */\nexport const mapStructToCoderFormat = (struct: AbiStruct): Array<AbiCoderStruct> => {\n\tconst components: Array<AbiCoderStruct> = [];\n\n\tfor (const key of Object.keys(struct)) {\n\t\tconst item = struct[key];\n\n\t\tif (typeof item === 'object') {\n\t\t\tcomponents.push({\n\t\t\t\t...mapStructNameAndType(key),\n\t\t\t\tcomponents: mapStructToCoderFormat(item as unknown as AbiStruct),\n\t\t\t});\n\t\t} else {\n\t\t\tcomponents.push({\n\t\t\t\tname: key,\n\t\t\t\ttype: struct[key] as string,\n\t\t\t});\n\t\t}\n\t}\n\treturn components;\n};\n\n/**\n * Map types if simplified format is used\n */\nexport const mapTypes = (\n\ttypes: AbiInput[],\n): Array<string | AbiParameter | Record<string, unknown>> => {\n\tconst mappedTypes: Array<string | AbiParameter | Record<string, unknown>> = [];\n\n\tfor (const type of types) {\n\t\tlet modifiedType = type;\n\n\t\t// Clone object\n\t\tif (typeof type === 'object') {\n\t\t\tmodifiedType = { ...type };\n\t\t}\n\n\t\t// Remap `function` type params to bytes24 since Ethers does not\n\t\t// recognize former type. Solidity docs say `Function` is a bytes24\n\t\t// encoding the contract address followed by the function selector hash.\n\t\tif (typeof type === 'object' && type.type === 'function') {\n\t\t\tmodifiedType = { ...type, type: 'bytes24' };\n\t\t}\n\n\t\tif (isSimplifiedStructFormat(modifiedType)) {\n\t\t\tconst structName = Object.keys(modifiedType)[0] as unknown as keyof typeof modifiedType;\n\n\t\t\tmappedTypes.push({\n\t\t\t\t...mapStructNameAndType(structName),\n\t\t\t\tcomponents: mapStructToCoderFormat(\n\t\t\t\t\tmodifiedType[structName] as unknown as AbiStruct,\n\t\t\t\t) as unknown as AbiParameter[],\n\t\t\t});\n\t\t} else {\n\t\t\tmappedTypes.push(modifiedType);\n\t\t}\n\t}\n\n\treturn mappedTypes;\n};\n\n/**\n * returns true if input is a hexstring and is odd-lengthed\n */\nexport const isOddHexstring = (param: unknown): boolean =>\n\ttypeof param === 'string' && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;\n\n/**\n * format odd-length bytes to even-length\n */\nexport const formatOddHexstrings = (param: string): string =>\n\tisOddHexstring(param) ? `0x0${param.substring(2)}` : param;\n\nconst paramTypeBytes = /^bytes([0-9]*)$/;\nconst paramTypeBytesArray = /^bytes([0-9]*)\\[\\]$/;\nconst paramTypeNumber = /^(u?int)([0-9]*)$/;\nconst paramTypeNumberArray = /^(u?int)([0-9]*)\\[\\]$/;\n/**\n * Handle some formatting of params for backwards compatibility with Ethers V4\n */\nexport const formatParam = (type: string, _param: unknown): unknown => {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\t// clone if _param is an object\n\tconst param = typeof _param === 'object' && !Array.isArray(_param) ? { ..._param } : _param;\n\n\t// Format BN to string\n\tif (param instanceof BigInt || typeof param === 'bigint') {\n\t\treturn param.toString(10);\n\t}\n\n\tif (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\tconst paramClone = [...(param as Array<unknown>)];\n\t\treturn paramClone.map(p => formatParam(type.replace('[]', ''), p));\n\t}\n\n\t// Format correct width for u?int[0-9]*\n\tlet match = paramTypeNumber.exec(type);\n\tif (match) {\n\t\tconst size = parseInt(match[2] ? match[2] : '256', 10);\n\t\tif (size / 8 < (param as { length: number }).length) {\n\t\t\t// pad to correct bit width\n\t\t\treturn leftPad(param as string, size);\n\t\t}\n\t}\n\n\t// Format correct length for bytes[0-9]+\n\tmatch = paramTypeBytes.exec(type);\n\tif (match) {\n\t\tconst hexParam = isUint8Array(param) ? toHex(param) : param;\n\n\t\t// format to correct length\n\t\tconst size = parseInt(match[1], 10);\n\t\tif (size) {\n\t\t\tlet maxSize = size * 2;\n\n\t\t\tif ((param as string).startsWith('0x')) {\n\t\t\t\tmaxSize += 2;\n\t\t\t}\n\t\t\t// pad to correct length\n\t\t\tconst paddedParam =\n\t\t\t\t(hexParam as string).length < maxSize\n\t\t\t\t\t? rightPad(param as string, size * 2)\n\t\t\t\t\t: hexParam;\n\t\t\treturn formatOddHexstrings(paddedParam as string);\n\t\t}\n\n\t\treturn formatOddHexstrings(hexParam as string);\n\t}\n\treturn param;\n};\n\n/**\n *  used to flatten json abi inputs/outputs into an array of type-representing-strings\n */\n\nexport const flattenTypes = (\n\tincludeTuple: boolean,\n\tputs: ReadonlyArray<AbiParameter>,\n): string[] => {\n\tconst types: string[] = [];\n\n\tputs.forEach(param => {\n\t\tif (typeof param.components === 'object') {\n\t\t\tif (!param.type.startsWith('tuple')) {\n\t\t\t\tthrow new AbiError(\n\t\t\t\t\t`Invalid value given \"${param.type}\". Error: components found but type is not tuple.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst arrayBracket = param.type.indexOf('[');\n\t\t\tconst suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : '';\n\t\t\tconst result = flattenTypes(includeTuple, param.components);\n\n\t\t\tif (Array.isArray(result) && includeTuple) {\n\t\t\t\ttypes.push(`tuple(${result.join(',')})${suffix}`);\n\t\t\t} else if (!includeTuple) {\n\t\t\t\ttypes.push(`(${result.join(',')})${suffix}`);\n\t\t\t} else {\n\t\t\t\ttypes.push(`(${result.join()})`);\n\t\t\t}\n\t\t} else {\n\t\t\ttypes.push(param.type);\n\t\t}\n\t});\n\n\treturn types;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n * returns a string\n */\nexport const jsonInterfaceMethodToString = (json: AbiFragment): string => {\n\tif (isAbiErrorFragment(json) || isAbiEventFragment(json) || isAbiFunctionFragment(json)) {\n\t\tif (json.name?.includes('(')) {\n\t\t\treturn json.name;\n\t\t}\n\n\t\treturn `${json.name ?? ''}(${flattenTypes(false, json.inputs ?? []).join(',')})`;\n\t}\n\n\t// Constructor fragment\n\treturn `(${flattenTypes(false, json.inputs ?? []).join(',')})`;\n};\n","// src/regex.ts\nfunction execTyped(regex, string) {\n  const match = regex.exec(string);\n  return match?.groups;\n}\nvar bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\nvar integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nvar isTupleRegex = /^\\(.+?\\).*?$/;\n\nexport {\n  execTyped,\n  bytesRegex,\n  integerRegex,\n  isTupleRegex\n};\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\nexport {\n  __publicField\n};\n","import {\n  bytesRegex,\n  execTyped,\n  integerRegex,\n  isTupleRegex\n} from \"./chunk-WP7KDV47.mjs\";\nimport {\n  __publicField\n} from \"./chunk-NHABU752.mjs\";\n\n// package.json\nvar name = \"abitype\";\nvar version = \"0.7.1\";\n\n// src/errors.ts\nvar BaseError = class extends Error {\n  constructor(shortMessage, args = {}) {\n    const details = args.cause instanceof BaseError ? args.cause.details : args.cause?.message ? args.cause.message : args.details;\n    const docsPath = args.cause instanceof BaseError ? args.cause.docsPath || args.docsPath : args.docsPath;\n    const message = [\n      shortMessage || \"An error occurred.\",\n      \"\",\n      ...args.metaMessages ? [...args.metaMessages, \"\"] : [],\n      ...docsPath ? [`Docs: https://abitype.dev${docsPath}`] : [],\n      ...details ? [`Details: ${details}`] : [],\n      `Version: ${name}@${version}`\n    ].join(\"\\n\");\n    super(message);\n    __publicField(this, \"details\");\n    __publicField(this, \"docsPath\");\n    __publicField(this, \"metaMessages\");\n    __publicField(this, \"shortMessage\");\n    __publicField(this, \"name\", \"AbiTypeError\");\n    if (args.cause)\n      this.cause = args.cause;\n    this.details = details;\n    this.docsPath = docsPath;\n    this.metaMessages = args.metaMessages;\n    this.shortMessage = shortMessage;\n  }\n};\n\n// src/narrow.ts\nfunction narrow(value) {\n  return value;\n}\n\n// src/human-readable/runtime/signatures.ts\nvar errorSignatureRegex = /^error (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)$/;\nfunction isErrorSignature(signature) {\n  return errorSignatureRegex.test(signature);\n}\nfunction execErrorSignature(signature) {\n  return execTyped(\n    errorSignatureRegex,\n    signature\n  );\n}\nvar eventSignatureRegex = /^event (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)$/;\nfunction isEventSignature(signature) {\n  return eventSignatureRegex.test(signature);\n}\nfunction execEventSignature(signature) {\n  return execTyped(\n    eventSignatureRegex,\n    signature\n  );\n}\nvar functionSignatureRegex = /^function (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns \\((?<returns>.*?)\\))?$/;\nfunction isFunctionSignature(signature) {\n  return functionSignatureRegex.test(signature);\n}\nfunction execFunctionSignature(signature) {\n  return execTyped(functionSignatureRegex, signature);\n}\nvar structSignatureRegex = /^struct (?<name>[a-zA-Z0-9_]+) \\{(?<properties>.*?)\\}$/;\nfunction isStructSignature(signature) {\n  return structSignatureRegex.test(signature);\n}\nfunction execStructSignature(signature) {\n  return execTyped(\n    structSignatureRegex,\n    signature\n  );\n}\nvar constructorSignatureRegex = /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/;\nfunction isConstructorSignature(signature) {\n  return constructorSignatureRegex.test(signature);\n}\nfunction execConstructorSignature(signature) {\n  return execTyped(constructorSignatureRegex, signature);\n}\nvar fallbackSignatureRegex = /^fallback\\(\\)$/;\nfunction isFallbackSignature(signature) {\n  return fallbackSignatureRegex.test(signature);\n}\nvar receiveSignatureRegex = /^receive\\(\\) external payable$/;\nfunction isReceiveSignature(signature) {\n  return receiveSignatureRegex.test(signature);\n}\nvar modifiers = /* @__PURE__ */ new Set([\n  \"memory\",\n  \"indexed\",\n  \"storage\",\n  \"calldata\"\n]);\nvar eventModifiers = /* @__PURE__ */ new Set([\"indexed\"]);\nvar functionModifiers = /* @__PURE__ */ new Set([\n  \"calldata\",\n  \"memory\",\n  \"storage\"\n]);\n\n// src/human-readable/runtime/cache.ts\nfunction getParameterCacheKey(param, type) {\n  if (type)\n    return `${type}:${param}`;\n  return param;\n}\nvar parameterCache = /* @__PURE__ */ new Map([\n  // Unnamed\n  [\"address\", { type: \"address\" }],\n  [\"bool\", { type: \"bool\" }],\n  [\"bytes\", { type: \"bytes\" }],\n  [\"bytes32\", { type: \"bytes32\" }],\n  [\"int\", { type: \"int256\" }],\n  [\"int256\", { type: \"int256\" }],\n  [\"string\", { type: \"string\" }],\n  [\"uint\", { type: \"uint256\" }],\n  [\"uint8\", { type: \"uint8\" }],\n  [\"uint16\", { type: \"uint16\" }],\n  [\"uint24\", { type: \"uint24\" }],\n  [\"uint32\", { type: \"uint32\" }],\n  [\"uint64\", { type: \"uint64\" }],\n  [\"uint96\", { type: \"uint96\" }],\n  [\"uint112\", { type: \"uint112\" }],\n  [\"uint160\", { type: \"uint160\" }],\n  [\"uint192\", { type: \"uint192\" }],\n  [\"uint256\", { type: \"uint256\" }],\n  // Named\n  [\"address owner\", { type: \"address\", name: \"owner\" }],\n  [\"address to\", { type: \"address\", name: \"to\" }],\n  [\"bool approved\", { type: \"bool\", name: \"approved\" }],\n  [\"bytes _data\", { type: \"bytes\", name: \"_data\" }],\n  [\"bytes data\", { type: \"bytes\", name: \"data\" }],\n  [\"bytes signature\", { type: \"bytes\", name: \"signature\" }],\n  [\"bytes32 hash\", { type: \"bytes32\", name: \"hash\" }],\n  [\"bytes32 r\", { type: \"bytes32\", name: \"r\" }],\n  [\"bytes32 root\", { type: \"bytes32\", name: \"root\" }],\n  [\"bytes32 s\", { type: \"bytes32\", name: \"s\" }],\n  [\"string name\", { type: \"string\", name: \"name\" }],\n  [\"string symbol\", { type: \"string\", name: \"symbol\" }],\n  [\"string tokenURI\", { type: \"string\", name: \"tokenURI\" }],\n  [\"uint tokenId\", { type: \"uint256\", name: \"tokenId\" }],\n  [\"uint8 v\", { type: \"uint8\", name: \"v\" }],\n  [\"uint256 balance\", { type: \"uint256\", name: \"balance\" }],\n  [\"uint256 tokenId\", { type: \"uint256\", name: \"tokenId\" }],\n  [\"uint256 value\", { type: \"uint256\", name: \"value\" }],\n  // Indexed\n  [\n    \"event:address indexed from\",\n    { type: \"address\", name: \"from\", indexed: true }\n  ],\n  [\"event:address indexed to\", { type: \"address\", name: \"to\", indexed: true }],\n  [\n    \"event:uint indexed tokenId\",\n    { type: \"uint256\", name: \"tokenId\", indexed: true }\n  ],\n  [\n    \"event:uint256 indexed tokenId\",\n    { type: \"uint256\", name: \"tokenId\", indexed: true }\n  ]\n]);\n\n// src/human-readable/runtime/utils.ts\nfunction parseSignature(signature, structs = {}) {\n  if (isFunctionSignature(signature)) {\n    const match = execFunctionSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid function signature.\", {\n        details: signature\n      });\n    const inputParams = splitParameters(match.parameters);\n    const inputs = [];\n    const inputLength = inputParams.length;\n    for (let i = 0; i < inputLength; i++) {\n      inputs.push(\n        parseAbiParameter(inputParams[i], {\n          modifiers: functionModifiers,\n          structs,\n          type: \"function\"\n        })\n      );\n    }\n    const outputs = [];\n    if (match.returns) {\n      const outputParams = splitParameters(match.returns);\n      const outputLength = outputParams.length;\n      for (let i = 0; i < outputLength; i++) {\n        outputs.push(\n          parseAbiParameter(outputParams[i], {\n            modifiers: functionModifiers,\n            structs,\n            type: \"function\"\n          })\n        );\n      }\n    }\n    return {\n      name: match.name,\n      type: \"function\",\n      stateMutability: match.stateMutability ?? \"nonpayable\",\n      inputs,\n      outputs\n    };\n  }\n  if (isEventSignature(signature)) {\n    const match = execEventSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid event signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], {\n          modifiers: eventModifiers,\n          structs,\n          type: \"event\"\n        })\n      );\n    }\n    return { name: match.name, type: \"event\", inputs: abiParameters };\n  }\n  if (isErrorSignature(signature)) {\n    const match = execErrorSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid error signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], { structs, type: \"error\" })\n      );\n    }\n    return { name: match.name, type: \"error\", inputs: abiParameters };\n  }\n  if (isConstructorSignature(signature)) {\n    const match = execConstructorSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid constructor signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], { structs, type: \"constructor\" })\n      );\n    }\n    return {\n      type: \"constructor\",\n      stateMutability: match.stateMutability ?? \"nonpayable\",\n      inputs: abiParameters\n    };\n  }\n  if (isFallbackSignature(signature))\n    return { type: \"fallback\" };\n  if (isReceiveSignature(signature))\n    return {\n      type: \"receive\",\n      stateMutability: \"payable\"\n    };\n  throw new BaseError(\"Unknown signature.\", {\n    details: signature\n  });\n}\nvar abiParameterWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z0-9_]+))?$/;\nvar abiParameterWithTupleRegex = /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z0-9_]+))?$/;\nvar dynamicIntegerRegex = /^u?int$/;\nfunction parseAbiParameter(param, options) {\n  const parameterCacheKey = getParameterCacheKey(param, options?.type);\n  if (parameterCache.has(parameterCacheKey))\n    return parameterCache.get(parameterCacheKey);\n  const isTuple = isTupleRegex.test(param);\n  const match = execTyped(\n    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,\n    param\n  );\n  if (!match)\n    throw new BaseError(\"Invalid ABI parameter.\", {\n      details: param\n    });\n  if (match.name && isSolidityKeyword(match.name))\n    throw new BaseError(\"Invalid ABI parameter.\", {\n      details: param,\n      metaMessages: [\n        `\"${match.name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`\n      ]\n    });\n  const name2 = match.name ? { name: match.name } : {};\n  const indexed = match.modifier === \"indexed\" ? { indexed: true } : {};\n  const structs = options?.structs ?? {};\n  let type;\n  let components = {};\n  if (isTuple) {\n    type = \"tuple\";\n    const params = splitParameters(match.type);\n    const components_ = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      components_.push(parseAbiParameter(params[i], { structs }));\n    }\n    components = { components: components_ };\n  } else if (match.type in structs) {\n    type = \"tuple\";\n    components = { components: structs[match.type] };\n  } else if (dynamicIntegerRegex.test(match.type)) {\n    type = `${match.type}256`;\n  } else {\n    type = match.type;\n    if (!(options?.type === \"struct\") && !isSolidityType(type))\n      throw new BaseError(\"Unknown type.\", {\n        metaMessages: [`Type \"${type}\" is not a valid ABI type.`]\n      });\n  }\n  if (match.modifier) {\n    if (!options?.modifiers?.has?.(match.modifier))\n      throw new BaseError(\"Invalid ABI parameter.\", {\n        details: param,\n        metaMessages: [\n          `Modifier \"${match.modifier}\" not allowed${options?.type ? ` in \"${options.type}\" type` : \"\"}.`\n        ]\n      });\n    if (functionModifiers.has(match.modifier) && !isValidDataLocation(type, !!match.array))\n      throw new BaseError(\"Invalid ABI parameter.\", {\n        details: param,\n        metaMessages: [\n          `Modifier \"${match.modifier}\" not allowed${options?.type ? ` in \"${options.type}\" type` : \"\"}.`,\n          `Data location can only be specified for array, struct, or mapping types, but \"${match.modifier}\" was given.`\n        ]\n      });\n  }\n  const abiParameter = {\n    type: `${type}${match.array ?? \"\"}`,\n    ...name2,\n    ...indexed,\n    ...components\n  };\n  parameterCache.set(parameterCacheKey, abiParameter);\n  return abiParameter;\n}\nfunction splitParameters(params, result = [], current = \"\", depth = 0) {\n  if (params === \"\") {\n    if (current === \"\")\n      return result;\n    if (depth !== 0)\n      throw new BaseError(\"Unbalanced parentheses.\", {\n        metaMessages: [\n          `\"${current.trim()}\" has too many ${depth > 0 ? \"opening\" : \"closing\"} parentheses.`\n        ],\n        details: `Depth \"${depth}\"`\n      });\n    return [...result, current.trim()];\n  }\n  const length = params.length;\n  for (let i = 0; i < length; i++) {\n    const char = params[i];\n    const tail = params.slice(i + 1);\n    switch (char) {\n      case \",\":\n        return depth === 0 ? splitParameters(tail, [...result, current.trim()]) : splitParameters(tail, result, `${current}${char}`, depth);\n      case \"(\":\n        return splitParameters(tail, result, `${current}${char}`, depth + 1);\n      case \")\":\n        return splitParameters(tail, result, `${current}${char}`, depth - 1);\n      default:\n        return splitParameters(tail, result, `${current}${char}`, depth);\n    }\n  }\n  return [];\n}\nfunction isSolidityType(type) {\n  return type === \"address\" || type === \"bool\" || type === \"function\" || type === \"string\" || bytesRegex.test(type) || integerRegex.test(type);\n}\nvar protectedKeywordsRegex = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;\nfunction isSolidityKeyword(name2) {\n  return name2 === \"address\" || name2 === \"bool\" || name2 === \"function\" || name2 === \"string\" || name2 === \"tuple\" || bytesRegex.test(name2) || integerRegex.test(name2) || protectedKeywordsRegex.test(name2);\n}\nfunction isValidDataLocation(type, isArray) {\n  return isArray || type === \"bytes\" || type === \"string\" || type === \"tuple\";\n}\n\n// src/human-readable/runtime/structs.ts\nfunction parseStructs(signatures) {\n  const shallowStructs = {};\n  const signaturesLength = signatures.length;\n  for (let i = 0; i < signaturesLength; i++) {\n    const signature = signatures[i];\n    if (!isStructSignature(signature))\n      continue;\n    const match = execStructSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid struct signature.\", {\n        details: signature\n      });\n    const properties = match.properties.split(\";\");\n    const components = [];\n    const propertiesLength = properties.length;\n    for (let k = 0; k < propertiesLength; k++) {\n      const property = properties[k];\n      const trimmed = property.trim();\n      if (!trimmed)\n        continue;\n      const abiParameter = parseAbiParameter(trimmed, {\n        type: \"struct\"\n      });\n      components.push(abiParameter);\n    }\n    if (!components.length)\n      throw new BaseError(\"Invalid struct signature.\", {\n        details: signature,\n        metaMessages: [\"No properties exist.\"]\n      });\n    shallowStructs[match.name] = components;\n  }\n  const resolvedStructs = {};\n  const entries = Object.entries(shallowStructs);\n  const entriesLength = entries.length;\n  for (let i = 0; i < entriesLength; i++) {\n    const [name2, parameters] = entries[i];\n    resolvedStructs[name2] = resolveStructs(parameters, shallowStructs);\n  }\n  return resolvedStructs;\n}\nvar typeWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\\[\\d*?\\])+?)?$/;\nfunction resolveStructs(abiParameters, structs, ancestors = /* @__PURE__ */ new Set()) {\n  const components = [];\n  const length = abiParameters.length;\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i];\n    const isTuple = isTupleRegex.test(abiParameter.type);\n    if (isTuple)\n      components.push(abiParameter);\n    else {\n      const match = execTyped(\n        typeWithoutTupleRegex,\n        abiParameter.type\n      );\n      if (!match?.type)\n        throw new BaseError(\"Invalid ABI parameter.\", {\n          details: JSON.stringify(abiParameter, null, 2),\n          metaMessages: [\"ABI parameter type is invalid.\"]\n        });\n      const { array, type } = match;\n      if (type in structs) {\n        if (ancestors.has(type))\n          throw new BaseError(\"Circular reference detected.\", {\n            metaMessages: [`Struct \"${type}\" is a circular reference.`]\n          });\n        components.push({\n          ...abiParameter,\n          type: `tuple${array ?? \"\"}`,\n          components: resolveStructs(\n            structs[type] ?? [],\n            structs,\n            /* @__PURE__ */ new Set([...ancestors, type])\n          )\n        });\n      } else {\n        if (isSolidityType(type))\n          components.push(abiParameter);\n        else\n          throw new BaseError(\"Unknown type.\", {\n            metaMessages: [\n              `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`\n            ]\n          });\n      }\n    }\n  }\n  return components;\n}\n\n// src/human-readable/parseAbi.ts\nfunction parseAbi(signatures) {\n  const structs = parseStructs(signatures);\n  const abi = [];\n  const length = signatures.length;\n  for (let i = 0; i < length; i++) {\n    const signature = signatures[i];\n    if (isStructSignature(signature))\n      continue;\n    abi.push(parseSignature(signature, structs));\n  }\n  return abi;\n}\n\n// src/human-readable/parseAbiItem.ts\nfunction parseAbiItem(signature) {\n  let abiItem;\n  if (typeof signature === \"string\")\n    abiItem = parseSignature(signature);\n  else {\n    const structs = parseStructs(signature);\n    const length = signature.length;\n    for (let i = 0; i < length; i++) {\n      const signature_ = signature[i];\n      if (isStructSignature(signature_))\n        continue;\n      abiItem = parseSignature(signature_, structs);\n      break;\n    }\n  }\n  if (!abiItem)\n    throw new BaseError(\"Failed to parse ABI item.\", {\n      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiitem-1\"\n    });\n  return abiItem;\n}\n\n// src/human-readable/parseAbiParameter.ts\nfunction parseAbiParameter2(param) {\n  let abiParameter;\n  if (typeof param === \"string\")\n    abiParameter = parseAbiParameter(param, {\n      modifiers\n    });\n  else {\n    const structs = parseStructs(param);\n    const length = param.length;\n    for (let i = 0; i < length; i++) {\n      const signature = param[i];\n      if (isStructSignature(signature))\n        continue;\n      abiParameter = parseAbiParameter(signature, { modifiers, structs });\n      break;\n    }\n  }\n  if (!abiParameter)\n    throw new BaseError(\"Failed to parse ABI parameter.\", {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiparameter-1\"\n    });\n  return abiParameter;\n}\n\n// src/human-readable/parseAbiParameters.ts\nfunction parseAbiParameters(params) {\n  const abiParameters = [];\n  if (typeof params === \"string\") {\n    const parameters = splitParameters(params);\n    const length = parameters.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(parseAbiParameter(parameters[i], { modifiers }));\n    }\n  } else {\n    const structs = parseStructs(params);\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      const signature = params[i];\n      if (isStructSignature(signature))\n        continue;\n      const parameters = splitParameters(signature);\n      const length2 = parameters.length;\n      for (let k = 0; k < length2; k++) {\n        abiParameters.push(\n          parseAbiParameter(parameters[k], { modifiers, structs })\n        );\n      }\n    }\n  }\n  if (abiParameters.length === 0)\n    throw new BaseError(\"Failed to parse ABI parameters.\", {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiparameters-1\"\n    });\n  return abiParameters;\n}\nexport {\n  BaseError,\n  narrow,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter2 as parseAbiParameter,\n  parseAbiParameters\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter as ExternalAbiParameter, parseAbiParameter } from 'abitype';\nimport { AbiError } from 'web3-errors';\nimport { AbiInput, AbiParameter, AbiStruct } from 'web3-types';\nimport { isNullish } from 'web3-utils';\nimport {\n\tisSimplifiedStructFormat,\n\tmapStructNameAndType,\n\tmapStructToCoderFormat,\n} from '../utils.js';\n\nexport const WORD_SIZE = 32;\n\nexport function alloc(size = 0): Uint8Array {\n\tif (globalThis.Buffer?.alloc !== undefined) {\n\t\tconst buf = globalThis.Buffer.alloc(size);\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\t}\n\n\treturn new Uint8Array(size);\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0): Uint8Array {\n\tif (globalThis.Buffer?.allocUnsafe !== undefined) {\n\t\tconst buf = globalThis.Buffer.allocUnsafe(size);\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\t}\n\n\treturn new Uint8Array(size);\n}\n\nexport function convertExternalAbiParameter(abiParam: ExternalAbiParameter): AbiParameter {\n\treturn {\n\t\t...abiParam,\n\t\tname: abiParam.name ?? '',\n\t\tcomponents: (abiParam as { components: readonly AbiParameter[] }).components?.map(c =>\n\t\t\tconvertExternalAbiParameter(c),\n\t\t),\n\t};\n}\n\nexport function isAbiParameter(param: unknown): param is AbiParameter {\n\treturn (\n\t\t!isNullish(param) &&\n\t\ttypeof param === 'object' &&\n\t\t!isNullish((param as { type: unknown }).type) &&\n\t\ttypeof (param as { type: unknown }).type === 'string'\n\t);\n}\n\nexport function toAbiParams(abi: ReadonlyArray<AbiInput>): ReadonlyArray<AbiParameter> {\n\treturn abi.map(input => {\n\t\tif (isAbiParameter(input)) {\n\t\t\treturn input;\n\t\t}\n\t\tif (typeof input === 'string') {\n\t\t\treturn convertExternalAbiParameter(parseAbiParameter(input.replace(/tuple/, '')));\n\t\t}\n\n\t\tif (isSimplifiedStructFormat(input)) {\n\t\t\tconst structName = Object.keys(input)[0];\n\t\t\tconst structInfo = mapStructNameAndType(structName);\n\t\t\tstructInfo.name = structInfo.name ?? '';\n\t\t\treturn {\n\t\t\t\t...structInfo,\n\t\t\t\tcomponents: mapStructToCoderFormat(\n\t\t\t\t\tinput[structName as keyof typeof input] as unknown as AbiStruct,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tthrow new AbiError('Invalid abi');\n\t});\n}\n\nexport function extractArrayType(param: AbiParameter): { size: number; param: AbiParameter } {\n\tconst arrayParenthesisStart = param.type.lastIndexOf('[');\n\tconst arrayParamType = param.type.substring(0, arrayParenthesisStart);\n\tconst sizeString = param.type.substring(arrayParenthesisStart);\n\tlet size = -1;\n\tif (sizeString !== '[]') {\n\t\tsize = Number(sizeString.slice(1, -1));\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tif (isNaN(size)) {\n\t\t\tthrow new AbiError('Invalid fixed array size', { size: sizeString });\n\t\t}\n\t}\n\treturn {\n\t\tparam: { type: arrayParamType, name: '', components: param.components },\n\t\tsize,\n\t};\n}\n\n/**\n * Param is dynamic if it's dynamic base type or if some of his children (components, array items)\n * is of dynamic type\n * @param param\n */\nexport function isDynamic(param: AbiParameter): boolean {\n\tif (param.type === 'string' || param.type === 'bytes' || param.type.endsWith('[]')) return true;\n\tif (param.type === 'tuple') {\n\t\treturn param.components?.some(isDynamic) ?? false;\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn isDynamic(extractArrayType(param).param);\n\t}\n\treturn false;\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { toChecksumAddress } from 'web3-utils';\nimport { isAddress, utils } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { alloc, WORD_SIZE } from '../utils.js';\n\nconst ADDRESS_BYTES_COUNT = 20;\nconst ADDRESS_OFFSET = WORD_SIZE - ADDRESS_BYTES_COUNT;\n\nexport function encodeAddress(param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('address type expects string as input type', {\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\ttype: param.type,\n\t\t});\n\t}\n\tlet address = input.toLowerCase();\n\tif (!address.startsWith('0x')) {\n\t\taddress = `0x${address}`;\n\t}\n\tif (!isAddress(address)) {\n\t\tthrow new AbiError('provided input is not valid address', {\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\ttype: param.type,\n\t\t});\n\t}\n\t// for better performance, we could convert hex to destination bytes directly (encoded var)\n\tconst addressBytes = utils.hexToUint8Array(address);\n\t// expand address to WORD_SIZE\n\tconst encoded = alloc(WORD_SIZE);\n\tencoded.set(addressBytes, ADDRESS_OFFSET);\n\treturn {\n\t\tdynamic: false,\n\t\tencoded,\n\t};\n}\n\nexport function decodeAddress(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst addressBytes = bytes.subarray(ADDRESS_OFFSET, WORD_SIZE);\n\tif (addressBytes.length !== ADDRESS_BYTES_COUNT) {\n\t\tthrow new AbiError('Invalid decoding input, not enough bytes to decode address', { bytes });\n\t}\n\tconst result = utils.uint8ArrayToHexString(addressBytes);\n\n\t// should we check is decoded value is valid address?\n\t// if(!isAddress(result)) {\n\t//     throw new AbiError(\"encoded data is not valid address\", {\n\t//         address: result,\n\t//     });\n\t// }\n\treturn {\n\t\tresult: toChecksumAddress(result),\n\t\tencoded: bytes.subarray(WORD_SIZE),\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* \n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/\nexport const numberLimits = new Map<string, { min: bigint; max: bigint }>();\n\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n\tnumberLimits.set(`uint${i}`, {\n\t\tmin: BigInt(0),\n\t\tmax: base - BigInt(1),\n\t});\n\tnumberLimits.set(`int${i}`, {\n\t\tmin: -base / BigInt(2),\n\t\tmax: base / BigInt(2) - BigInt(1),\n\t});\n\tbase *= BigInt(256);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get('int256')!);\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get('uint256')!);\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiError } from 'web3-errors';\nimport type { AbiParameter } from 'web3-types';\nimport { padLeft, toBigInt } from 'web3-utils';\nimport { utils } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { numberLimits } from './numbersLimits.js';\n\n// eslint-disable-next-line no-bitwise\nconst mask = BigInt(1) << BigInt(256);\n\nfunction bigIntToUint8Array(value: bigint, byteLength = WORD_SIZE): Uint8Array {\n\tlet hexValue;\n\tif (value < 0) {\n\t\thexValue = (mask + value).toString(16);\n\t} else {\n\t\thexValue = value.toString(16);\n\t}\n\thexValue = padLeft(hexValue, byteLength * 2);\n\treturn utils.hexToUint8Array(hexValue);\n}\n\nfunction uint8ArrayToBigInt(value: Uint8Array, max: bigint): bigint {\n\tconst hexValue = utils.uint8ArrayToHexString(value);\n\tconst result = BigInt(hexValue);\n\tif (result <= max) return result;\n\treturn result - mask;\n}\n\nexport function encodeNumber(param: AbiParameter, input: unknown): EncoderResult {\n\tlet value;\n\ttry {\n\t\tvalue = toBigInt(input);\n\t} catch (e) {\n\t\tthrow new AbiError('provided input is not number value', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t});\n\t}\n\tconst limit = numberLimits.get(param.type);\n\tif (!limit) {\n\t\tthrow new AbiError('provided abi contains invalid number datatype', { type: param.type });\n\t}\n\tif (value < limit.min) {\n\t\tthrow new AbiError('provided input is less then minimum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\tminimum: limit.min.toString(),\n\t\t});\n\t}\n\tif (value > limit.max) {\n\t\tthrow new AbiError('provided input is greater then maximum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\tmaximum: limit.max.toString(),\n\t\t});\n\t}\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: bigIntToUint8Array(value),\n\t};\n}\n\nexport function decodeNumber(param: AbiParameter, bytes: Uint8Array): DecoderResult<bigint> {\n\tif (bytes.length < WORD_SIZE) {\n\t\tthrow new AbiError('Not enough bytes left to decode', { param, bytesLeft: bytes.length });\n\t}\n\tconst boolBytes = bytes.subarray(0, WORD_SIZE);\n\tconst limit = numberLimits.get(param.type);\n\tif (!limit) {\n\t\tthrow new AbiError('provided abi contains invalid number datatype', { type: param.type });\n\t}\n\tconst numberResult = uint8ArrayToBigInt(boolBytes, limit.max);\n\n\tif (numberResult < limit.min) {\n\t\tthrow new AbiError('decoded value is less then minimum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: numberResult,\n\t\t\tname: param.name,\n\t\t\tminimum: limit.min.toString(),\n\t\t});\n\t}\n\tif (numberResult > limit.max) {\n\t\tthrow new AbiError('decoded value is greater then maximum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: numberResult,\n\t\t\tname: param.name,\n\t\t\tmaximum: limit.max.toString(),\n\t\t});\n\t}\n\treturn {\n\t\tresult: numberResult,\n\t\tencoded: bytes.subarray(WORD_SIZE),\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError, InvalidBooleanError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { toBool } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\n\nexport function encodeBoolean(param: AbiParameter, input: unknown): EncoderResult {\n\tlet value;\n\ttry {\n\t\tvalue = toBool(input);\n\t} catch (e) {\n\t\tif (e instanceof InvalidBooleanError) {\n\t\t\tthrow new AbiError('provided input is not valid boolean value', {\n\t\t\t\ttype: param.type,\n\t\t\t\tvalue: input,\n\t\t\t\tname: param.name,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn encodeNumber({ type: 'uint8', name: '' }, Number(value));\n}\n\nexport function decodeBool(_param: AbiParameter, bytes: Uint8Array): DecoderResult<boolean> {\n\tconst numberResult = decodeNumber({ type: 'uint8', name: '' }, bytes);\n\tif (numberResult.result > 1 || numberResult.result < 0) {\n\t\tthrow new AbiError('Invalid boolean value encoded', {\n\t\t\tboolBytes: bytes.subarray(0, WORD_SIZE),\n\t\t\tnumberResult,\n\t\t});\n\t}\n\treturn {\n\t\tresult: numberResult.result === BigInt(1),\n\t\tencoded: numberResult.encoded,\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter, Bytes } from 'web3-types';\nimport { bytesToHex, bytesToUint8Array } from 'web3-utils';\nimport { isBytes, ValidInputTypes } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { alloc, WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\n\nconst MAX_STATIC_BYTES_COUNT = 32;\n\nexport function encodeBytes(param: AbiParameter, input: unknown): EncoderResult {\n\t// hack for odd length hex strings\n\tif (typeof input === 'string' && input.length % 2 !== 0) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tinput += '0';\n\t}\n\tif (!isBytes(input as ValidInputTypes)) {\n\t\tthrow new AbiError('provided input is not valid bytes value', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t});\n\t}\n\tconst bytes = bytesToUint8Array(input as Bytes);\n\tconst [, size] = param.type.split('bytes');\n\t// fixed size\n\tif (size) {\n\t\tif (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {\n\t\t\tthrow new AbiError(\n\t\t\t\t'invalid bytes type. Static byte type can have between 1 and 32 bytes',\n\t\t\t\t{\n\t\t\t\t\ttype: param.type,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\tif (Number(size) < bytes.length) {\n\t\t\tthrow new AbiError('provided input size is different than type size', {\n\t\t\t\ttype: param.type,\n\t\t\t\tvalue: input,\n\t\t\t\tname: param.name,\n\t\t\t});\n\t\t}\n\t\tconst encoded = alloc(WORD_SIZE);\n\t\tencoded.set(bytes);\n\t\treturn {\n\t\t\tdynamic: false,\n\t\t\tencoded,\n\t\t};\n\t}\n\n\tconst partsLength = Math.ceil(bytes.length / WORD_SIZE);\n\t// one word for length of data + WORD for each part of actual data\n\tconst encoded = alloc(WORD_SIZE + partsLength * WORD_SIZE);\n\n\tencoded.set(encodeNumber({ type: 'uint32', name: '' }, bytes.length).encoded);\n\tencoded.set(bytes, WORD_SIZE);\n\treturn {\n\t\tdynamic: true,\n\t\tencoded,\n\t};\n}\n\nexport function decodeBytes(param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst [, sizeString] = param.type.split('bytes');\n\tlet size = Number(sizeString);\n\tlet remainingBytes = bytes;\n\tlet partsCount = 1;\n\tlet consumed = 0;\n\tif (!size) {\n\t\t// dynamic bytes\n\t\tconst result = decodeNumber({ type: 'uint32', name: '' }, remainingBytes);\n\t\tsize = Number(result.result);\n\t\tconsumed += result.consumed;\n\t\tremainingBytes = result.encoded;\n\t\tpartsCount = Math.ceil(size / WORD_SIZE);\n\t}\n\tif (size > bytes.length) {\n\t\tthrow new AbiError('there is not enough data to decode', {\n\t\t\ttype: param.type,\n\t\t\tencoded: bytes,\n\t\t\tsize,\n\t\t});\n\t}\n\n\treturn {\n\t\tresult: bytesToHex(remainingBytes.subarray(0, size)),\n\t\tencoded: remainingBytes.subarray(partsCount * WORD_SIZE),\n\t\tconsumed: consumed + partsCount * WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { hexToUtf8, utf8ToBytes } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\n\nexport function encodeString(_param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('invalid input, should be string', { input });\n\t}\n\tconst bytes = utf8ToBytes(input);\n\treturn encodeBytes({ type: 'bytes', name: '' }, bytes);\n}\n\nexport function decodeString(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst r = decodeBytes({ type: 'bytes', name: '' }, bytes);\n\treturn {\n\t\tresult: hexToUtf8(r.result),\n\t\tencoded: r.encoded,\n\t\tconsumed: r.consumed,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { encodeNumber } from './number.js';\n\nexport function encodeDynamicParams(encodedParams: ReadonlyArray<EncoderResult>): Uint8Array {\n\tlet staticSize = 0;\n\tlet dynamicSize = 0;\n\tconst staticParams: EncoderResult[] = [];\n\tconst dynamicParams: EncoderResult[] = [];\n\t// figure out static size\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticSize += WORD_SIZE;\n\t\t} else {\n\t\t\tstaticSize += encodedParam.encoded.length;\n\t\t}\n\t}\n\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticParams.push(\n\t\t\t\tencodeNumber({ type: 'uint256', name: '' }, staticSize + dynamicSize),\n\t\t\t);\n\t\t\tdynamicParams.push(encodedParam);\n\t\t\tdynamicSize += encodedParam.encoded.length;\n\t\t} else {\n\t\t\tstaticParams.push(encodedParam);\n\t\t}\n\t}\n\treturn uint8ArrayConcat(\n\t\t...staticParams.map(p => p.encoded),\n\t\t...dynamicParams.map(p => p.encoded),\n\t);\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeNumber, encodeParamFromAbiParameter } from './index.js';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { extractArrayType, isDynamic, WORD_SIZE } from '../utils.js';\nimport { decodeNumber } from './number.js';\nimport { encodeDynamicParams } from './utils.js';\n\nexport function encodeArray(param: AbiParameter, values: unknown): EncoderResult {\n\tif (!Array.isArray(values)) {\n\t\tthrow new AbiError('Expected value to be array', { abi: param, values });\n\t}\n\tconst { size, param: arrayItemParam } = extractArrayType(param);\n\tconst encodedParams = values.map(v => encodeParamFromAbiParameter(arrayItemParam, v));\n\tconst dynamic = size === -1;\n\tconst dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n\tif (!dynamic && values.length !== size) {\n\t\tthrow new AbiError(\"Given arguments count doesn't match array length\", {\n\t\t\tarrayLength: size,\n\t\t\targumentsLength: values.length,\n\t\t});\n\t}\n\tif (dynamic || dynamicItems) {\n\t\tconst encodingResult = encodeDynamicParams(encodedParams);\n\t\tif (dynamic) {\n\t\t\tconst encodedLength = encodeNumber(\n\t\t\t\t{ type: 'uint256', name: '' },\n\t\t\t\tencodedParams.length,\n\t\t\t).encoded;\n\t\t\treturn {\n\t\t\t\tdynamic: true,\n\t\t\t\tencoded:\n\t\t\t\t\tencodedParams.length > 0\n\t\t\t\t\t\t? uint8ArrayConcat(encodedLength, encodingResult)\n\t\t\t\t\t\t: encodedLength,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodingResult,\n\t\t};\n\t}\n\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encodedParams.map(p => p.encoded)),\n\t};\n}\n\nexport function decodeArray(param: AbiParameter, bytes: Uint8Array): DecoderResult<unknown[]> {\n\t// eslint-disable-next-line prefer-const\n\tlet { size, param: arrayItemParam } = extractArrayType(param);\n\tconst dynamic = size === -1;\n\n\tlet consumed = 0;\n\tconst result: unknown[] = [];\n\tlet remaining = bytes;\n\t// dynamic array, we need to decode length\n\tif (dynamic) {\n\t\tconst lengthResult = decodeNumber({ type: 'uint32', name: '' }, bytes);\n\t\tsize = Number(lengthResult.result);\n\t\tconsumed = lengthResult.consumed;\n\t\tremaining = lengthResult.encoded;\n\t}\n\tconst hasDynamicChild = isDynamic(arrayItemParam);\n\tif (hasDynamicChild) {\n\t\t// known length but dynamic child, each child is actually head element with encoded offset\n\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tremaining.subarray(i * WORD_SIZE),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\t\tarrayItemParam,\n\t\t\t\tremaining.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += decodedChildResult.consumed;\n\t\t\tresult.push(decodedChildResult.result);\n\t\t}\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: remaining.subarray(consumed),\n\t\t\tconsumed,\n\t\t};\n\t}\n\n\tfor (let i = 0; i < size; i += 1) {\n\t\t// decode static params\n\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\tarrayItemParam,\n\t\t\tbytes.subarray(consumed),\n\t\t);\n\t\tconsumed += decodedChildResult.consumed;\n\t\tresult.push(decodedChildResult.result);\n\t}\n\treturn {\n\t\tresult,\n\t\tencoded: bytes.subarray(consumed),\n\t\tconsumed,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter } from 'web3-types';\nimport { AbiError } from 'web3-errors';\nimport { EncoderResult, DecoderResult } from '../types.js';\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeTuple, encodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeArray, encodeArray } from './array.js';\n\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeTuple, decodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeArray, decodeArray } from './array.js';\n\nexport function encodeParamFromAbiParameter(param: AbiParameter, value: unknown): EncoderResult {\n\tif (param.type === 'string') {\n\t\treturn encodeString(param, value);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn encodeBoolean(param, value);\n\t}\n\tif (param.type === 'address') {\n\t\treturn encodeAddress(param, value);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn encodeTuple(param, value);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn encodeArray(param, value);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn encodeBytes(param, value);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn encodeNumber(param, value);\n\t}\n\tthrow new AbiError('Unsupported', {\n\t\tparam,\n\t\tvalue,\n\t});\n}\n\nexport function decodeParamFromAbiParameter(param: AbiParameter, bytes: Uint8Array): DecoderResult {\n\tif (param.type === 'string') {\n\t\treturn decodeString(param, bytes);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn decodeBool(param, bytes);\n\t}\n\tif (param.type === 'address') {\n\t\treturn decodeAddress(param, bytes);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn decodeTuple(param, bytes);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn decodeArray(param, bytes);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn decodeBytes(param, bytes);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn decodeNumber(param, bytes);\n\t}\n\tthrow new AbiError('Unsupported', {\n\t\tparam,\n\t\tbytes,\n\t});\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeParamFromAbiParameter } from './index.js';\nimport { encodeDynamicParams } from './utils.js';\nimport { isDynamic } from '../utils.js';\nimport { decodeNumber } from './number.js';\n\nexport function encodeTuple(param: AbiParameter, input: unknown): EncoderResult {\n\tlet dynamic = false;\n\tif (!Array.isArray(input) && typeof input !== 'object') {\n\t\tthrow new AbiError('param must be either Array or Object', {\n\t\t\tparam,\n\t\t\tinput,\n\t\t});\n\t}\n\tconst narrowedInput = input as Array<unknown> | Record<string, unknown>;\n\tconst encoded: Array<EncoderResult> = [];\n\tfor (let i = 0; i < (param.components?.length ?? 0); i += 1) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tconst paramComponent = param.components![i];\n\t\tlet result: EncoderResult;\n\t\tif (Array.isArray(narrowedInput)) {\n\t\t\tif (i >= narrowedInput.length) {\n\t\t\t\tthrow new AbiError('input param length missmatch', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, narrowedInput[i]);\n\t\t} else {\n\t\t\tconst paramInput = narrowedInput[paramComponent.name ?? ''];\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tif (paramInput === undefined || paramInput === null) {\n\t\t\t\tthrow new AbiError('missing input defined in abi', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t\tparamName: paramComponent.name,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, paramInput);\n\t\t}\n\t\tif (result.dynamic) {\n\t\t\tdynamic = true;\n\t\t}\n\t\tencoded.push(result);\n\t}\n\n\tif (dynamic) {\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodeDynamicParams(encoded),\n\t\t};\n\t}\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encoded.map(e => e.encoded)),\n\t};\n}\n\nexport function decodeTuple(\n\tparam: AbiParameter,\n\tbytes: Uint8Array,\n): DecoderResult<{ [key: string]: unknown; __length__: number }> {\n\tconst result: { [key: string]: unknown; __length__: number } = {\n\t\t__length__: 0,\n\t};\n\n\t// tracks how much static params consumed bytes\n\tlet consumed = 0;\n\n\tif (!param.components) {\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: bytes,\n\t\t\tconsumed,\n\t\t};\n\t}\n\t// track how much dynamic params consumed bytes\n\tlet dynamicConsumed = 0;\n\tfor (const [index, childParam] of param.components.entries()) {\n\t\tlet decodedResult: DecoderResult;\n\t\tif (isDynamic(childParam)) {\n\t\t\t// if dynamic, we will have offset encoded\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tbytes.subarray(consumed),\n\t\t\t);\n\t\t\t// offset counts from start of original byte sequence\n\t\t\tdecodedResult = decodeParamFromAbiParameter(\n\t\t\t\tchildParam,\n\t\t\t\tbytes.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tdynamicConsumed += decodedResult.consumed;\n\t\t} else {\n\t\t\t// static param, just decode\n\t\t\tdecodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(consumed));\n\t\t\tconsumed += decodedResult.consumed;\n\t\t}\n\t\tresult.__length__ += 1;\n\t\tresult[index] = decodedResult.result;\n\t\tif (childParam.name && childParam.name !== '') {\n\t\t\tresult[childParam.name] = decodedResult.result;\n\t\t}\n\t}\n\treturn {\n\t\tencoded: bytes.subarray(consumed + dynamicConsumed),\n\t\tresult,\n\t\tconsumed: consumed + dynamicConsumed,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiInput, AbiParameter } from 'web3-types';\nimport { toHex } from 'web3-utils';\nimport { utils } from 'web3-validator';\nimport { encodeTuple } from './base/index.js';\nimport { toAbiParams } from './utils.js';\n\n/**\n * @param params - The params to infer the ABI from\n * @returns The inferred ABI\n * @example\n * ```\n * inferParamsAbi([1, -1, 'hello', '0x1234', ])\n * ```\n * > [{ type: 'int256' }, { type: 'uint256' }, { type: 'string' }, { type: 'bytes' }]\n * ```\n */\nfunction inferParamsAbi(params: unknown[]): ReadonlyArray<AbiParameter> {\n\tconst abi: AbiParameter[] = [];\n\tparams.forEach(param => {\n\t\tif (Array.isArray(param)) {\n\t\t\tconst inferredParams = inferParamsAbi(param);\n\t\t\tabi.push({\n\t\t\t\ttype: 'tuple',\n\t\t\t\tcomponents: inferredParams,\n\t\t\t\tname: '',\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\t} as AbiParameter);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\tabi.push({ type: toHex(param as any, true) } as AbiParameter);\n\t\t}\n\t});\n\treturn abi;\n}\n\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.\n * @param params - The actual parameters to encode.\n * @returns - The ABI encoded parameters\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"uint256\", \"string\"],\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nexport function encodeParameters(abi: ReadonlyArray<AbiInput>, params: unknown[]): string {\n\tif (abi?.length !== params.length) {\n\t\tthrow new AbiError('Invalid number of values received for given ABI', {\n\t\t\texpected: abi?.length,\n\t\t\treceived: params.length,\n\t\t});\n\t}\n\n\tconst abiParams = toAbiParams(abi);\n\treturn utils.uint8ArrayToHexString(\n\t\tencodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded,\n\t);\n}\n\n/**\n * Infer a smart contract method parameter type and then encode this parameter.\n * @param params - The parameters to encode.\n * @returns - The ABI encoded parameters\n *\n * @remarks\n * This method is useful when you don't know the type of the parameters you want to encode. It will infer the type of the parameters and then encode them.\n * However, it is not recommended to use this method when you know the type of the parameters you want to encode. In this case, use the {@link encodeParameters} method instead.\n * The type inference is not perfect and can lead to unexpected results. Especially when you want to encode an array, uint that is not uint256 or bytes....\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nexport function inferTypesAndEncodeParameters(params: unknown[]): string {\n\ttry {\n\t\tconst abiParams = inferParamsAbi(params);\n\t\treturn utils.uint8ArrayToHexString(\n\t\t\tencodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded,\n\t\t);\n\t} catch (e) {\n\t\t// throws If the inferred params type caused an error\n\t\tthrow new AbiError('Could not infer types from given params', {\n\t\t\tparams,\n\t\t});\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * \n *  @module ABI\n */\nimport { AbiError } from 'web3-errors';\nimport { sha3Raw } from 'web3-utils';\nimport { AbiFunctionFragment } from 'web3-types';\nimport { isAbiFunctionFragment, jsonInterfaceMethodToString } from '../utils.js';\nimport { encodeParameters } from './parameters_api.js';\n\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param functionName - The function name to encode or the `JSON interface` object of the function.\n * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)\n * @returns - The ABI signature of the function.\n * @example\n * ```ts\n * const signature = web3.eth.abi.encodeFunctionSignature({\n *   name: \"myMethod\",\n *   type: \"function\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"string\",\n *       name: \"myString\",\n *     },\n *   ],\n * });\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');\n * console.log(signature);\n * > 0xb88d4fde\n * ```\n */\nexport const encodeFunctionSignature = (functionName: string | AbiFunctionFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiFunctionFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeFunctionSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name).slice(0, 10);\n};\n\n/**\n * Encodes a function call using its `JSON interface` object and given parameters.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param jsonInterface - The `JSON interface` object of the function.\n * @param params - The parameters to encode\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @example\n * ```ts\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     name: \"myMethod\",\n *     type: \"function\",\n *     inputs: [\n *       {\n *         type: \"uint256\",\n *         name: \"myNumber\",\n *       },\n *       {\n *         type: \"string\",\n *         name: \"myString\",\n *       },\n *     ],\n *   },\n *   [\"2345675643\", \"Hello!%\"]\n * );\n * console.log(sig);\n * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n *\n *\n *\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     inputs: [\n *       {\n *         name: \"account\",\n *         type: \"address\",\n *       },\n *     ],\n *     name: \"balanceOf\",\n *     outputs: [\n *       {\n *         name: \"\",\n *         type: \"uint256\",\n *       },\n *     ],\n *     stateMutability: \"view\",\n *     type: \"function\",\n *   },\n *   [\"0x1234567890123456789012345678901234567890\"]\n * );\n *\n * console.log(sig);\n * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890\n * ```\n */\nexport const encodeFunctionCall = (\n\tjsonInterface: AbiFunctionFragment,\n\tparams: unknown[],\n): string => {\n\tif (!isAbiFunctionFragment(jsonInterface)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeFunctionCall');\n\t}\n\n\treturn `${encodeFunctionSignature(jsonInterface)}${encodeParameters(\n\t\tjsonInterface.inputs ?? [],\n\t\tparams ?? [],\n\t).replace('0x', '')}`;\n};\n","// Find all our documentation at https://docs.near.org\nimport { NearBindgen, near, call, view } from 'near-sdk-js';\nimport { encodeFunctionCall } from \"web3-eth-abi\"\n\n@NearBindgen({})\nclass HelloNear {\n  greeting: string = 'Hello';\n\n  @view({})\n  encode_function_call(): string {\n    const abi_transfer_fragment = {\n      name: \"transfer\",\n      type: \"function\",\n      inputs: [\n        {\n          type: \"address\",\n          name: \"recipient\"\n        },\n        {\n          type: \"uint256\",\n          name: \"amount\"\n        }\n      ]\n    }\n\n    const values = [\"0xabcdef0123abcdef0123abcdef0123abcdef0123\"]\n    const data = encodeFunctionCall(abi_transfer_fragment, values)\n    near.log(data)\n    return data\n  }\n\n  @view({}) // This method is read-only and can be called for free\n  get_greeting(): string {\n    return this.greeting;\n  }\n\n  @call({}) // This method changes the state, for which it cost gas\n  set_greeting({ greeting }: { greeting: string }): void {\n    near.log(`Saving greeting ${greeting}`);\n    this.greeting = greeting;\n  }\n}\n"],"names":["PromiseIndexBrand","TYPE_KEY","TypeBrand","serialize","valueToSerialize","encode","JSON","stringify","key","value","toString","BIGINT","Date","toISOString","DATE","deserialize","valueToDeserialize","parse","decode","_","Object","keys","length","every","includes","BigInt","bytes","s","env","latin1_string_to_uint8array","str","a","uint8array_to_latin1_string","utf8_string_to_uint8array","uint8array_to_utf8_string","CurveType","DataLength","PromiseResult","PromiseError","U64_MAX","EVICTED_REGISTER","log","params","reduce","accumulated","parameter","index","param","undefined","stringified","predecessorAccountId","predecessor_account_id","read_register","currentAccountId","current_account_id","attachedDeposit","attached_deposit","storageReadRaw","returnValue","storage_read","storageWriteRaw","storage_write","inputRaw","input","view","_empty","_target","_key","_descriptor","call","privateFunction","payableFunction","descriptor","originalMethod","args","near","Error","apply","NearBindgen","requireInit","serializer","deserializer","target","_create","_getState","rawState","_deserialize","_saveToStorage","objectToSave","_serialize","_getArgs","forReturn","_reconstruct","classObject","plainObject","item","reconstructor","constructor","reconstruct","_requireInit","number","n","Number","isSafeInteger","bool","b","isBytes","Uint8Array","name","lengths","hash","h","create","outputLen","blockLen","exists","instance","destroyed","checkFinished","finished","output","out","U32_MASK64","_32n","fromBig","le","l","split","lst","Ah","Uint32Array","Al","i","rotlSH","rotlSL","rotlBH","rotlBL","u32","arr","buffer","byteOffset","Math","byteLength","isLE","byteSwap","word","byteSwap32","utf8ToBytes","TextEncoder","toBytes","data","abytes","Hash","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_0x71n","round","R","x","y","push","t","j","_7n","_256n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","Keccak","suffix","enableXOF","rounds","pos","posOut","state","state32","keccak","update","len","take","min","finish","writeInto","set","bufferOut","subarray","xofInto","digestInto","destroy","digest","_cloneInto","to","gen","wrapConstructor","keccak_224","assert","wrapHash","msg","webCrypto","globalThis","crypto","nodeRequire","module","require","bind","node","web","keccak256","k","keccak_256","keccak_384","keccak_512","ERR_ABI_ENCODING","ERR_MULTIPLE_ERRORS","JSONRPC_ERR_REJECTED_REQUEST","JSONRPC_ERR_UNAUTHORIZED","JSONRPC_ERR_UNSUPPORTED_METHOD","JSONRPC_ERR_DISCONNECTED","JSONRPC_ERR_CHAIN_DISCONNECTED","ERR_INVALID_BYTES","ERR_INVALID_NUMBER","ERR_INVALID_BOOLEAN","ERR_VALIDATION","BaseWeb3Error","Array","isArray","cause","MultipleErrors","captureStackTrace","new","stack","innerError","errors","convertToString","unquotValue","v","replace","result","toJSON","message","InvalidBytesError","InvalidValueError","code","InvalidNumberError","genericRpcErrorMessageTemplate","RpcErrorMessages","ERR_RPC_INVALID_JSON","description","ERR_RPC_INVALID_REQUEST","ERR_RPC_INVALID_METHOD","ERR_RPC_INVALID_PARAMS","ERR_RPC_INTERNAL_ERROR","ERR_RPC_UNAVAILABLE_RESOURCE","ERR_RPC_TRANSACTION_REJECTED","ERR_RPC_UNSUPPORTED_METHOD","ERR_RPC_LIMIT_EXCEEDED","ERR_RPC_NOT_SUPPORTED","RpcError","rpcError","error","id","jsonrpc","jsonRpcError","jsonRpc","ParseError","InvalidRequestError","MethodNotFoundError","InvalidParamsError","InternalError","InvalidInputError","ERR_RPC_INVALID_INPUT","MethodNotSupported","ResourceUnavailableError","ResourcesNotFoundError","ERR_RPC_MISSING_RESOURCE","VersionNotSupportedError","SchemaFormatError","type","ERR_SCHEMA_FORMAT","util","assertEqual","val","assertIs","_arg","assertNever","_x","arrayToEnum","items","obj","getValidEnumValues","validKeys","objectKeys","filter","filtered","objectValues","map","e","object","prototype","hasOwnProperty","find","checker","isInteger","isFinite","floor","joinValues","array","separator","join","jsonStringifyReplacer","objectUtil","mergeShapes","first","second","ZodParsedType","getParsedType","string","isNaN","nan","boolean","function","bigint","symbol","null","then","catch","promise","Map","Set","date","unknown","ZodIssueCode","quotelessJson","json","ZodError","issues","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","format","_mapper","mapper","issue","fieldErrors","_errors","processError","unionErrors","returnTypeError","argumentsError","path","curr","el","terminal","isEmpty","flatten","formErrors","errorMap","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","options","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","position","startsWith","endsWith","too_small","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","overrideErrorMap","setErrorMap","getErrorMap","makeIssue","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","slice","reverse","EMPTY_PATH","addIssueToContext","ctx","overrideMap","common","contextualErrorMap","schemaErrorMap","ParseStatus","dirty","abort","mergeArray","status","results","arrayValue","INVALID","mergeObjectAsync","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","freeze","DIRTY","OK","isAborted","isDirty","isValid","isAsync","Promise","__classPrivateFieldGet","receiver","kind","f","TypeError","has","get","__classPrivateFieldSet","SuppressedError","suppressed","errorUtil","errToObj","_ZodEnum_cache","_ZodNativeEnum_cache","ParseInputLazyPath","parent","_cachedPath","_path","handleResult","success","_error","processCreateParams","invalid_type_error","required_error","customMap","iss","_a","_b","ZodType","def","spa","safeParseAsync","_def","safeParse","parseAsync","refine","refinement","superRefine","optional","nullable","nullish","or","and","transform","brand","default","describe","pipe","readonly","isNullable","isOptional","_getType","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","resolve","async","maybeAsyncResult","check","getIssueProperties","_refinement","setError","refinementData","ZodEffects","schema","typeName","ZodFirstPartyTypeKind","effect","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","innerType","defaultValue","ZodBranded","catchValueFunc","ZodCatch","catchValue","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","durationRegex","emailRegex","_emojiRegex","emojiRegex","ipv4Regex","ipv6Regex","base64Regex","dateRegexSource","dateRegex","RegExp","timeRegexSource","regex","precision","timeRegex","datetimeRegex","opts","local","offset","isValidIP","ip","version","test","ZodString","coerce","String","checks","tooBig","tooSmall","URL","lastIndex","testResult","trim","toLowerCase","toUpperCase","_regex","_addCheck","email","url","emoji","uuid","nanoid","cuid","cuid2","ulid","base64","datetime","time","duration","minLength","max","maxLength","nonempty","isDatetime","ch","isDate","isTime","isDuration","isEmail","isURL","isEmoji","isUUID","isNANOID","isCUID","isCUID2","isULID","isIP","isBase64","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","valInt","parseInt","toFixed","stepInt","pow","ZodNumber","arguments","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","minValue","maxValue","isInt","ZodBigInt","ZodBoolean","Boolean","ZodDate","getTime","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","_any","ZodUnknown","_unknown","ZodNever","never","ZodVoid","void","exactLength","all","element","deepPartialify","ZodObject","newShape","shape","fieldSchema","unwrap","ZodTuple","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strict","_c","_d","strip","augmentation","merge","merging","merged","setKey","pick","mask","forEach","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","handleResults","childCtx","types","getDiscriminator","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","enum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","from","discriminatorValues","mergeValues","aType","bType","valid","bKeys","sharedKeys","indexOf","newObj","sharedValue","newArray","itemA","itemB","handleParsed","parsedLeft","parsedRight","left","right","rest","itemIndex","schemas","ZodRecord","keySchema","keyType","valueSchema","valueType","third","ZodMap","entries","finalMap","ZodSet","minSize","size","maxSize","finalizeSet","elements","parsedSet","add","values","ZodFunction","validate","implement","makeArgsIssue","makeReturnsIssue","returns","fn","me","parsedArgs","Reflect","parsedReturns","parameters","returnType","func","validatedFunc","strictImplement","getter","lazySchema","expectedValues","enumValues","Values","Enum","extract","newDef","exclude","opt","WeakMap","nativeEnumValues","promisified","sourceType","checkCtx","arg","fatal","processed","executeRefinement","acc","inner","base","createWithPreprocess","preprocess","removeDefault","newCtx","removeCatch","ZodNaN","BRAND","Symbol","handleAsync","inResult","in","p","_fatal","p2","late","instanceOfType","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","onumber","oboolean","NEVER","z","defaultErrorMap","ZodTransformer","Schema","ZodSchema","any","discriminatedUnion","intersection","lazy","literal","nativeEnum","pipeline","record","strictObject","transformer","tuple","union","errorFormatter","Web3ValidatorError","hex","extraTypes","parseBaseType","strippedType","arraySizes","match","VALID_ETH_BASE_TYPES","baseType","baseTypeSize","substring","convertEthType","parentSchema","typePropertyPresent","keyword","eth","schemaPath","instancePath","abiSchemaToJsonSchema","maxItems","abis","minItems","abi","abiType","abiName","abiComponents","isAbiParameterSchema","level","components","childSchema","lastSchema","nestedTuple","$id","arraySize","assign","ethAbiToJsonSchema","fetchArrayElement","transformJsonDataToAbiFormat","transformedData","newData","dataItem","tupleData","tupleItem","nestedItems","nestedData","nestedItem","codePointToInt","codePoint","hexToNumber","hexValue","num","isUint8Array","isHexStrict","valueToCheck","hexToUint8Array","some","d","checkAddressCheckSum","address","updatedData","uint8ArrayToHexString","ensureIfUint8Array","addressHash","isAddress","checkChecksum","FMT_NUMBER","bigintPower","expo","res","isUInt","bitSize","isBlockTag","BlockTags","isBloom","bloom","isBoolean","isNullish","isTopic","topic","isFilterObject","property","expectedFilterProperties","isBlockNumberOrTag","fromBlock","toBlock","topics","formats","blockNumber","blockTag","blockNumberOrTag","convertToZod","properties","zItem","nextSchema","zodArraySchema","oneOf","oneOfSchema","Validator","factory","validatorInstance","zod","convertErrors","limit","Web3Validator","_validator","validateJSONSchema","uint8ArrayConcat","parts","prev","part","agg","noether","wei","kwei","Kwei","babbage","femtoether","szabo","microether","finney","milliether","milli","ether","kether","grand","mether","gether","tether","PrecisionLossWarning","bytesToUint8Array","validator","validatorUtils","bytesToHex","ecUtf8ToBytes","console","toNumber","toBigInt","padLeft","characterAmount","sign","SHA3_EMPTY_BYTES","processedData","sha3Raw","isAbiErrorFragment","isAbiEventFragment","isAbiFunctionFragment","isSimplifiedStructFormat","mapStructNameAndType","structName","mapStructToCoderFormat","struct","execTyped","exec","groups","bytesRegex","integerRegex","isTupleRegex","__defProp","defineProperty","__defNormalProp","enumerable","configurable","writable","__publicField","BaseError","shortMessage","details","docsPath","metaMessages","structSignatureRegex","isStructSignature","signature","execStructSignature","modifiers","functionModifiers","getParameterCacheKey","parameterCache","indexed","abiParameterWithoutTupleRegex","abiParameterWithTupleRegex","dynamicIntegerRegex","parseAbiParameter","parameterCacheKey","isTuple","isSolidityKeyword","name2","modifier","structs","splitParameters","components_","isSolidityType","isValidDataLocation","abiParameter","current","depth","char","tail","protectedKeywordsRegex","parseStructs","signatures","shallowStructs","signaturesLength","propertiesLength","trimmed","resolvedStructs","entriesLength","resolveStructs","typeWithoutTupleRegex","abiParameters","ancestors","parseAbiParameter2","WORD_SIZE","alloc","convertExternalAbiParameter","abiParam","c","isAbiParameter","toAbiParams","structInfo","AbiError","extractArrayType","arrayParenthesisStart","lastIndexOf","arrayParamType","sizeString","ADDRESS_BYTES_COUNT","ADDRESS_OFFSET","encodeAddress","addressBytes","utils","dynamic","numberLimits","bigIntToUint8Array","encodeNumber","encoded","encodeBoolean","toBool","InvalidBooleanError","MAX_STATIC_BYTES_COUNT","encodeBytes","partsLength","ceil","encodeString","_param","encodeDynamicParams","encodedParams","staticSize","dynamicSize","staticParams","dynamicParams","encodedParam","encodeArray","arrayItemParam","dynamicItems","arrayLength","encodedLength","encodingResult","encodeParamFromAbiParameter","encodeTuple","narrowedInput","paramComponent","paramInput","paramName","encodeParameters","abiParams","encodeFunctionSignature","functionName","jsonInterfaceMethodToString","encodeFunctionCall","HelloNear","_dec","_dec2","_dec3","_dec4","_class","_class2","greeting","encode_function_call","abi_transfer_fragment","inputs","get_greeting","set_greeting","_applyDecoratedDescriptor","getOwnPropertyDescriptor","_state","_contract","_args","_result","onReturn","value_return"],"mappings":"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"}